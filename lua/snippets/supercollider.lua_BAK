-- SuperCollider snippets for LuaSnip
-- Snippet generator: SCNvim.sc
local ls = require'luasnip'
local s = ls.snippet 
local i = ls.insert_node
local t = ls.text_node
local snippets = {
s( {trig = "A2B.ar", name = "A2B.ar", dscr = "Snippet for A2B.ar, auto generated by SCNvim" }, {t("A2B.ar"),t("("),t("a:"),i(1, "nil"),t(", "), t("b:"),i(2, "nil"),t(", "), t("c:"),i(3, "nil"),t(", "), t("d:"),i(4, "nil"), t(")"),}),
s( {trig = "A2K.kr", name = "A2K.kr", dscr = "Snippet for A2K.kr, auto generated by SCNvim" }, {t("A2K.kr"),t("("),t("in:"),i(1, "0.0"), t(")"),}),
s( {trig = "AY.ar", name = "AY.ar", dscr = "Snippet for AY.ar, auto generated by SCNvim" }, {t("AY.ar"),t("("),t("tonea:"),i(1, "1777"),t(", "), t("toneb:"),i(2, "1666"),t(", "), t("tonec:"),i(3, "1555"),t(", "), t("noise:"),i(4, "1"),t(", "), t("control:"),i(5, "7"),t(", "), t("vola:"),i(6, "15"),t(", "), t("volb:"),i(7, "15"),t(", "), t("volc:"),i(8, "15"),t(", "), t("envfreq:"),i(9, "4"),t(", "), t("envstyle:"),i(10, "1"),t(", "), t("chiptype:"),i(11, "0"),t(", "), t("mul:"),i(12, "1"),t(", "), t("add:"),i(13, "0"), t(")"),}),
s( {trig = "AY.categories", name = "AY.categories", dscr = "Snippet for AY.categories, auto generated by SCNvim" }, {t("AY.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AY.freqtotone", name = "AY.freqtotone", dscr = "Snippet for AY.freqtotone, auto generated by SCNvim" }, {t("AY.freqtotone"),t("("),t("freq:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractDispatcher.new", name = "AbstractDispatcher.new", dscr = "Snippet for AbstractDispatcher.new, auto generated by SCNvim" }, {t("AbstractDispatcher.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractDispatcher.initClass", name = "AbstractDispatcher.initClass", dscr = "Snippet for AbstractDispatcher.initClass, auto generated by SCNvim" }, {t("AbstractDispatcher.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractGridLines.new", name = "AbstractGridLines.new", dscr = "Snippet for AbstractGridLines.new, auto generated by SCNvim" }, {t("AbstractGridLines.new"),t("("),t("spec:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractGroup.new", name = "AbstractGroup.new", dscr = "Snippet for AbstractGroup.new, auto generated by SCNvim" }, {t("AbstractGroup.new"),t("("),t("target:"),i(1, "nil"),t(", "), t("addAction:"),i(2, "addToHead"), t(")"),}),
s( {trig = "AbstractGroup.after", name = "AbstractGroup.after", dscr = "Snippet for AbstractGroup.after, auto generated by SCNvim" }, {t("AbstractGroup.after"),t("("),t("aNode:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractGroup.before", name = "AbstractGroup.before", dscr = "Snippet for AbstractGroup.before, auto generated by SCNvim" }, {t("AbstractGroup.before"),t("("),t("aNode:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractGroup.head", name = "AbstractGroup.head", dscr = "Snippet for AbstractGroup.head, auto generated by SCNvim" }, {t("AbstractGroup.head"),t("("),t("aGroup:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractGroup.tail", name = "AbstractGroup.tail", dscr = "Snippet for AbstractGroup.tail, auto generated by SCNvim" }, {t("AbstractGroup.tail"),t("("),t("aGroup:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractGroup.replace", name = "AbstractGroup.replace", dscr = "Snippet for AbstractGroup.replace, auto generated by SCNvim" }, {t("AbstractGroup.replace"),t("("),t("nodeToReplace:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractGroup.creationCmd", name = "AbstractGroup.creationCmd", dscr = "Snippet for AbstractGroup.creationCmd, auto generated by SCNvim" }, {t("AbstractGroup.creationCmd"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractIn.isInputUGen", name = "AbstractIn.isInputUGen", dscr = "Snippet for AbstractIn.isInputUGen, auto generated by SCNvim" }, {t("AbstractIn.isInputUGen"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractMDPlugin.clearMetadata", name = "AbstractMDPlugin.clearMetadata", dscr = "Snippet for AbstractMDPlugin.clearMetadata, auto generated by SCNvim" }, {t("AbstractMDPlugin.clearMetadata"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractMDPlugin.writeMetadata", name = "AbstractMDPlugin.writeMetadata", dscr = "Snippet for AbstractMDPlugin.writeMetadata, auto generated by SCNvim" }, {t("AbstractMDPlugin.writeMetadata"),t("("),t("metadata:"),i(1, "nil"),t(", "), t("synthdef:"),i(2, "nil"),t(", "), t("path:"),i(3, "nil"), t(")"),}),
s( {trig = "AbstractMDPlugin.writeMetadataFile", name = "AbstractMDPlugin.writeMetadataFile", dscr = "Snippet for AbstractMDPlugin.writeMetadataFile, auto generated by SCNvim" }, {t("AbstractMDPlugin.writeMetadataFile"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractMDPlugin.readMetadata", name = "AbstractMDPlugin.readMetadata", dscr = "Snippet for AbstractMDPlugin.readMetadata, auto generated by SCNvim" }, {t("AbstractMDPlugin.readMetadata"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractMDPlugin.readMetadataFile", name = "AbstractMDPlugin.readMetadataFile", dscr = "Snippet for AbstractMDPlugin.readMetadataFile, auto generated by SCNvim" }, {t("AbstractMDPlugin.readMetadataFile"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractMDPlugin.applyExtension", name = "AbstractMDPlugin.applyExtension", dscr = "Snippet for AbstractMDPlugin.applyExtension, auto generated by SCNvim" }, {t("AbstractMDPlugin.applyExtension"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractMDPlugin.mdExtension", name = "AbstractMDPlugin.mdExtension", dscr = "Snippet for AbstractMDPlugin.mdExtension, auto generated by SCNvim" }, {t("AbstractMDPlugin.mdExtension"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractNodeWatcher.new", name = "AbstractNodeWatcher.new", dscr = "Snippet for AbstractNodeWatcher.new, auto generated by SCNvim" }, {t("AbstractNodeWatcher.new"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractOut.isOutputUGen", name = "AbstractOut.isOutputUGen", dscr = "Snippet for AbstractOut.isOutputUGen, auto generated by SCNvim" }, {t("AbstractOut.isOutputUGen"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractOut.numFixedArgs", name = "AbstractOut.numFixedArgs", dscr = "Snippet for AbstractOut.numFixedArgs, auto generated by SCNvim" }, {t("AbstractOut.numFixedArgs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractPlayControl.new", name = "AbstractPlayControl.new", dscr = "Snippet for AbstractPlayControl.new, auto generated by SCNvim" }, {t("AbstractPlayControl.new"),t("("),t("source:"),i(1, "nil"),t(", "), t("channelOffset:"),i(2, "0"), t(")"),}),
s( {trig = "AbstractPlayControl.initClass", name = "AbstractPlayControl.initClass", dscr = "Snippet for AbstractPlayControl.initClass, auto generated by SCNvim" }, {t("AbstractPlayControl.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractResponderFunc.initClass", name = "AbstractResponderFunc.initClass", dscr = "Snippet for AbstractResponderFunc.initClass, auto generated by SCNvim" }, {t("AbstractResponderFunc.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractResponderFunc.allFuncProxies", name = "AbstractResponderFunc.allFuncProxies", dscr = "Snippet for AbstractResponderFunc.allFuncProxies, auto generated by SCNvim" }, {t("AbstractResponderFunc.allFuncProxies"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractResponderFunc.allEnabled", name = "AbstractResponderFunc.allEnabled", dscr = "Snippet for AbstractResponderFunc.allEnabled, auto generated by SCNvim" }, {t("AbstractResponderFunc.allEnabled"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractResponderFunc.allDisabled", name = "AbstractResponderFunc.allDisabled", dscr = "Snippet for AbstractResponderFunc.allDisabled, auto generated by SCNvim" }, {t("AbstractResponderFunc.allDisabled"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractServerAction.init", name = "AbstractServerAction.init", dscr = "Snippet for AbstractServerAction.init, auto generated by SCNvim" }, {t("AbstractServerAction.init"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractServerAction.performFunction", name = "AbstractServerAction.performFunction", dscr = "Snippet for AbstractServerAction.performFunction, auto generated by SCNvim" }, {t("AbstractServerAction.performFunction"),t("("),t("server:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "AbstractServerAction.run", name = "AbstractServerAction.run", dscr = "Snippet for AbstractServerAction.run, auto generated by SCNvim" }, {t("AbstractServerAction.run"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractServerAction.functionSelector", name = "AbstractServerAction.functionSelector", dscr = "Snippet for AbstractServerAction.functionSelector, auto generated by SCNvim" }, {t("AbstractServerAction.functionSelector"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractServerAction.add", name = "AbstractServerAction.add", dscr = "Snippet for AbstractServerAction.add, auto generated by SCNvim" }, {t("AbstractServerAction.add"),t("("),t("object:"),i(1, "nil"),t(", "), t("server:"),i(2, "nil"), t(")"),}),
s( {trig = "AbstractServerAction.addToAll", name = "AbstractServerAction.addToAll", dscr = "Snippet for AbstractServerAction.addToAll, auto generated by SCNvim" }, {t("AbstractServerAction.addToAll"),t("("),t("object:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractServerAction.remove", name = "AbstractServerAction.remove", dscr = "Snippet for AbstractServerAction.remove, auto generated by SCNvim" }, {t("AbstractServerAction.remove"),t("("),t("object:"),i(1, "nil"),t(", "), t("server:"),i(2, "nil"), t(")"),}),
s( {trig = "AbstractServerAction.removeServer", name = "AbstractServerAction.removeServer", dscr = "Snippet for AbstractServerAction.removeServer, auto generated by SCNvim" }, {t("AbstractServerAction.removeServer"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractSystemAction.init", name = "AbstractSystemAction.init", dscr = "Snippet for AbstractSystemAction.init, auto generated by SCNvim" }, {t("AbstractSystemAction.init"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractSystemAction.add", name = "AbstractSystemAction.add", dscr = "Snippet for AbstractSystemAction.add, auto generated by SCNvim" }, {t("AbstractSystemAction.add"),t("("),t("object:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractSystemAction.remove", name = "AbstractSystemAction.remove", dscr = "Snippet for AbstractSystemAction.remove, auto generated by SCNvim" }, {t("AbstractSystemAction.remove"),t("("),t("object:"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractSystemAction.removeAll", name = "AbstractSystemAction.removeAll", dscr = "Snippet for AbstractSystemAction.removeAll, auto generated by SCNvim" }, {t("AbstractSystemAction.removeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractSystemAction.objects", name = "AbstractSystemAction.objects", dscr = "Snippet for AbstractSystemAction.objects, auto generated by SCNvim" }, {t("AbstractSystemAction.objects"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AbstractSystemAction.objects_", name = "AbstractSystemAction.objects_", dscr = "Snippet for AbstractSystemAction.objects_, auto generated by SCNvim" }, {t("AbstractSystemAction.objects_"),t("("),t("obj:"),i(1, "nil"), t(")"),}),
s( {trig = "Allpass1.ar", name = "Allpass1.ar", dscr = "Snippet for Allpass1.ar, auto generated by SCNvim" }, {t("Allpass1.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Allpass2.ar", name = "Allpass2.ar", dscr = "Snippet for Allpass2.ar, auto generated by SCNvim" }, {t("Allpass2.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "AmpComp.ir", name = "AmpComp.ir", dscr = "Snippet for AmpComp.ir, auto generated by SCNvim" }, {t("AmpComp.ir"),t("("),t("freq:"),i(1, "nil"),t(", "), t("root:"),i(2, "nil"),t(", "), t("exp:"),i(3, "0.3333"), t(")"),}),
s( {trig = "AmpComp.ar", name = "AmpComp.ar", dscr = "Snippet for AmpComp.ar, auto generated by SCNvim" }, {t("AmpComp.ar"),t("("),t("freq:"),i(1, "nil"),t(", "), t("root:"),i(2, "nil"),t(", "), t("exp:"),i(3, "0.3333"), t(")"),}),
s( {trig = "AmpComp.kr", name = "AmpComp.kr", dscr = "Snippet for AmpComp.kr, auto generated by SCNvim" }, {t("AmpComp.kr"),t("("),t("freq:"),i(1, "nil"),t(", "), t("root:"),i(2, "nil"),t(", "), t("exp:"),i(3, "0.3333"), t(")"),}),
s( {trig = "AmpCompA.ir", name = "AmpCompA.ir", dscr = "Snippet for AmpCompA.ir, auto generated by SCNvim" }, {t("AmpCompA.ir"),t("("),t("freq:"),i(1, "1000"),t(", "), t("root:"),i(2, "0"),t(", "), t("minAmp:"),i(3, "0.32"),t(", "), t("rootAmp:"),i(4, "1.0"), t(")"),}),
s( {trig = "AmpCompA.ar", name = "AmpCompA.ar", dscr = "Snippet for AmpCompA.ar, auto generated by SCNvim" }, {t("AmpCompA.ar"),t("("),t("freq:"),i(1, "1000"),t(", "), t("root:"),i(2, "0"),t(", "), t("minAmp:"),i(3, "0.32"),t(", "), t("rootAmp:"),i(4, "1.0"), t(")"),}),
s( {trig = "AmpCompA.kr", name = "AmpCompA.kr", dscr = "Snippet for AmpCompA.kr, auto generated by SCNvim" }, {t("AmpCompA.kr"),t("("),t("freq:"),i(1, "1000"),t(", "), t("root:"),i(2, "0"),t(", "), t("minAmp:"),i(3, "0.32"),t(", "), t("rootAmp:"),i(4, "1.0"), t(")"),}),
s( {trig = "Amplitude.ar", name = "Amplitude.ar", dscr = "Snippet for Amplitude.ar, auto generated by SCNvim" }, {t("Amplitude.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("attackTime:"),i(2, "0.01"),t(", "), t("releaseTime:"),i(3, "0.01"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Amplitude.kr", name = "Amplitude.kr", dscr = "Snippet for Amplitude.kr, auto generated by SCNvim" }, {t("Amplitude.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("attackTime:"),i(2, "0.01"),t(", "), t("releaseTime:"),i(3, "0.01"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "AmplitudeMod.ar", name = "AmplitudeMod.ar", dscr = "Snippet for AmplitudeMod.ar, auto generated by SCNvim" }, {t("AmplitudeMod.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("attackTime:"),i(2, "0.01"),t(", "), t("releaseTime:"),i(3, "0.01"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "AmplitudeMod.kr", name = "AmplitudeMod.kr", dscr = "Snippet for AmplitudeMod.kr, auto generated by SCNvim" }, {t("AmplitudeMod.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("attackTime:"),i(2, "0.01"),t(", "), t("releaseTime:"),i(3, "0.01"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "AnalogIn.ar", name = "AnalogIn.ar", dscr = "Snippet for AnalogIn.ar, auto generated by SCNvim" }, {t("AnalogIn.ar"),t("("),t("analogPin:"),i(1, "0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "AnalogIn.kr", name = "AnalogIn.kr", dscr = "Snippet for AnalogIn.kr, auto generated by SCNvim" }, {t("AnalogIn.kr"),t("("),t("analogPin:"),i(1, "0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "AnalogOut.ar", name = "AnalogOut.ar", dscr = "Snippet for AnalogOut.ar, auto generated by SCNvim" }, {t("AnalogOut.ar"),t("("),t("analogPin:"),i(1, "0"),t(", "), t("output:"),i(2, "0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "AnalogOut.kr", name = "AnalogOut.kr", dscr = "Snippet for AnalogOut.kr, auto generated by SCNvim" }, {t("AnalogOut.kr"),t("("),t("analogPin:"),i(1, "0"),t(", "), t("output:"),i(2, "0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "AnalyseEvents2.ar", name = "AnalyseEvents2.ar", dscr = "Snippet for AnalyseEvents2.ar, auto generated by SCNvim" }, {t("AnalyseEvents2.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("threshold:"),i(3, "0.34"),t(", "), t("triggerid:"),i(4, "101"),t(", "), t("circular:"),i(5, "0"),t(", "), t("pitch:"),i(6, "0"), t(")"),}),
s( {trig = "AppClock.initClass", name = "AppClock.initClass", dscr = "Snippet for AppClock.initClass, auto generated by SCNvim" }, {t("AppClock.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AppClock.clear", name = "AppClock.clear", dscr = "Snippet for AppClock.clear, auto generated by SCNvim" }, {t("AppClock.clear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AppClock.sched", name = "AppClock.sched", dscr = "Snippet for AppClock.sched, auto generated by SCNvim" }, {t("AppClock.sched"),t("("),t("delta:"),i(1, "nil"),t(", "), t("item:"),i(2, "nil"), t(")"),}),
s( {trig = "AppClock.schedAbs", name = "AppClock.schedAbs", dscr = "Snippet for AppClock.schedAbs, auto generated by SCNvim" }, {t("AppClock.schedAbs"),t("("),t("time:"),i(1, "nil"),t(", "), t("item:"),i(2, "nil"), t(")"),}),
s( {trig = "AppClock.tick", name = "AppClock.tick", dscr = "Snippet for AppClock.tick, auto generated by SCNvim" }, {t("AppClock.tick"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AppClock.prSchedNotify", name = "AppClock.prSchedNotify", dscr = "Snippet for AppClock.prSchedNotify, auto generated by SCNvim" }, {t("AppClock.prSchedNotify"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Archive.global", name = "Archive.global", dscr = "Snippet for Archive.global, auto generated by SCNvim" }, {t("Archive.global"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Archive.global_", name = "Archive.global_", dscr = "Snippet for Archive.global_, auto generated by SCNvim" }, {t("Archive.global_"),t("("),t("obj:"),i(1, "nil"), t(")"),}),
s( {trig = "Archive.initClass", name = "Archive.initClass", dscr = "Snippet for Archive.initClass, auto generated by SCNvim" }, {t("Archive.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Archive.read", name = "Archive.read", dscr = "Snippet for Archive.read, auto generated by SCNvim" }, {t("Archive.read"),t("("),t("filename:"),i(1, "nil"), t(")"),}),
s( {trig = "Archive.write", name = "Archive.write", dscr = "Snippet for Archive.write, auto generated by SCNvim" }, {t("Archive.write"),t("("),t("filename:"),i(1, "nil"), t(")"),}),
s( {trig = "ArneodoCoulletTresser.categories", name = "ArneodoCoulletTresser.categories", dscr = "Snippet for ArneodoCoulletTresser.categories, auto generated by SCNvim" }, {t("ArneodoCoulletTresser.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ArneodoCoulletTresser.ar", name = "ArneodoCoulletTresser.ar", dscr = "Snippet for ArneodoCoulletTresser.ar, auto generated by SCNvim" }, {t("ArneodoCoulletTresser.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("alpha:"),i(2, "1.5"),t(", "), t("h:"),i(3, "0.05"),t(", "), t("xi:"),i(4, "0.5"),t(", "), t("yi:"),i(5, "0.5"),t(", "), t("zi:"),i(6, "0.5"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "Array.with", name = "Array.with", dscr = "Snippet for Array.with, auto generated by SCNvim" }, {t("Array.with"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "Array2D.new", name = "Array2D.new", dscr = "Snippet for Array2D.new, auto generated by SCNvim" }, {t("Array2D.new"),t("("),t("rows:"),i(1, "1"),t(", "), t("cols:"),i(2, "1"), t(")"),}),
s( {trig = "Array2D.fromArray", name = "Array2D.fromArray", dscr = "Snippet for Array2D.fromArray, auto generated by SCNvim" }, {t("Array2D.fromArray"),t("("),t("rows:"),i(1, "nil"),t(", "), t("cols:"),i(2, "nil"),t(", "), t("array:"),i(3, "nil"), t(")"),}),
s( {trig = "ArrayMax.ar", name = "ArrayMax.ar", dscr = "Snippet for ArrayMax.ar, auto generated by SCNvim" }, {t("ArrayMax.ar"),t("("),t("array:"),i(1, "nil"), t(")"),}),
s( {trig = "ArrayMax.kr", name = "ArrayMax.kr", dscr = "Snippet for ArrayMax.kr, auto generated by SCNvim" }, {t("ArrayMax.kr"),t("("),t("array:"),i(1, "nil"), t(")"),}),
s( {trig = "ArrayMax.categories", name = "ArrayMax.categories", dscr = "Snippet for ArrayMax.categories, auto generated by SCNvim" }, {t("ArrayMax.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ArrayedCollection.newClear", name = "ArrayedCollection.newClear", dscr = "Snippet for ArrayedCollection.newClear, auto generated by SCNvim" }, {t("ArrayedCollection.newClear"),t("("),t("indexedSize:"),i(1, "0"), t(")"),}),
s( {trig = "ArrayedCollection.iota", name = "ArrayedCollection.iota", dscr = "Snippet for ArrayedCollection.iota, auto generated by SCNvim" }, {t("ArrayedCollection.iota"),t("("),t("sizes:"),i(1, "[]"), t(")"),}),
s( {trig = "Association.new", name = "Association.new", dscr = "Snippet for Association.new, auto generated by SCNvim" }, {t("Association.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("value:"),i(2, "nil"), t(")"),}),
s( {trig = "AtsAmp.ar", name = "AtsAmp.ar", dscr = "Snippet for AtsAmp.ar, auto generated by SCNvim" }, {t("AtsAmp.ar"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("partialNum:"),i(2, "0"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "AtsAmp.kr", name = "AtsAmp.kr", dscr = "Snippet for AtsAmp.kr, auto generated by SCNvim" }, {t("AtsAmp.kr"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("partialNum:"),i(2, "0"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "AtsBand.ar", name = "AtsBand.ar", dscr = "Snippet for AtsBand.ar, auto generated by SCNvim" }, {t("AtsBand.ar"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("band:"),i(2, "nil"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "AtsFile.new", name = "AtsFile.new", dscr = "Snippet for AtsFile.new, auto generated by SCNvim" }, {t("AtsFile.new"),t("("),t("path:"),i(1, "nil"),t(", "), t("server:"),i(2, "nil"), t(")"),}),
s( {trig = "AtsFile.load", name = "AtsFile.load", dscr = "Snippet for AtsFile.load, auto generated by SCNvim" }, {t("AtsFile.load"),t("("),t("path:"),i(1, "nil"),t(", "), t("server:"),i(2, "nil"), t(")"),}),
s( {trig = "AtsFreq.ar", name = "AtsFreq.ar", dscr = "Snippet for AtsFreq.ar, auto generated by SCNvim" }, {t("AtsFreq.ar"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("partialNum:"),i(2, "0"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "AtsFreq.kr", name = "AtsFreq.kr", dscr = "Snippet for AtsFreq.kr, auto generated by SCNvim" }, {t("AtsFreq.kr"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("partialNum:"),i(2, "0"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "AtsNoiSynth.ar", name = "AtsNoiSynth.ar", dscr = "Snippet for AtsNoiSynth.ar, auto generated by SCNvim" }, {t("AtsNoiSynth.ar"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("numPartials:"),i(2, "0"),t(", "), t("partialStart:"),i(3, "0"),t(", "), t("partialSkip:"),i(4, "1"),t(", "), t("filePointer:"),i(5, "0"),t(", "), t("sinePct:"),i(6, "1.0"),t(", "), t("noisePct:"),i(7, "1.0"),t(", "), t("freqMul:"),i(8, "1.0"),t(", "), t("freqAdd:"),i(9, "0.0"),t(", "), t("numBands:"),i(10, "25"),t(", "), t("bandStart:"),i(11, "0"),t(", "), t("bandSkip:"),i(12, "1"),t(", "), t("mul:"),i(13, "1.0"),t(", "), t("add:"),i(14, "0.0"), t(")"),}),
s( {trig = "AtsNoise.ar", name = "AtsNoise.ar", dscr = "Snippet for AtsNoise.ar, auto generated by SCNvim" }, {t("AtsNoise.ar"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("bandNum:"),i(2, "0"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "AtsNoise.kr", name = "AtsNoise.kr", dscr = "Snippet for AtsNoise.kr, auto generated by SCNvim" }, {t("AtsNoise.kr"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("bandNum:"),i(2, "0"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "AtsParInfo.categories", name = "AtsParInfo.categories", dscr = "Snippet for AtsParInfo.categories, auto generated by SCNvim" }, {t("AtsParInfo.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AtsParInfo.ar", name = "AtsParInfo.ar", dscr = "Snippet for AtsParInfo.ar, auto generated by SCNvim" }, {t("AtsParInfo.ar"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("partialNum:"),i(2, "0"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "AtsParInfo.kr", name = "AtsParInfo.kr", dscr = "Snippet for AtsParInfo.kr, auto generated by SCNvim" }, {t("AtsParInfo.kr"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("partialNum:"),i(2, "0"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "AtsPartial.ar", name = "AtsPartial.ar", dscr = "Snippet for AtsPartial.ar, auto generated by SCNvim" }, {t("AtsPartial.ar"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("partial:"),i(2, "nil"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("freqMul:"),i(4, "1.0"),t(", "), t("freqAdd:"),i(5, "0.0"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "AtsSynth.ar", name = "AtsSynth.ar", dscr = "Snippet for AtsSynth.ar, auto generated by SCNvim" }, {t("AtsSynth.ar"),t("("),t("atsbuffer:"),i(1, "nil"),t(", "), t("numPartials:"),i(2, "0"),t(", "), t("partialStart:"),i(3, "0"),t(", "), t("partialSkip:"),i(4, "1"),t(", "), t("filePointer:"),i(5, "0"),t(", "), t("freqMul:"),i(6, "1.0"),t(", "), t("freqAdd:"),i(7, "0.0"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "AtsUGen.categories", name = "AtsUGen.categories", dscr = "Snippet for AtsUGen.categories, auto generated by SCNvim" }, {t("AtsUGen.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AttackSlope.kr", name = "AttackSlope.kr", dscr = "Snippet for AttackSlope.kr, auto generated by SCNvim" }, {t("AttackSlope.kr"),t("("),t("input:"),i(1, "nil"),t(", "), t("windowsize:"),i(2, "1024"),t(", "), t("peakpicksize:"),i(3, "20"),t(", "), t("leak:"),i(4, "0.999"),t(", "), t("energythreshold:"),i(5, "0.01"),t(", "), t("sumthreshold:"),i(6, "20"),t(", "), t("mingap:"),i(7, "30"),t(", "), t("numslopesaveraged:"),i(8, "10"), t(")"),}),
s( {trig = "AudioControl.names", name = "AudioControl.names", dscr = "Snippet for AudioControl.names, auto generated by SCNvim" }, {t("AudioControl.names"),t("("),t("names:"),i(1, "nil"), t(")"),}),
s( {trig = "AudioControl.ar", name = "AudioControl.ar", dscr = "Snippet for AudioControl.ar, auto generated by SCNvim" }, {t("AudioControl.ar"),t("("),t("values:"),i(1, "nil"), t(")"),}),
s( {trig = "AudioControl.isAudioControlUGen", name = "AudioControl.isAudioControlUGen", dscr = "Snippet for AudioControl.isAudioControlUGen, auto generated by SCNvim" }, {t("AudioControl.isAudioControlUGen"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AudioControl.isControlUGen", name = "AudioControl.isControlUGen", dscr = "Snippet for AudioControl.isControlUGen, auto generated by SCNvim" }, {t("AudioControl.isControlUGen"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AudioIn.ar", name = "AudioIn.ar", dscr = "Snippet for AudioIn.ar, auto generated by SCNvim" }, {t("AudioIn.ar"),t("("),t("channel:"),i(1, "0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "AudioIn.channelOffset", name = "AudioIn.channelOffset", dscr = "Snippet for AudioIn.channelOffset, auto generated by SCNvim" }, {t("AudioIn.channelOffset"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "AudioMSG.ar", name = "AudioMSG.ar", dscr = "Snippet for AudioMSG.ar, auto generated by SCNvim" }, {t("AudioMSG.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("index:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "AutoTrack.kr", name = "AutoTrack.kr", dscr = "Snippet for AutoTrack.kr, auto generated by SCNvim" }, {t("AutoTrack.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("lock:"),i(2, "0"), t(")"),}),
s( {trig = "AverageOutput.ar", name = "AverageOutput.ar", dscr = "Snippet for AverageOutput.ar, auto generated by SCNvim" }, {t("AverageOutput.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("trig:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "AverageOutput.kr", name = "AverageOutput.kr", dscr = "Snippet for AverageOutput.kr, auto generated by SCNvim" }, {t("AverageOutput.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("trig:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "B2A.ar", name = "B2A.ar", dscr = "Snippet for B2A.ar, auto generated by SCNvim" }, {t("B2A.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"), t(")"),}),
s( {trig = "B2Ster.ar", name = "B2Ster.ar", dscr = "Snippet for B2Ster.ar, auto generated by SCNvim" }, {t("B2Ster.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "B2UHJ.ar", name = "B2UHJ.ar", dscr = "Snippet for B2UHJ.ar, auto generated by SCNvim" }, {t("B2UHJ.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"), t(")"),}),
s( {trig = "BAllPass.ar", name = "BAllPass.ar", dscr = "Snippet for BAllPass.ar, auto generated by SCNvim" }, {t("BAllPass.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BAllPass.sc", name = "BAllPass.sc", dscr = "Snippet for BAllPass.sc, auto generated by SCNvim" }, {t("BAllPass.sc"),t("("),t("dummy:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"), t(")"),}),
s( {trig = "BBandPass.ar", name = "BBandPass.ar", dscr = "Snippet for BBandPass.ar, auto generated by SCNvim" }, {t("BBandPass.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("bw:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BBandPass.sc", name = "BBandPass.sc", dscr = "Snippet for BBandPass.sc, auto generated by SCNvim" }, {t("BBandPass.sc"),t("("),t("dummy:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("bw:"),i(3, "1.0"), t(")"),}),
s( {trig = "BBandStop.ar", name = "BBandStop.ar", dscr = "Snippet for BBandStop.ar, auto generated by SCNvim" }, {t("BBandStop.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("bw:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BBandStop.sc", name = "BBandStop.sc", dscr = "Snippet for BBandStop.sc, auto generated by SCNvim" }, {t("BBandStop.sc"),t("("),t("dummy:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("bw:"),i(3, "1.0"), t(")"),}),
s( {trig = "BBlockerBuf.ar", name = "BBlockerBuf.ar", dscr = "Snippet for BBlockerBuf.ar, auto generated by SCNvim" }, {t("BBlockerBuf.ar"),t("("),t("freq:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("startpoint:"),i(3, "0"), t(")"),}),
s( {trig = "BBlockerProgram.new", name = "BBlockerProgram.new", dscr = "Snippet for BBlockerProgram.new, auto generated by SCNvim" }, {t("BBlockerProgram.new"),t("("),t("program:"),i(1, "nil"), t(")"),}),
s( {trig = "BBlockerProgram.find", name = "BBlockerProgram.find", dscr = "Snippet for BBlockerProgram.find, auto generated by SCNvim" }, {t("BBlockerProgram.find"),t("("),t("identifier:"),i(1, "nil"), t(")"),}),
s( {trig = "BBlockerProgram.descOf", name = "BBlockerProgram.descOf", dscr = "Snippet for BBlockerProgram.descOf, auto generated by SCNvim" }, {t("BBlockerProgram.descOf"),t("("),t("key:"),i(1, "nil"), t(")"),}),
s( {trig = "BBlockerProgram.printDescs", name = "BBlockerProgram.printDescs", dscr = "Snippet for BBlockerProgram.printDescs, auto generated by SCNvim" }, {t("BBlockerProgram.printDescs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BBlockerProgram.descs", name = "BBlockerProgram.descs", dscr = "Snippet for BBlockerProgram.descs, auto generated by SCNvim" }, {t("BBlockerProgram.descs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BBlockerProgram.initStates", name = "BBlockerProgram.initStates", dscr = "Snippet for BBlockerProgram.initStates, auto generated by SCNvim" }, {t("BBlockerProgram.initStates"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BF.ar", name = "BF.ar", dscr = "Snippet for BF.ar, auto generated by SCNvim" }, {t("BF.ar"),t("("),t("sig:"),i(1, "nil"),t(", "), t("point:"),i(2, "nil"),t(", "), t("directivity:"),i(3, "nil"),t(", "), t("speakers:"),i(4, "[]"), t(")"),}),
s( {trig = "BF.ar1", name = "BF.ar1", dscr = "Snippet for BF.ar1, auto generated by SCNvim" }, {t("BF.ar1"),t("("),t("pointsource:"),i(1, "nil"),t(", "), t("directivity:"),i(2, "nil"),t(", "), t("speakers:"),i(3, "[]"), t(")"),}),
s( {trig = "BF.asStereo", name = "BF.asStereo", dscr = "Snippet for BF.asStereo, auto generated by SCNvim" }, {t("BF.asStereo"),t("("),t("sig:"),i(1, "nil"),t(", "), t("point:"),i(2, "nil"), t(")"),}),
s( {trig = "BF.asUHJ", name = "BF.asUHJ", dscr = "Snippet for BF.asUHJ, auto generated by SCNvim" }, {t("BF.asUHJ"),t("("),t("sig:"),i(1, "nil"),t(", "), t("point:"),i(2, "nil"), t(")"),}),
s( {trig = "BF.asUHJ1", name = "BF.asUHJ1", dscr = "Snippet for BF.asUHJ1, auto generated by SCNvim" }, {t("BF.asUHJ1"),t("("),t("sig:"),i(1, "nil"),t(", "), t("point:"),i(2, "nil"),t(", "), t("fftsize:"),i(3, "nil"),t(", "), t("numffts:"),i(4, "nil"), t(")"),}),
s( {trig = "BFDecode.ar", name = "BFDecode.ar", dscr = "Snippet for BFDecode.ar, auto generated by SCNvim" }, {t("BFDecode.ar"),t("("),t("sig:"),i(1, "nil"),t(", "), t("directivity:"),i(2, "1.0"),t(", "), t("spkrs:"),i(3, "[]"), t(")"),}),
s( {trig = "BFDecode.rect", name = "BFDecode.rect", dscr = "Snippet for BFDecode.rect, auto generated by SCNvim" }, {t("BFDecode.rect"),t("("),t("sig:"),i(1, "nil"),t(", "), t("width:"),i(2, "4"),t(", "), t("length:"),i(3, "7"),t(", "), t("directivity:"),i(4, "1.0"), t(")"),}),
s( {trig = "BFDecode.asQuad", name = "BFDecode.asQuad", dscr = "Snippet for BFDecode.asQuad, auto generated by SCNvim" }, {t("BFDecode.asQuad"),t("("),t("sig:"),i(1, "nil"), t(")"),}),
s( {trig = "BFDecode.asStereo", name = "BFDecode.asStereo", dscr = "Snippet for BFDecode.asStereo, auto generated by SCNvim" }, {t("BFDecode.asStereo"),t("("),t("sig:"),i(1, "nil"), t(")"),}),
s( {trig = "BFDecode.asUHJ", name = "BFDecode.asUHJ", dscr = "Snippet for BFDecode.asUHJ, auto generated by SCNvim" }, {t("BFDecode.asUHJ"),t("("),t("sig:"),i(1, "nil"), t(")"),}),
s( {trig = "BFDecode.asUHJ1", name = "BFDecode.asUHJ1", dscr = "Snippet for BFDecode.asUHJ1, auto generated by SCNvim" }, {t("BFDecode.asUHJ1"),t("("),t("sig:"),i(1, "nil"),t(", "), t("fftsize:"),i(2, "nil"),t(", "), t("numffts:"),i(3, "nil"), t(")"),}),
s( {trig = "BFDecode.hexagon", name = "BFDecode.hexagon", dscr = "Snippet for BFDecode.hexagon, auto generated by SCNvim" }, {t("BFDecode.hexagon"),t("("),t("sig:"),i(1, "nil"), t(")"),}),
s( {trig = "BFDecode.surround", name = "BFDecode.surround", dscr = "Snippet for BFDecode.surround, auto generated by SCNvim" }, {t("BFDecode.surround"),t("("),t("sig:"),i(1, "nil"), t(")"),}),
s( {trig = "BFDecode.fiveDot1", name = "BFDecode.fiveDot1", dscr = "Snippet for BFDecode.fiveDot1, auto generated by SCNvim" }, {t("BFDecode.fiveDot1"),t("("),t("sig:"),i(1, "nil"),t(", "), t("freq:"),i(2, "120"), t(")"),}),
s( {trig = "BFDecode1.ar", name = "BFDecode1.ar", dscr = "Snippet for BFDecode1.ar, auto generated by SCNvim" }, {t("BFDecode1.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("azimuth:"),i(5, "0"),t(", "), t("elevation:"),i(6, "0"),t(", "), t("wComp:"),i(7, "0"),t(", "), t("mul:"),i(8, "1"),t(", "), t("add:"),i(9, "0"), t(")"),}),
s( {trig = "BFDecode1.ar1", name = "BFDecode1.ar1", dscr = "Snippet for BFDecode1.ar1, auto generated by SCNvim" }, {t("BFDecode1.ar1"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("azimuth:"),i(5, "0"),t(", "), t("elevation:"),i(6, "0"),t(", "), t("maxDist:"),i(7, "10"),t(", "), t("distance:"),i(8, "10"),t(", "), t("wComp:"),i(9, "0"),t(", "), t("mul:"),i(10, "1"),t(", "), t("add:"),i(11, "0"),t(", "), t("scaleflag:"),i(12, "1"), t(")"),}),
s( {trig = "BFDecoder.categories", name = "BFDecoder.categories", dscr = "Snippet for BFDecoder.categories, auto generated by SCNvim" }, {t("BFDecoder.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BFEncode.ar", name = "BFEncode.ar", dscr = "Snippet for BFEncode.ar, auto generated by SCNvim" }, {t("BFEncode.ar"),t("("),t("sig:"),i(1, "nil"),t(", "), t("polar:"),i(2, "nil"), t(")"),}),
s( {trig = "BFEncode.ar1", name = "BFEncode.ar1", dscr = "Snippet for BFEncode.ar1, auto generated by SCNvim" }, {t("BFEncode.ar1"),t("("),t("sig:"),i(1, "nil"),t(", "), t("rho:"),i(2, "nil"),t(", "), t("theta:"),i(3, "nil"), t(")"),}),
s( {trig = "BFEncode.ar2", name = "BFEncode.ar2", dscr = "Snippet for BFEncode.ar2, auto generated by SCNvim" }, {t("BFEncode.ar2"),t("("),t("sig:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"), t(")"),}),
s( {trig = "BFEncode.arDist", name = "BFEncode.arDist", dscr = "Snippet for BFEncode.arDist, auto generated by SCNvim" }, {t("BFEncode.arDist"),t("("),t("sig:"),i(1, "nil"),t(", "), t("point:"),i(2, "nil"),t(", "), t("distScale:"),i(3, "1.0"),t(", "), t("revScale:"),i(4, "0.1"),t(", "), t("distmax:"),i(5, "60.0"), t(")"),}),
s( {trig = "BFEncode.woof", name = "BFEncode.woof", dscr = "Snippet for BFEncode.woof, auto generated by SCNvim" }, {t("BFEncode.woof"),t("("),t("sig:"),i(1, "nil"),t(", "), t("point:"),i(2, "nil"),t(", "), t("distScale:"),i(3, "1.0"),t(", "), t("revScale:"),i(4, "0.1"),t(", "), t("revTime:"),i(5, "3.0"),t(", "), t("hfDamp:"),i(6, "0.9"),t(", "), t("distmax:"),i(7, "60.0"), t(")"),}),
s( {trig = "BFEncode1.ar", name = "BFEncode1.ar", dscr = "Snippet for BFEncode1.ar, auto generated by SCNvim" }, {t("BFEncode1.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("azimuth:"),i(2, "0"),t(", "), t("elevation:"),i(3, "0"),t(", "), t("rho:"),i(4, "1"),t(", "), t("gain:"),i(5, "1"),t(", "), t("wComp:"),i(6, "0"), t(")"),}),
s( {trig = "BFEncode2.ar", name = "BFEncode2.ar", dscr = "Snippet for BFEncode2.ar, auto generated by SCNvim" }, {t("BFEncode2.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("point_x:"),i(2, "1"),t(", "), t("point_y:"),i(3, "1"),t(", "), t("elevation:"),i(4, "0"),t(", "), t("gain:"),i(5, "1"),t(", "), t("wComp:"),i(6, "0"), t(")"),}),
s( {trig = "BFEncodeSter.ar", name = "BFEncodeSter.ar", dscr = "Snippet for BFEncodeSter.ar, auto generated by SCNvim" }, {t("BFEncodeSter.ar"),t("("),t("l:"),i(1, "nil"),t(", "), t("r:"),i(2, "nil"),t(", "), t("azimuth:"),i(3, "0"),t(", "), t("width:"),i(4, "1.5707963267949"),t(", "), t("elevation:"),i(5, "0"),t(", "), t("rho:"),i(6, "1"),t(", "), t("gain:"),i(7, "1"),t(", "), t("wComp:"),i(8, "0"), t(")"),}),
s( {trig = "BFFreeVerb.ar", name = "BFFreeVerb.ar", dscr = "Snippet for BFFreeVerb.ar, auto generated by SCNvim" }, {t("BFFreeVerb.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("mix:"),i(5, "1.0"),t(", "), t("room:"),i(6, "0.5"),t(", "), t("damp:"),i(7, "0.5"),t(", "), t("diffuse:"),i(8, "0.1"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "BFGVerb.ar", name = "BFGVerb.ar", dscr = "Snippet for BFGVerb.ar, auto generated by SCNvim" }, {t("BFGVerb.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("diffuse:"),i(5, "0.0"),t(", "), t("roomsize:"),i(6, "10"),t(", "), t("revtime:"),i(7, "3"),t(", "), t("damping:"),i(8, "0.5"),t(", "), t("inputbw:"),i(9, "0.5"),t(", "), t("drylevel:"),i(10, "0.0"),t(", "), t("earlyreflevel:"),i(11, "0.7"),t(", "), t("taillevel:"),i(12, "0.5"),t(", "), t("maxroomsize:"),i(13, "300"),t(", "), t("mul:"),i(14, "1"),t(", "), t("add:"),i(15, "0"), t(")"),}),
s( {trig = "BFManipulate.ar", name = "BFManipulate.ar", dscr = "Snippet for BFManipulate.ar, auto generated by SCNvim" }, {t("BFManipulate.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("rotate:"),i(5, "0"),t(", "), t("tilt:"),i(6, "0"),t(", "), t("tumble:"),i(7, "0"), t(")"),}),
s( {trig = "BFPanner.categories", name = "BFPanner.categories", dscr = "Snippet for BFPanner.categories, auto generated by SCNvim" }, {t("BFPanner.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BHPF.ar", name = "BHPF.ar", dscr = "Snippet for BHPF.ar, auto generated by SCNvim" }, {t("BHPF.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("order:"),i(2, "4"),t(", "), t("freq:"),i(3, "440"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "BHiPass.ar", name = "BHiPass.ar", dscr = "Snippet for BHiPass.ar, auto generated by SCNvim" }, {t("BHiPass.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BHiPass.sc", name = "BHiPass.sc", dscr = "Snippet for BHiPass.sc, auto generated by SCNvim" }, {t("BHiPass.sc"),t("("),t("dummy:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"), t(")"),}),
s( {trig = "BHiPass4.ar", name = "BHiPass4.ar", dscr = "Snippet for BHiPass4.ar, auto generated by SCNvim" }, {t("BHiPass4.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BHiShelf.ar", name = "BHiShelf.ar", dscr = "Snippet for BHiShelf.ar, auto generated by SCNvim" }, {t("BHiShelf.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rs:"),i(3, "1.0"),t(", "), t("db:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "BHiShelf.sc", name = "BHiShelf.sc", dscr = "Snippet for BHiShelf.sc, auto generated by SCNvim" }, {t("BHiShelf.sc"),t("("),t("dummy:"),i(1, "nil"),t(", "), t("freq:"),i(2, "120.0"),t(", "), t("rs:"),i(3, "1.0"),t(", "), t("db:"),i(4, "0.0"), t(")"),}),
s( {trig = "BLBufRd.ar", name = "BLBufRd.ar", dscr = "Snippet for BLBufRd.ar, auto generated by SCNvim" }, {t("BLBufRd.ar"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("phase:"),i(2, "0"),t(", "), t("ratio:"),i(3, "1"), t(")"),}),
s( {trig = "BLBufRd.kr", name = "BLBufRd.kr", dscr = "Snippet for BLBufRd.kr, auto generated by SCNvim" }, {t("BLBufRd.kr"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("phase:"),i(2, "0"),t(", "), t("ratio:"),i(3, "1"), t(")"),}),
s( {trig = "BLPF.ar", name = "BLPF.ar", dscr = "Snippet for BLPF.ar, auto generated by SCNvim" }, {t("BLPF.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("order:"),i(2, "4"),t(", "), t("freq:"),i(3, "440"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "BLowPass.ar", name = "BLowPass.ar", dscr = "Snippet for BLowPass.ar, auto generated by SCNvim" }, {t("BLowPass.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BLowPass.sc", name = "BLowPass.sc", dscr = "Snippet for BLowPass.sc, auto generated by SCNvim" }, {t("BLowPass.sc"),t("("),t("dummy:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"), t(")"),}),
s( {trig = "BLowPass4.ar", name = "BLowPass4.ar", dscr = "Snippet for BLowPass4.ar, auto generated by SCNvim" }, {t("BLowPass4.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BLowShelf.ar", name = "BLowShelf.ar", dscr = "Snippet for BLowShelf.ar, auto generated by SCNvim" }, {t("BLowShelf.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rs:"),i(3, "1.0"),t(", "), t("db:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "BLowShelf.sc", name = "BLowShelf.sc", dscr = "Snippet for BLowShelf.sc, auto generated by SCNvim" }, {t("BLowShelf.sc"),t("("),t("dummy:"),i(1, "nil"),t(", "), t("freq:"),i(2, "120.0"),t(", "), t("rs:"),i(3, "1.0"),t(", "), t("db:"),i(4, "0.0"), t(")"),}),
s( {trig = "BMoog.ar", name = "BMoog.ar", dscr = "Snippet for BMoog.ar, auto generated by SCNvim" }, {t("BMoog.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("q:"),i(3, "0.2"),t(", "), t("mode:"),i(4, "0.0"),t(", "), t("saturation:"),i(5, "0.95"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "BPF.ar", name = "BPF.ar", dscr = "Snippet for BPF.ar, auto generated by SCNvim" }, {t("BPF.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BPF.kr", name = "BPF.kr", dscr = "Snippet for BPF.kr, auto generated by SCNvim" }, {t("BPF.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BPeakEQ.ar", name = "BPeakEQ.ar", dscr = "Snippet for BPeakEQ.ar, auto generated by SCNvim" }, {t("BPeakEQ.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("db:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "BPeakEQ.sc", name = "BPeakEQ.sc", dscr = "Snippet for BPeakEQ.sc, auto generated by SCNvim" }, {t("BPeakEQ.sc"),t("("),t("dummy:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("db:"),i(4, "0.0"), t(")"),}),
s( {trig = "Bag.new", name = "Bag.new", dscr = "Snippet for Bag.new, auto generated by SCNvim" }, {t("Bag.new"),t("("),t("n:"),i(1, "4"), t(")"),}),
s( {trig = "Balance.ar", name = "Balance.ar", dscr = "Snippet for Balance.ar, auto generated by SCNvim" }, {t("Balance.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("test:"),i(2, "nil"),t(", "), t("hp:"),i(3, "10"),t(", "), t("stor:"),i(4, "0"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "Balance2.ar", name = "Balance2.ar", dscr = "Snippet for Balance2.ar, auto generated by SCNvim" }, {t("Balance2.ar"),t("("),t("left:"),i(1, "nil"),t(", "), t("right:"),i(2, "nil"),t(", "), t("pos:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"), t(")"),}),
s( {trig = "Balance2.kr", name = "Balance2.kr", dscr = "Snippet for Balance2.kr, auto generated by SCNvim" }, {t("Balance2.kr"),t("("),t("left:"),i(1, "nil"),t(", "), t("right:"),i(2, "nil"),t(", "), t("pos:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"), t(")"),}),
s( {trig = "Ball.ar", name = "Ball.ar", dscr = "Snippet for Ball.ar, auto generated by SCNvim" }, {t("Ball.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("g:"),i(2, "1"),t(", "), t("damp:"),i(3, "0"),t(", "), t("friction:"),i(4, "0.01"), t(")"),}),
s( {trig = "Ball.kr", name = "Ball.kr", dscr = "Snippet for Ball.kr, auto generated by SCNvim" }, {t("Ball.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("g:"),i(2, "1"),t(", "), t("damp:"),i(3, "0"),t(", "), t("friction:"),i(4, "0.01"), t(")"),}),
s( {trig = "BeatStatistics.kr", name = "BeatStatistics.kr", dscr = "Snippet for BeatStatistics.kr, auto generated by SCNvim" }, {t("BeatStatistics.kr"),t("("),t("fft:"),i(1, "nil"),t(", "), t("leak:"),i(2, "0.995"),t(", "), t("numpreviousbeats:"),i(3, "4"), t(")"),}),
s( {trig = "BeatTrack.kr", name = "BeatTrack.kr", dscr = "Snippet for BeatTrack.kr, auto generated by SCNvim" }, {t("BeatTrack.kr"),t("("),t("chain:"),i(1, "nil"),t(", "), t("lock:"),i(2, "0"), t(")"),}),
s( {trig = "BeatTrack2.kr", name = "BeatTrack2.kr", dscr = "Snippet for BeatTrack2.kr, auto generated by SCNvim" }, {t("BeatTrack2.kr"),t("("),t("busindex:"),i(1, "nil"),t(", "), t("numfeatures:"),i(2, "nil"),t(", "), t("windowsize:"),i(3, "2.0"),t(", "), t("phaseaccuracy:"),i(4, "0.02"),t(", "), t("lock:"),i(5, "0"),t(", "), t("weightingscheme:"),i(6, "nil"), t(")"),}),
s( {trig = "BelaScope.scope", name = "BelaScope.scope", dscr = "Snippet for BelaScope.scope, auto generated by SCNvim" }, {t("BelaScope.scope"),t("("),t("channelOffset:"),i(1, "nil"),t(", "), t("signals:"),i(2, "nil"), t(")"),}),
s( {trig = "BelaScope.monitorBus", name = "BelaScope.monitorBus", dscr = "Snippet for BelaScope.monitorBus, auto generated by SCNvim" }, {t("BelaScope.monitorBus"),t("("),t("channelOffset:"),i(1, "nil"),t(", "), t("busindex:"),i(2, "nil"),t(", "), t("numChannels:"),i(3, "nil"),t(", "), t("target:"),i(4, "nil"),t(", "), t("rate:"),i(5, "audio"), t(")"),}),
s( {trig = "BelaScope.prInputAsAudioRateUGens", name = "BelaScope.prInputAsAudioRateUGens", dscr = "Snippet for BelaScope.prInputAsAudioRateUGens, auto generated by SCNvim" }, {t("BelaScope.prInputAsAudioRateUGens"),t("("),t("signals:"),i(1, "nil"), t(")"),}),
s( {trig = "BelaScopeOut.ar", name = "BelaScopeOut.ar", dscr = "Snippet for BelaScopeOut.ar, auto generated by SCNvim" }, {t("BelaScopeOut.ar"),t("("),t("offset:"),i(1, "0"),t(", "), t("channelsArray:"),i(2, "nil"), t(")"),}),
s( {trig = "BelaScopeOut.numFixedArgs", name = "BelaScopeOut.numFixedArgs", dscr = "Snippet for BelaScopeOut.numFixedArgs, auto generated by SCNvim" }, {t("BelaScopeOut.numFixedArgs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BelaServerOptions.initClass", name = "BelaServerOptions.initClass", dscr = "Snippet for BelaServerOptions.initClass, auto generated by SCNvim" }, {t("BelaServerOptions.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BendResponder.init", name = "BendResponder.init", dscr = "Snippet for BendResponder.init, auto generated by SCNvim" }, {t("BendResponder.init"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BendResponder.initialized", name = "BendResponder.initialized", dscr = "Snippet for BendResponder.initialized, auto generated by SCNvim" }, {t("BendResponder.initialized"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BendResponder.responders", name = "BendResponder.responders", dscr = "Snippet for BendResponder.responders, auto generated by SCNvim" }, {t("BendResponder.responders"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BendResponder.add", name = "BendResponder.add", dscr = "Snippet for BendResponder.add, auto generated by SCNvim" }, {t("BendResponder.add"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "BendResponder.remove", name = "BendResponder.remove", dscr = "Snippet for BendResponder.remove, auto generated by SCNvim" }, {t("BendResponder.remove"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "Bessel.new", name = "Bessel.new", dscr = "Snippet for Bessel.new, auto generated by SCNvim" }, {t("Bessel.new"),t("("),t("x:"),i(1, "nil"), t(")"),}),
s( {trig = "BhobHiShelf.ar", name = "BhobHiShelf.ar", dscr = "Snippet for BhobHiShelf.ar, auto generated by SCNvim" }, {t("BhobHiShelf.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "nil"),t(", "), t("amp:"),i(3, "nil"), t(")"),}),
s( {trig = "BhobLoShelf.ar", name = "BhobLoShelf.ar", dscr = "Snippet for BhobLoShelf.ar, auto generated by SCNvim" }, {t("BhobLoShelf.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "nil"),t(", "), t("amp:"),i(3, "nil"), t(")"),}),
s( {trig = "BhobTone.ar", name = "BhobTone.ar", dscr = "Snippet for BhobTone.ar, auto generated by SCNvim" }, {t("BhobTone.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("tone:"),i(2, "nil"), t(")"),}),
s( {trig = "BiPanB2.ar", name = "BiPanB2.ar", dscr = "Snippet for BiPanB2.ar, auto generated by SCNvim" }, {t("BiPanB2.ar"),t("("),t("inA:"),i(1, "nil"),t(", "), t("inB:"),i(2, "nil"),t(", "), t("azimuth:"),i(3, "nil"),t(", "), t("gain:"),i(4, "1"), t(")"),}),
s( {trig = "BiPanB2.kr", name = "BiPanB2.kr", dscr = "Snippet for BiPanB2.kr, auto generated by SCNvim" }, {t("BiPanB2.kr"),t("("),t("inA:"),i(1, "nil"),t(", "), t("inB:"),i(2, "nil"),t(", "), t("azimuth:"),i(3, "nil"),t(", "), t("gain:"),i(4, "1"), t(")"),}),
s( {trig = "BinData.ar", name = "BinData.ar", dscr = "Snippet for BinData.ar, auto generated by SCNvim" }, {t("BinData.ar"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("bin:"),i(2, "nil"),t(", "), t("overlaps:"),i(3, "0.5"), t(")"),}),
s( {trig = "BinData.kr", name = "BinData.kr", dscr = "Snippet for BinData.kr, auto generated by SCNvim" }, {t("BinData.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("bin:"),i(2, "nil"),t(", "), t("overlaps:"),i(3, "0.5"), t(")"),}),
s( {trig = "BinaryOpFunction.new", name = "BinaryOpFunction.new", dscr = "Snippet for BinaryOpFunction.new, auto generated by SCNvim" }, {t("BinaryOpFunction.new"),t("("),t("selector:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("b:"),i(3, "nil"),t(", "), t("adverb:"),i(4, "nil"), t(")"),}),
s( {trig = "BinaryOpPlug.new", name = "BinaryOpPlug.new", dscr = "Snippet for BinaryOpPlug.new, auto generated by SCNvim" }, {t("BinaryOpPlug.new"),t("("),t("operator:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("b:"),i(3, "nil"), t(")"),}),
s( {trig = "BinaryOpStream.new", name = "BinaryOpStream.new", dscr = "Snippet for BinaryOpStream.new, auto generated by SCNvim" }, {t("BinaryOpStream.new"),t("("),t("operator:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("b:"),i(3, "nil"), t(")"),}),
s( {trig = "BinaryOpUGen.new", name = "BinaryOpUGen.new", dscr = "Snippet for BinaryOpUGen.new, auto generated by SCNvim" }, {t("BinaryOpUGen.new"),t("("),t("selector:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("b:"),i(3, "nil"), t(")"),}),
s( {trig = "BinaryOpUGen.new1", name = "BinaryOpUGen.new1", dscr = "Snippet for BinaryOpUGen.new1, auto generated by SCNvim" }, {t("BinaryOpUGen.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("selector:"),i(2, "nil"),t(", "), t("a:"),i(3, "nil"),t(", "), t("b:"),i(4, "nil"), t(")"),}),
s( {trig = "BinaryOpXStream.new", name = "BinaryOpXStream.new", dscr = "Snippet for BinaryOpXStream.new, auto generated by SCNvim" }, {t("BinaryOpXStream.new"),t("("),t("operator:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("b:"),i(3, "nil"), t(")"),}),
s( {trig = "Blip.ar", name = "Blip.ar", dscr = "Snippet for Blip.ar, auto generated by SCNvim" }, {t("Blip.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("numharm:"),i(2, "200.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Blip.kr", name = "Blip.kr", dscr = "Snippet for Blip.kr, auto generated by SCNvim" }, {t("Blip.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("numharm:"),i(2, "200.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "BlitB3.ar", name = "BlitB3.ar", dscr = "Snippet for BlitB3.ar, auto generated by SCNvim" }, {t("BlitB3.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "BlitB3D.ar", name = "BlitB3D.ar", dscr = "Snippet for BlitB3D.ar, auto generated by SCNvim" }, {t("BlitB3D.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "BlitB3Saw.ar", name = "BlitB3Saw.ar", dscr = "Snippet for BlitB3Saw.ar, auto generated by SCNvim" }, {t("BlitB3Saw.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("leak:"),i(2, "0.99"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "BlitB3Square.ar", name = "BlitB3Square.ar", dscr = "Snippet for BlitB3Square.ar, auto generated by SCNvim" }, {t("BlitB3Square.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("leak:"),i(2, "0.99"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "BlitB3Tri.ar", name = "BlitB3Tri.ar", dscr = "Snippet for BlitB3Tri.ar, auto generated by SCNvim" }, {t("BlitB3Tri.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("leak:"),i(2, "0.99"),t(", "), t("leak2:"),i(3, "0.99"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Boolean.new", name = "Boolean.new", dscr = "Snippet for Boolean.new, auto generated by SCNvim" }, {t("Boolean.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Boolean.newCopyArgs", name = "Boolean.newCopyArgs", dscr = "Snippet for Boolean.newCopyArgs, auto generated by SCNvim" }, {t("Boolean.newCopyArgs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Breakcore.ar", name = "Breakcore.ar", dscr = "Snippet for Breakcore.ar, auto generated by SCNvim" }, {t("Breakcore.ar"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("capturein:"),i(2, "nil"),t(", "), t("capturetrigger:"),i(3, "nil"),t(", "), t("duration:"),i(4, "0.1"),t(", "), t("ampdropout:"),i(5, "nil"), t(")"),}),
s( {trig = "Brusselator.ar", name = "Brusselator.ar", dscr = "Snippet for Brusselator.ar, auto generated by SCNvim" }, {t("Brusselator.ar"),t("("),t("reset:"),i(1, "0"),t(", "), t("rate:"),i(2, "0.01"),t(", "), t("mu:"),i(3, "1.0"),t(", "), t("gamma:"),i(4, "1.0"),t(", "), t("initx:"),i(5, "0.5"),t(", "), t("inity:"),i(6, "0.5"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "BtoUHJ.ar", name = "BtoUHJ.ar", dscr = "Snippet for BtoUHJ.ar, auto generated by SCNvim" }, {t("BtoUHJ.ar"),t("("),t("wsig:"),i(1, "nil"),t(", "), t("xsig:"),i(2, "nil"),t(", "), t("ysig:"),i(3, "nil"), t(")"),}),
s( {trig = "BufCombN.ar", name = "BufCombN.ar", dscr = "Snippet for BufCombN.ar, auto generated by SCNvim" }, {t("BufCombN.ar"),t("("),t("buf:"),i(1, "0"),t(", "), t("in:"),i(2, "0.0"),t(", "), t("delaytime:"),i(3, "0.2"),t(", "), t("decaytime:"),i(4, "1.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "BufDelayN.ar", name = "BufDelayN.ar", dscr = "Snippet for BufDelayN.ar, auto generated by SCNvim" }, {t("BufDelayN.ar"),t("("),t("buf:"),i(1, "0"),t(", "), t("in:"),i(2, "0.0"),t(", "), t("delaytime:"),i(3, "0.2"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BufDelayN.kr", name = "BufDelayN.kr", dscr = "Snippet for BufDelayN.kr, auto generated by SCNvim" }, {t("BufDelayN.kr"),t("("),t("buf:"),i(1, "0"),t(", "), t("in:"),i(2, "0.0"),t(", "), t("delaytime:"),i(3, "0.2"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "BufGrain.ar", name = "BufGrain.ar", dscr = "Snippet for BufGrain.ar, auto generated by SCNvim" }, {t("BufGrain.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("sndbuf:"),i(3, "nil"),t(", "), t("rate:"),i(4, "1"),t(", "), t("pos:"),i(5, "0"),t(", "), t("interp:"),i(6, "2"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0"), t(")"),}),
s( {trig = "BufGrainB.ar", name = "BufGrainB.ar", dscr = "Snippet for BufGrainB.ar, auto generated by SCNvim" }, {t("BufGrainB.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("sndbuf:"),i(3, "nil"),t(", "), t("rate:"),i(4, "1"),t(", "), t("pos:"),i(5, "0"),t(", "), t("envbuf:"),i(6, "nil"),t(", "), t("interp:"),i(7, "2"),t(", "), t("mul:"),i(8, "1"),t(", "), t("add:"),i(9, "0"), t(")"),}),
s( {trig = "BufGrainBBF.ar", name = "BufGrainBBF.ar", dscr = "Snippet for BufGrainBBF.ar, auto generated by SCNvim" }, {t("BufGrainBBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("sndbuf:"),i(3, "nil"),t(", "), t("rate:"),i(4, "1"),t(", "), t("pos:"),i(5, "0"),t(", "), t("envbuf:"),i(6, "nil"),t(", "), t("azimuth:"),i(7, "0"),t(", "), t("elevation:"),i(8, "0"),t(", "), t("rho:"),i(9, "1"),t(", "), t("interp:"),i(10, "2"),t(", "), t("wComp:"),i(11, "0"),t(", "), t("mul:"),i(12, "1"),t(", "), t("add:"),i(13, "0"), t(")"),}),
s( {trig = "BufGrainBF.ar", name = "BufGrainBF.ar", dscr = "Snippet for BufGrainBF.ar, auto generated by SCNvim" }, {t("BufGrainBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("sndbuf:"),i(3, "nil"),t(", "), t("rate:"),i(4, "1"),t(", "), t("pos:"),i(5, "0"),t(", "), t("azimuth:"),i(6, "0"),t(", "), t("elevation:"),i(7, "0"),t(", "), t("rho:"),i(8, "1"),t(", "), t("interp:"),i(9, "2"),t(", "), t("wComp:"),i(10, "0"),t(", "), t("mul:"),i(11, "1"),t(", "), t("add:"),i(12, "0"), t(")"),}),
s( {trig = "BufGrainI.ar", name = "BufGrainI.ar", dscr = "Snippet for BufGrainI.ar, auto generated by SCNvim" }, {t("BufGrainI.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("sndbuf:"),i(3, "nil"),t(", "), t("rate:"),i(4, "1"),t(", "), t("pos:"),i(5, "0"),t(", "), t("envbuf1:"),i(6, "nil"),t(", "), t("envbuf2:"),i(7, "nil"),t(", "), t("ifac:"),i(8, "0.5"),t(", "), t("interp:"),i(9, "2"),t(", "), t("mul:"),i(10, "1"),t(", "), t("add:"),i(11, "0"), t(")"),}),
s( {trig = "BufGrainIBF.ar", name = "BufGrainIBF.ar", dscr = "Snippet for BufGrainIBF.ar, auto generated by SCNvim" }, {t("BufGrainIBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("sndbuf:"),i(3, "nil"),t(", "), t("rate:"),i(4, "1"),t(", "), t("pos:"),i(5, "0"),t(", "), t("envbuf1:"),i(6, "nil"),t(", "), t("envbuf2:"),i(7, "nil"),t(", "), t("ifac:"),i(8, "0.5"),t(", "), t("azimuth:"),i(9, "0"),t(", "), t("elevation:"),i(10, "0"),t(", "), t("rho:"),i(11, "1"),t(", "), t("interp:"),i(12, "2"),t(", "), t("wComp:"),i(13, "0"),t(", "), t("mul:"),i(14, "1"),t(", "), t("add:"),i(15, "0"), t(")"),}),
s( {trig = "BufInfoUGenBase.kr", name = "BufInfoUGenBase.kr", dscr = "Snippet for BufInfoUGenBase.kr, auto generated by SCNvim" }, {t("BufInfoUGenBase.kr"),t("("),t("bufnum:"),i(1, "nil"), t(")"),}),
s( {trig = "BufInfoUGenBase.ir", name = "BufInfoUGenBase.ir", dscr = "Snippet for BufInfoUGenBase.ir, auto generated by SCNvim" }, {t("BufInfoUGenBase.ir"),t("("),t("bufnum:"),i(1, "nil"), t(")"),}),
s( {trig = "BufMax.kr", name = "BufMax.kr", dscr = "Snippet for BufMax.kr, auto generated by SCNvim" }, {t("BufMax.kr"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("gate:"),i(2, "1"), t(")"),}),
s( {trig = "BufMax.categories", name = "BufMax.categories", dscr = "Snippet for BufMax.categories, auto generated by SCNvim" }, {t("BufMax.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "BufRd.ar", name = "BufRd.ar", dscr = "Snippet for BufRd.ar, auto generated by SCNvim" }, {t("BufRd.ar"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("loop:"),i(4, "1.0"),t(", "), t("interpolation:"),i(5, "2"), t(")"),}),
s( {trig = "BufRd.kr", name = "BufRd.kr", dscr = "Snippet for BufRd.kr, auto generated by SCNvim" }, {t("BufRd.kr"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("loop:"),i(4, "1.0"),t(", "), t("interpolation:"),i(5, "2"), t(")"),}),
s( {trig = "BufWr.ar", name = "BufWr.ar", dscr = "Snippet for BufWr.ar, auto generated by SCNvim" }, {t("BufWr.ar"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("loop:"),i(4, "1.0"), t(")"),}),
s( {trig = "BufWr.kr", name = "BufWr.kr", dscr = "Snippet for BufWr.kr, auto generated by SCNvim" }, {t("BufWr.kr"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("loop:"),i(4, "1.0"), t(")"),}),
s( {trig = "Buffer.initClass", name = "Buffer.initClass", dscr = "Snippet for Buffer.initClass, auto generated by SCNvim" }, {t("Buffer.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Buffer.new", name = "Buffer.new", dscr = "Snippet for Buffer.new, auto generated by SCNvim" }, {t("Buffer.new"),t("("),t("server:"),i(1, "nil"),t(", "), t("numFrames:"),i(2, "nil"),t(", "), t("numChannels:"),i(3, "nil"),t(", "), t("bufnum:"),i(4, "nil"), t(")"),}),
s( {trig = "Buffer.alloc", name = "Buffer.alloc", dscr = "Snippet for Buffer.alloc, auto generated by SCNvim" }, {t("Buffer.alloc"),t("("),t("server:"),i(1, "nil"),t(", "), t("numFrames:"),i(2, "nil"),t(", "), t("numChannels:"),i(3, "1"),t(", "), t("completionMessage:"),i(4, "nil"),t(", "), t("bufnum:"),i(5, "nil"), t(")"),}),
s( {trig = "Buffer.allocConsecutive", name = "Buffer.allocConsecutive", dscr = "Snippet for Buffer.allocConsecutive, auto generated by SCNvim" }, {t("Buffer.allocConsecutive"),t("("),t("numBufs:"),i(1, "1"),t(", "), t("server:"),i(2, "nil"),t(", "), t("numFrames:"),i(3, "nil"),t(", "), t("numChannels:"),i(4, "1"),t(", "), t("completionMessage:"),i(5, "nil"),t(", "), t("bufnum:"),i(6, "nil"), t(")"),}),
s( {trig = "Buffer.read", name = "Buffer.read", dscr = "Snippet for Buffer.read, auto generated by SCNvim" }, {t("Buffer.read"),t("("),t("server:"),i(1, "nil"),t(", "), t("path:"),i(2, "nil"),t(", "), t("startFrame:"),i(3, "0"),t(", "), t("numFrames:"),i(4, "-1"),t(", "), t("action:"),i(5, "nil"),t(", "), t("bufnum:"),i(6, "nil"), t(")"),}),
s( {trig = "Buffer.readChannel", name = "Buffer.readChannel", dscr = "Snippet for Buffer.readChannel, auto generated by SCNvim" }, {t("Buffer.readChannel"),t("("),t("server:"),i(1, "nil"),t(", "), t("path:"),i(2, "nil"),t(", "), t("startFrame:"),i(3, "0"),t(", "), t("numFrames:"),i(4, "-1"),t(", "), t("channels:"),i(5, "nil"),t(", "), t("action:"),i(6, "nil"),t(", "), t("bufnum:"),i(7, "nil"), t(")"),}),
s( {trig = "Buffer.readNoUpdate", name = "Buffer.readNoUpdate", dscr = "Snippet for Buffer.readNoUpdate, auto generated by SCNvim" }, {t("Buffer.readNoUpdate"),t("("),t("server:"),i(1, "nil"),t(", "), t("path:"),i(2, "nil"),t(", "), t("startFrame:"),i(3, "0"),t(", "), t("numFrames:"),i(4, "-1"),t(", "), t("bufnum:"),i(5, "nil"),t(", "), t("completionMessage:"),i(6, "nil"), t(")"),}),
s( {trig = "Buffer.cueSoundFile", name = "Buffer.cueSoundFile", dscr = "Snippet for Buffer.cueSoundFile, auto generated by SCNvim" }, {t("Buffer.cueSoundFile"),t("("),t("server:"),i(1, "nil"),t(", "), t("path:"),i(2, "nil"),t(", "), t("startFrame:"),i(3, "0"),t(", "), t("numChannels:"),i(4, "2"),t(", "), t("bufferSize:"),i(5, "32768"),t(", "), t("completionMessage:"),i(6, "nil"), t(")"),}),
s( {trig = "Buffer.loadCollection", name = "Buffer.loadCollection", dscr = "Snippet for Buffer.loadCollection, auto generated by SCNvim" }, {t("Buffer.loadCollection"),t("("),t("server:"),i(1, "nil"),t(", "), t("collection:"),i(2, "nil"),t(", "), t("numChannels:"),i(3, "1"),t(", "), t("action:"),i(4, "nil"), t(")"),}),
s( {trig = "Buffer.sendCollection", name = "Buffer.sendCollection", dscr = "Snippet for Buffer.sendCollection, auto generated by SCNvim" }, {t("Buffer.sendCollection"),t("("),t("server:"),i(1, "nil"),t(", "), t("collection:"),i(2, "nil"),t(", "), t("numChannels:"),i(3, "1"),t(", "), t("wait:"),i(4, "-1"),t(", "), t("action:"),i(5, "nil"), t(")"),}),
s( {trig = "Buffer.freeAll", name = "Buffer.freeAll", dscr = "Snippet for Buffer.freeAll, auto generated by SCNvim" }, {t("Buffer.freeAll"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "Buffer.initServerCache", name = "Buffer.initServerCache", dscr = "Snippet for Buffer.initServerCache, auto generated by SCNvim" }, {t("Buffer.initServerCache"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "Buffer.clearServerCaches", name = "Buffer.clearServerCaches", dscr = "Snippet for Buffer.clearServerCaches, auto generated by SCNvim" }, {t("Buffer.clearServerCaches"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "Buffer.cachedBuffersDo", name = "Buffer.cachedBuffersDo", dscr = "Snippet for Buffer.cachedBuffersDo, auto generated by SCNvim" }, {t("Buffer.cachedBuffersDo"),t("("),t("server:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "Buffer.cachedBufferAt", name = "Buffer.cachedBufferAt", dscr = "Snippet for Buffer.cachedBufferAt, auto generated by SCNvim" }, {t("Buffer.cachedBufferAt"),t("("),t("server:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "nil"), t(")"),}),
s( {trig = "Buffer.loadDialog", name = "Buffer.loadDialog", dscr = "Snippet for Buffer.loadDialog, auto generated by SCNvim" }, {t("Buffer.loadDialog"),t("("),t("server:"),i(1, "nil"),t(", "), t("startFrame:"),i(2, "0"),t(", "), t("numFrames:"),i(3, "nil"),t(", "), t("action:"),i(4, "nil"),t(", "), t("bufnum:"),i(5, "nil"), t(")"),}),
s( {trig = "BundleNetAddr.copyFrom", name = "BundleNetAddr.copyFrom", dscr = "Snippet for BundleNetAddr.copyFrom, auto generated by SCNvim" }, {t("BundleNetAddr.copyFrom"),t("("),t("addr:"),i(1, "nil"),t(", "), t("bundle:"),i(2, "nil"), t(")"),}),
s( {trig = "Bus.control", name = "Bus.control", dscr = "Snippet for Bus.control, auto generated by SCNvim" }, {t("Bus.control"),t("("),t("server:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "1"), t(")"),}),
s( {trig = "Bus.audio", name = "Bus.audio", dscr = "Snippet for Bus.audio, auto generated by SCNvim" }, {t("Bus.audio"),t("("),t("server:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "1"), t(")"),}),
s( {trig = "Bus.alloc", name = "Bus.alloc", dscr = "Snippet for Bus.alloc, auto generated by SCNvim" }, {t("Bus.alloc"),t("("),t("rate:"),i(1, "nil"),t(", "), t("server:"),i(2, "nil"),t(", "), t("numChannels:"),i(3, "1"), t(")"),}),
s( {trig = "Bus.new", name = "Bus.new", dscr = "Snippet for Bus.new, auto generated by SCNvim" }, {t("Bus.new"),t("("),t("rate:"),i(1, "audio"),t(", "), t("index:"),i(2, "0"),t(", "), t("numChannels:"),i(3, "2"),t(", "), t("server:"),i(4, "nil"), t(")"),}),
s( {trig = "Bus.newFrom", name = "Bus.newFrom", dscr = "Snippet for Bus.newFrom, auto generated by SCNvim" }, {t("Bus.newFrom"),t("("),t("bus:"),i(1, "nil"),t(", "), t("offset:"),i(2, "nil"),t(", "), t("numChannels:"),i(3, "1"), t(")"),}),
s( {trig = "BusPlug.new", name = "BusPlug.new", dscr = "Snippet for BusPlug.new, auto generated by SCNvim" }, {t("BusPlug.new"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "BusPlug.for", name = "BusPlug.for", dscr = "Snippet for BusPlug.for, auto generated by SCNvim" }, {t("BusPlug.for"),t("("),t("bus:"),i(1, "nil"), t(")"),}),
s( {trig = "BusPlug.audio", name = "BusPlug.audio", dscr = "Snippet for BusPlug.audio, auto generated by SCNvim" }, {t("BusPlug.audio"),t("("),t("server:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "nil"), t(")"),}),
s( {trig = "BusPlug.control", name = "BusPlug.control", dscr = "Snippet for BusPlug.control, auto generated by SCNvim" }, {t("BusPlug.control"),t("("),t("server:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "nil"), t(")"),}),
s( {trig = "BusScopeSynth.new", name = "BusScopeSynth.new", dscr = "Snippet for BusScopeSynth.new, auto generated by SCNvim" }, {t("BusScopeSynth.new"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "Button.qtClass", name = "Button.qtClass", dscr = "Snippet for Button.qtClass, auto generated by SCNvim" }, {t("Button.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CCResponder.new", name = "CCResponder.new", dscr = "Snippet for CCResponder.new, auto generated by SCNvim" }, {t("CCResponder.new"),t("("),t("function:"),i(1, "nil"),t(", "), t("src:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("num:"),i(4, "nil"),t(", "), t("value:"),i(5, "nil"),t(", "), t("install:"),i(6, "true"),t(", "), t("swallowEvent:"),i(7, "false"), t(")"),}),
s( {trig = "CCResponder.initialized", name = "CCResponder.initialized", dscr = "Snippet for CCResponder.initialized, auto generated by SCNvim" }, {t("CCResponder.initialized"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CCResponder.responders", name = "CCResponder.responders", dscr = "Snippet for CCResponder.responders, auto generated by SCNvim" }, {t("CCResponder.responders"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CCResponder.add", name = "CCResponder.add", dscr = "Snippet for CCResponder.add, auto generated by SCNvim" }, {t("CCResponder.add"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "CCResponder.remove", name = "CCResponder.remove", dscr = "Snippet for CCResponder.remove, auto generated by SCNvim" }, {t("CCResponder.remove"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "CCResponder.init", name = "CCResponder.init", dscr = "Snippet for CCResponder.init, auto generated by SCNvim" }, {t("CCResponder.init"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CMake.new", name = "CMake.new", dscr = "Snippet for CMake.new, auto generated by SCNvim" }, {t("CMake.new"),t("("),t("path:"),i(1, "nil"),t(", "), t("pathToSuperColliderHeaders:"),i(2, "nil"),t(", "), t("installLocation:"),i(3, "nil"), t(")"),}),
s( {trig = "COsc.ar", name = "COsc.ar", dscr = "Snippet for COsc.ar, auto generated by SCNvim" }, {t("COsc.ar"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("beats:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "COsc.kr", name = "COsc.kr", dscr = "Snippet for COsc.kr, auto generated by SCNvim" }, {t("COsc.kr"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("beats:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "CQ_Diff.kr", name = "CQ_Diff.kr", dscr = "Snippet for CQ_Diff.kr, auto generated by SCNvim" }, {t("CQ_Diff.kr"),t("("),t("in1:"),i(1, "0.0"),t(", "), t("in2:"),i(2, "0.0"),t(", "), t("databufnum:"),i(3, "nil"), t(")"),}),
s( {trig = "Cartesian.new", name = "Cartesian.new", dscr = "Snippet for Cartesian.new, auto generated by SCNvim" }, {t("Cartesian.new"),t("("),t("x:"),i(1, "0"),t(", "), t("y:"),i(2, "0"),t(", "), t("z:"),i(3, "0"), t(")"),}),
s( {trig = "CartesianArray.new", name = "CartesianArray.new", dscr = "Snippet for CartesianArray.new, auto generated by SCNvim" }, {t("CartesianArray.new"),t("("),t("n:"),i(1, "nil"), t(")"),}),
s( {trig = "Cepstrum.new", name = "Cepstrum.new", dscr = "Snippet for Cepstrum.new, auto generated by SCNvim" }, {t("Cepstrum.new"),t("("),t("cepbuf:"),i(1, "nil"),t(", "), t("fftchain:"),i(2, "nil"), t(")"),}),
s( {trig = "Changed.kr", name = "Changed.kr", dscr = "Snippet for Changed.kr, auto generated by SCNvim" }, {t("Changed.kr"),t("("),t("input:"),i(1, "nil"),t(", "), t("threshold:"),i(2, "0"), t(")"),}),
s( {trig = "Changed.ar", name = "Changed.ar", dscr = "Snippet for Changed.ar, auto generated by SCNvim" }, {t("Changed.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("threshold:"),i(2, "0"), t(")"),}),
s( {trig = "Char.new", name = "Char.new", dscr = "Snippet for Char.new, auto generated by SCNvim" }, {t("Char.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CheapVerb.ar", name = "CheapVerb.ar", dscr = "Snippet for CheapVerb.ar, auto generated by SCNvim" }, {t("CheapVerb.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("decayTime:"),i(2, "1"),t(", "), t("numDelays:"),i(3, "6"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "CheckBadValues.ar", name = "CheckBadValues.ar", dscr = "Snippet for CheckBadValues.ar, auto generated by SCNvim" }, {t("CheckBadValues.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("id:"),i(2, "0"),t(", "), t("post:"),i(3, "2"), t(")"),}),
s( {trig = "CheckBadValues.kr", name = "CheckBadValues.kr", dscr = "Snippet for CheckBadValues.kr, auto generated by SCNvim" }, {t("CheckBadValues.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("id:"),i(2, "0"),t(", "), t("post:"),i(3, "2"), t(")"),}),
s( {trig = "CheckBox.qtClass", name = "CheckBox.qtClass", dscr = "Snippet for CheckBox.qtClass, auto generated by SCNvim" }, {t("CheckBox.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CheckBox.new", name = "CheckBox.new", dscr = "Snippet for CheckBox.new, auto generated by SCNvim" }, {t("CheckBox.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("text:"),i(3, "nil"), t(")"),}),
s( {trig = "Chromagram.kr", name = "Chromagram.kr", dscr = "Snippet for Chromagram.kr, auto generated by SCNvim" }, {t("Chromagram.kr"),t("("),t("fft:"),i(1, "nil"),t(", "), t("fftsize:"),i(2, "2048"),t(", "), t("n:"),i(3, "12"),t(", "), t("tuningbase:"),i(4, "32.703195662575"),t(", "), t("octaves:"),i(5, "8"),t(", "), t("integrationflag:"),i(6, "0"),t(", "), t("coeff:"),i(7, "0.9"),t(", "), t("octaveratio:"),i(8, "2"),t(", "), t("perframenormalize:"),i(9, "0"), t(")"),}),
s( {trig = "CircleRamp.ar", name = "CircleRamp.ar", dscr = "Snippet for CircleRamp.ar, auto generated by SCNvim" }, {t("CircleRamp.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("lagTime:"),i(2, "0.1"),t(", "), t("circmin:"),i(3, "-180"),t(", "), t("circmax:"),i(4, "180"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "CircleRamp.kr", name = "CircleRamp.kr", dscr = "Snippet for CircleRamp.kr, auto generated by SCNvim" }, {t("CircleRamp.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("lagTime:"),i(2, "0.1"),t(", "), t("circmin:"),i(3, "-180"),t(", "), t("circmax:"),i(4, "180"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "Class.initClassTree", name = "Class.initClassTree", dscr = "Snippet for Class.initClassTree, auto generated by SCNvim" }, {t("Class.initClassTree"),t("("),t("aClass:"),i(1, "nil"), t(")"),}),
s( {trig = "Class.allClasses", name = "Class.allClasses", dscr = "Snippet for Class.allClasses, auto generated by SCNvim" }, {t("Class.allClasses"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Class.findAllReferences", name = "Class.findAllReferences", dscr = "Snippet for Class.findAllReferences, auto generated by SCNvim" }, {t("Class.findAllReferences"),t("("),t("aSymbol:"),i(1, "nil"), t(")"),}),
s( {trig = "ClassBrowser.new", name = "ClassBrowser.new", dscr = "Snippet for ClassBrowser.new, auto generated by SCNvim" }, {t("ClassBrowser.new"),t("("),t("class:"),i(1, "nil"), t(")"),}),
s( {trig = "ClassBrowser.getClass", name = "ClassBrowser.getClass", dscr = "Snippet for ClassBrowser.getClass, auto generated by SCNvim" }, {t("ClassBrowser.getClass"),t("("),t("method:"),i(1, "nil"), t(")"),}),
s( {trig = "ClassBrowser.initGUI", name = "ClassBrowser.initGUI", dscr = "Snippet for ClassBrowser.initGUI, auto generated by SCNvim" }, {t("ClassBrowser.initGUI"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CleanupStream.new", name = "CleanupStream.new", dscr = "Snippet for CleanupStream.new, auto generated by SCNvim" }, {t("CleanupStream.new"),t("("),t("stream:"),i(1, "nil"),t(", "), t("cleanup:"),i(2, "nil"), t(")"),}),
s( {trig = "ClearBuf.new", name = "ClearBuf.new", dscr = "Snippet for ClearBuf.new, auto generated by SCNvim" }, {t("ClearBuf.new"),t("("),t("buf:"),i(1, "nil"), t(")"),}),
s( {trig = "ClearList.new", name = "ClearList.new", dscr = "Snippet for ClearList.new, auto generated by SCNvim" }, {t("ClearList.new"),t("("),t("size:"),i(1, "nil"), t(")"),}),
s( {trig = "Clipper32.ar", name = "Clipper32.ar", dscr = "Snippet for Clipper32.ar, auto generated by SCNvim" }, {t("Clipper32.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("lo:"),i(2, "-0.8"),t(", "), t("hi:"),i(3, "0.8"), t(")"),}),
s( {trig = "Clipper4.ar", name = "Clipper4.ar", dscr = "Snippet for Clipper4.ar, auto generated by SCNvim" }, {t("Clipper4.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("lo:"),i(2, "-0.8"),t(", "), t("hi:"),i(3, "0.8"), t(")"),}),
s( {trig = "Clipper8.ar", name = "Clipper8.ar", dscr = "Snippet for Clipper8.ar, auto generated by SCNvim" }, {t("Clipper8.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("lo:"),i(2, "-0.8"),t(", "), t("hi:"),i(3, "0.8"), t(")"),}),
s( {trig = "Clock.play", name = "Clock.play", dscr = "Snippet for Clock.play, auto generated by SCNvim" }, {t("Clock.play"),t("("),t("task:"),i(1, "nil"), t(")"),}),
s( {trig = "Clock.seconds", name = "Clock.seconds", dscr = "Snippet for Clock.seconds, auto generated by SCNvim" }, {t("Clock.seconds"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Clock.beats", name = "Clock.beats", dscr = "Snippet for Clock.beats, auto generated by SCNvim" }, {t("Clock.beats"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Clock.beats2secs", name = "Clock.beats2secs", dscr = "Snippet for Clock.beats2secs, auto generated by SCNvim" }, {t("Clock.beats2secs"),t("("),t("beats:"),i(1, "nil"), t(")"),}),
s( {trig = "Clock.secs2beats", name = "Clock.secs2beats", dscr = "Snippet for Clock.secs2beats, auto generated by SCNvim" }, {t("Clock.secs2beats"),t("("),t("secs:"),i(1, "nil"), t(")"),}),
s( {trig = "Clock.beats2bars", name = "Clock.beats2bars", dscr = "Snippet for Clock.beats2bars, auto generated by SCNvim" }, {t("Clock.beats2bars"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Clock.bars2beats", name = "Clock.bars2beats", dscr = "Snippet for Clock.bars2beats, auto generated by SCNvim" }, {t("Clock.bars2beats"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Clock.timeToNextBeat", name = "Clock.timeToNextBeat", dscr = "Snippet for Clock.timeToNextBeat, auto generated by SCNvim" }, {t("Clock.timeToNextBeat"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Clock.nextTimeOnGrid", name = "Clock.nextTimeOnGrid", dscr = "Snippet for Clock.nextTimeOnGrid, auto generated by SCNvim" }, {t("Clock.nextTimeOnGrid"),t("("),t("quant:"),i(1, "1"),t(", "), t("phase:"),i(2, "0"),t(", "), t("referenceBeat:"),i(3, "nil"), t(")"),}),
s( {trig = "Clockmus.kr", name = "Clockmus.kr", dscr = "Snippet for Clockmus.kr, auto generated by SCNvim" }, {t("Clockmus.kr"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Clockmus.categories", name = "Clockmus.categories", dscr = "Snippet for Clockmus.categories, auto generated by SCNvim" }, {t("Clockmus.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CmdPeriod.doOnce", name = "CmdPeriod.doOnce", dscr = "Snippet for CmdPeriod.doOnce, auto generated by SCNvim" }, {t("CmdPeriod.doOnce"),t("("),t("object:"),i(1, "nil"), t(")"),}),
s( {trig = "CmdPeriod.run", name = "CmdPeriod.run", dscr = "Snippet for CmdPeriod.run, auto generated by SCNvim" }, {t("CmdPeriod.run"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CmdPeriod.hardRun", name = "CmdPeriod.hardRun", dscr = "Snippet for CmdPeriod.hardRun, auto generated by SCNvim" }, {t("CmdPeriod.hardRun"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CoinGate.ar", name = "CoinGate.ar", dscr = "Snippet for CoinGate.ar, auto generated by SCNvim" }, {t("CoinGate.ar"),t("("),t("prob:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"), t(")"),}),
s( {trig = "CoinGate.kr", name = "CoinGate.kr", dscr = "Snippet for CoinGate.kr, auto generated by SCNvim" }, {t("CoinGate.kr"),t("("),t("prob:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"), t(")"),}),
s( {trig = "CollStream.new", name = "CollStream.new", dscr = "Snippet for CollStream.new, auto generated by SCNvim" }, {t("CollStream.new"),t("("),t("collection:"),i(1, "nil"), t(")"),}),
s( {trig = "CollStream.on", name = "CollStream.on", dscr = "Snippet for CollStream.on, auto generated by SCNvim" }, {t("CollStream.on"),t("("),t("aCollection:"),i(1, "nil"), t(")"),}),
s( {trig = "Collection.newFrom", name = "Collection.newFrom", dscr = "Snippet for Collection.newFrom, auto generated by SCNvim" }, {t("Collection.newFrom"),t("("),t("aCollection:"),i(1, "nil"), t(")"),}),
s( {trig = "Collection.with", name = "Collection.with", dscr = "Snippet for Collection.with, auto generated by SCNvim" }, {t("Collection.with"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "Collection.fill", name = "Collection.fill", dscr = "Snippet for Collection.fill, auto generated by SCNvim" }, {t("Collection.fill"),t("("),t("size:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "Collection.fill2D", name = "Collection.fill2D", dscr = "Snippet for Collection.fill2D, auto generated by SCNvim" }, {t("Collection.fill2D"),t("("),t("rows:"),i(1, "nil"),t(", "), t("cols:"),i(2, "nil"),t(", "), t("function:"),i(3, "nil"), t(")"),}),
s( {trig = "Collection.fill3D", name = "Collection.fill3D", dscr = "Snippet for Collection.fill3D, auto generated by SCNvim" }, {t("Collection.fill3D"),t("("),t("planes:"),i(1, "nil"),t(", "), t("rows:"),i(2, "nil"),t(", "), t("cols:"),i(3, "nil"),t(", "), t("function:"),i(4, "nil"), t(")"),}),
s( {trig = "Collection.fillND", name = "Collection.fillND", dscr = "Snippet for Collection.fillND, auto generated by SCNvim" }, {t("Collection.fillND"),t("("),t("dimensions:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"),t(", "), t("args:"),i(3, "[]"), t(")"),}),
s( {trig = "Color.new", name = "Color.new", dscr = "Snippet for Color.new, auto generated by SCNvim" }, {t("Color.new"),t("("),t("red:"),i(1, "0.0"),t(", "), t("green:"),i(2, "0.0"),t(", "), t("blue:"),i(3, "0.0"),t(", "), t("alpha:"),i(4, "1.0"), t(")"),}),
s( {trig = "Color.new255", name = "Color.new255", dscr = "Snippet for Color.new255, auto generated by SCNvim" }, {t("Color.new255"),t("("),t("red:"),i(1, "0"),t(", "), t("green:"),i(2, "0"),t(", "), t("blue:"),i(3, "0"),t(", "), t("alpha:"),i(4, "255"), t(")"),}),
s( {trig = "Color.fromArray", name = "Color.fromArray", dscr = "Snippet for Color.fromArray, auto generated by SCNvim" }, {t("Color.fromArray"),t("("),t("array:"),i(1, "nil"), t(")"),}),
s( {trig = "Color.black", name = "Color.black", dscr = "Snippet for Color.black, auto generated by SCNvim" }, {t("Color.black"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Color.white", name = "Color.white", dscr = "Snippet for Color.white, auto generated by SCNvim" }, {t("Color.white"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Color.red", name = "Color.red", dscr = "Snippet for Color.red, auto generated by SCNvim" }, {t("Color.red"),t("("),t("val:"),i(1, "1.0"),t(", "), t("alpha:"),i(2, "1.0"), t(")"),}),
s( {trig = "Color.green", name = "Color.green", dscr = "Snippet for Color.green, auto generated by SCNvim" }, {t("Color.green"),t("("),t("val:"),i(1, "1.0"),t(", "), t("alpha:"),i(2, "1.0"), t(")"),}),
s( {trig = "Color.blue", name = "Color.blue", dscr = "Snippet for Color.blue, auto generated by SCNvim" }, {t("Color.blue"),t("("),t("val:"),i(1, "1.0"),t(", "), t("alpha:"),i(2, "1.0"), t(")"),}),
s( {trig = "Color.cyan", name = "Color.cyan", dscr = "Snippet for Color.cyan, auto generated by SCNvim" }, {t("Color.cyan"),t("("),t("val:"),i(1, "1.0"),t(", "), t("alpha:"),i(2, "1.0"), t(")"),}),
s( {trig = "Color.magenta", name = "Color.magenta", dscr = "Snippet for Color.magenta, auto generated by SCNvim" }, {t("Color.magenta"),t("("),t("val:"),i(1, "1.0"),t(", "), t("alpha:"),i(2, "1.0"), t(")"),}),
s( {trig = "Color.yellow", name = "Color.yellow", dscr = "Snippet for Color.yellow, auto generated by SCNvim" }, {t("Color.yellow"),t("("),t("val:"),i(1, "1.0"),t(", "), t("alpha:"),i(2, "1.0"), t(")"),}),
s( {trig = "Color.clear", name = "Color.clear", dscr = "Snippet for Color.clear, auto generated by SCNvim" }, {t("Color.clear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Color.grey", name = "Color.grey", dscr = "Snippet for Color.grey, auto generated by SCNvim" }, {t("Color.grey"),t("("),t("grey:"),i(1, "0.5"),t(", "), t("alpha:"),i(2, "1.0"), t(")"),}),
s( {trig = "Color.gray", name = "Color.gray", dscr = "Snippet for Color.gray, auto generated by SCNvim" }, {t("Color.gray"),t("("),t("gray:"),i(1, "0.5"),t(", "), t("alpha:"),i(2, "1.0"), t(")"),}),
s( {trig = "Color.rand", name = "Color.rand", dscr = "Snippet for Color.rand, auto generated by SCNvim" }, {t("Color.rand"),t("("),t("lo:"),i(1, "0.3"),t(", "), t("hi:"),i(2, "0.9"), t(")"),}),
s( {trig = "Color.hsv", name = "Color.hsv", dscr = "Snippet for Color.hsv, auto generated by SCNvim" }, {t("Color.hsv"),t("("),t("hue:"),i(1, "nil"),t(", "), t("sat:"),i(2, "nil"),t(", "), t("val:"),i(3, "nil"),t(", "), t("alpha:"),i(4, "1"), t(")"),}),
s( {trig = "Color.fromHexString", name = "Color.fromHexString", dscr = "Snippet for Color.fromHexString, auto generated by SCNvim" }, {t("Color.fromHexString"),t("("),t("string:"),i(1, "nil"), t(")"),}),
s( {trig = "CombLP.ar", name = "CombLP.ar", dscr = "Snippet for CombLP.ar, auto generated by SCNvim" }, {t("CombLP.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("gate:"),i(2, "1.0"),t(", "), t("maxdelaytime:"),i(3, "0.2"),t(", "), t("delaytime:"),i(4, "0.2"),t(", "), t("decaytime:"),i(5, "1.0"),t(", "), t("coef:"),i(6, "0.5"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "CombN.ar", name = "CombN.ar", dscr = "Snippet for CombN.ar, auto generated by SCNvim" }, {t("CombN.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("maxdelaytime:"),i(2, "0.2"),t(", "), t("delaytime:"),i(3, "0.2"),t(", "), t("decaytime:"),i(4, "1.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "CombN.kr", name = "CombN.kr", dscr = "Snippet for CombN.kr, auto generated by SCNvim" }, {t("CombN.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("maxdelaytime:"),i(2, "0.2"),t(", "), t("delaytime:"),i(3, "0.2"),t(", "), t("decaytime:"),i(4, "1.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "Compander.ar", name = "Compander.ar", dscr = "Snippet for Compander.ar, auto generated by SCNvim" }, {t("Compander.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("control:"),i(2, "0.0"),t(", "), t("thresh:"),i(3, "0.5"),t(", "), t("slopeBelow:"),i(4, "1.0"),t(", "), t("slopeAbove:"),i(5, "1.0"),t(", "), t("clampTime:"),i(6, "0.01"),t(", "), t("relaxTime:"),i(7, "0.1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "CompanderD.ar", name = "CompanderD.ar", dscr = "Snippet for CompanderD.ar, auto generated by SCNvim" }, {t("CompanderD.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("thresh:"),i(2, "0.5"),t(", "), t("slopeBelow:"),i(3, "1.0"),t(", "), t("slopeAbove:"),i(4, "1.0"),t(", "), t("clampTime:"),i(5, "0.01"),t(", "), t("relaxTime:"),i(6, "0.01"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "Complex.new", name = "Complex.new", dscr = "Snippet for Complex.new, auto generated by SCNvim" }, {t("Complex.new"),t("("),t("real:"),i(1, "nil"),t(", "), t("imag:"),i(2, "nil"), t(")"),}),
s( {trig = "ComplexRes.ar", name = "ComplexRes.ar", dscr = "Snippet for ComplexRes.ar, auto generated by SCNvim" }, {t("ComplexRes.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "100.0"),t(", "), t("decay:"),i(3, "0.2"), t(")"),}),
s( {trig = "Concat.ar", name = "Concat.ar", dscr = "Snippet for Concat.ar, auto generated by SCNvim" }, {t("Concat.ar"),t("("),t("control:"),i(1, "nil"),t(", "), t("source:"),i(2, "nil"),t(", "), t("storesize:"),i(3, "1.0"),t(", "), t("seektime:"),i(4, "1.0"),t(", "), t("seekdur:"),i(5, "1.0"),t(", "), t("matchlength:"),i(6, "0.05"),t(", "), t("freezestore:"),i(7, "0"),t(", "), t("zcr:"),i(8, "1.0"),t(", "), t("lms:"),i(9, "1.0"),t(", "), t("sc:"),i(10, "1.0"),t(", "), t("st:"),i(11, "0.0"),t(", "), t("randscore:"),i(12, "0.0"),t(", "), t("mul:"),i(13, "1.0"),t(", "), t("add:"),i(14, "0.0"), t(")"),}),
s( {trig = "Concat2.ar", name = "Concat2.ar", dscr = "Snippet for Concat2.ar, auto generated by SCNvim" }, {t("Concat2.ar"),t("("),t("control:"),i(1, "nil"),t(", "), t("source:"),i(2, "nil"),t(", "), t("storesize:"),i(3, "1.0"),t(", "), t("seektime:"),i(4, "1.0"),t(", "), t("seekdur:"),i(5, "1.0"),t(", "), t("matchlength:"),i(6, "0.05"),t(", "), t("freezestore:"),i(7, "0"),t(", "), t("zcr:"),i(8, "1.0"),t(", "), t("lms:"),i(9, "1.0"),t(", "), t("sc:"),i(10, "1.0"),t(", "), t("st:"),i(11, "0.0"),t(", "), t("randscore:"),i(12, "0.0"),t(", "), t("threshold:"),i(13, "0.01"),t(", "), t("mul:"),i(14, "1.0"),t(", "), t("add:"),i(15, "0.0"), t(")"),}),
s( {trig = "CondVar.new", name = "CondVar.new", dscr = "Snippet for CondVar.new, auto generated by SCNvim" }, {t("CondVar.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Condition.new", name = "Condition.new", dscr = "Snippet for Condition.new, auto generated by SCNvim" }, {t("Condition.new"),t("("),t("test:"),i(1, "false"), t(")"),}),
s( {trig = "ContiguousBlock.new", name = "ContiguousBlock.new", dscr = "Snippet for ContiguousBlock.new, auto generated by SCNvim" }, {t("ContiguousBlock.new"),t("("),t("start:"),i(1, "nil"),t(", "), t("size:"),i(2, "nil"), t(")"),}),
s( {trig = "ContiguousBlockAllocator.new", name = "ContiguousBlockAllocator.new", dscr = "Snippet for ContiguousBlockAllocator.new, auto generated by SCNvim" }, {t("ContiguousBlockAllocator.new"),t("("),t("size:"),i(1, "nil"),t(", "), t("pos:"),i(2, "0"),t(", "), t("addrOffset:"),i(3, "0"), t(")"),}),
s( {trig = "Control.names", name = "Control.names", dscr = "Snippet for Control.names, auto generated by SCNvim" }, {t("Control.names"),t("("),t("names:"),i(1, "nil"), t(")"),}),
s( {trig = "Control.kr", name = "Control.kr", dscr = "Snippet for Control.kr, auto generated by SCNvim" }, {t("Control.kr"),t("("),t("values:"),i(1, "nil"), t(")"),}),
s( {trig = "Control.ir", name = "Control.ir", dscr = "Snippet for Control.ir, auto generated by SCNvim" }, {t("Control.ir"),t("("),t("values:"),i(1, "nil"), t(")"),}),
s( {trig = "Control.isControlUGen", name = "Control.isControlUGen", dscr = "Snippet for Control.isControlUGen, auto generated by SCNvim" }, {t("Control.isControlUGen"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ControlName.new", name = "ControlName.new", dscr = "Snippet for ControlName.new, auto generated by SCNvim" }, {t("ControlName.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("index:"),i(2, "nil"),t(", "), t("rate:"),i(3, "nil"),t(", "), t("defaultValue:"),i(4, "nil"),t(", "), t("argNum:"),i(5, "nil"),t(", "), t("lag:"),i(6, "nil"), t(")"),}),
s( {trig = "ControlSpec.new", name = "ControlSpec.new", dscr = "Snippet for ControlSpec.new, auto generated by SCNvim" }, {t("ControlSpec.new"),t("("),t("minval:"),i(1, "0.0"),t(", "), t("maxval:"),i(2, "1.0"),t(", "), t("warp:"),i(3, "lin"),t(", "), t("step:"),i(4, "0.0"),t(", "), t("default:"),i(5, "nil"),t(", "), t("units:"),i(6, "nil"),t(", "), t("grid:"),i(7, "nil"), t(")"),}),
s( {trig = "ControlSpec.newFrom", name = "ControlSpec.newFrom", dscr = "Snippet for ControlSpec.newFrom, auto generated by SCNvim" }, {t("ControlSpec.newFrom"),t("("),t("similar:"),i(1, "nil"), t(")"),}),
s( {trig = "ControlSpec.initClass", name = "ControlSpec.initClass", dscr = "Snippet for ControlSpec.initClass, auto generated by SCNvim" }, {t("ControlSpec.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Convolution.ar", name = "Convolution.ar", dscr = "Snippet for Convolution.ar, auto generated by SCNvim" }, {t("Convolution.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("kernel:"),i(2, "nil"),t(", "), t("framesize:"),i(3, "512"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Convolution2.ar", name = "Convolution2.ar", dscr = "Snippet for Convolution2.ar, auto generated by SCNvim" }, {t("Convolution2.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("kernel:"),i(2, "nil"),t(", "), t("trigger:"),i(3, "0"),t(", "), t("framesize:"),i(4, "2048"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "Convolution2L.ar", name = "Convolution2L.ar", dscr = "Snippet for Convolution2L.ar, auto generated by SCNvim" }, {t("Convolution2L.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("kernel:"),i(2, "nil"),t(", "), t("trigger:"),i(3, "0"),t(", "), t("framesize:"),i(4, "2048"),t(", "), t("crossfade:"),i(5, "1"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "Convolution3.ar", name = "Convolution3.ar", dscr = "Snippet for Convolution3.ar, auto generated by SCNvim" }, {t("Convolution3.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("kernel:"),i(2, "nil"),t(", "), t("trigger:"),i(3, "0"),t(", "), t("framesize:"),i(4, "2048"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "Convolution3.kr", name = "Convolution3.kr", dscr = "Snippet for Convolution3.kr, auto generated by SCNvim" }, {t("Convolution3.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("kernel:"),i(2, "nil"),t(", "), t("trigger:"),i(3, "0"),t(", "), t("framesize:"),i(4, "2048"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "Coyote.kr", name = "Coyote.kr", dscr = "Snippet for Coyote.kr, auto generated by SCNvim" }, {t("Coyote.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trackFall:"),i(2, "0.2"),t(", "), t("slowLag:"),i(3, "0.2"),t(", "), t("fastLag:"),i(4, "0.01"),t(", "), t("fastMul:"),i(5, "0.5"),t(", "), t("thresh:"),i(6, "0.05"),t(", "), t("minDur:"),i(7, "0.1"), t(")"),}),
s( {trig = "Crackle.ar", name = "Crackle.ar", dscr = "Snippet for Crackle.ar, auto generated by SCNvim" }, {t("Crackle.ar"),t("("),t("chaosParam:"),i(1, "1.5"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Crackle.kr", name = "Crackle.kr", dscr = "Snippet for Crackle.kr, auto generated by SCNvim" }, {t("Crackle.kr"),t("("),t("chaosParam:"),i(1, "1.5"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Crest.kr", name = "Crest.kr", dscr = "Snippet for Crest.kr, auto generated by SCNvim" }, {t("Crest.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamps:"),i(2, "400"),t(", "), t("gate:"),i(3, "1"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "Crest.categories", name = "Crest.categories", dscr = "Snippet for Crest.categories, auto generated by SCNvim" }, {t("Crest.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "CrossoverDistortion.ar", name = "CrossoverDistortion.ar", dscr = "Snippet for CrossoverDistortion.ar, auto generated by SCNvim" }, {t("CrossoverDistortion.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("amp:"),i(2, "0.5"),t(", "), t("smooth:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "CurveWarp.new", name = "CurveWarp.new", dscr = "Snippet for CurveWarp.new, auto generated by SCNvim" }, {t("CurveWarp.new"),t("("),t("spec:"),i(1, "nil"),t(", "), t("curve:"),i(2, "-2"), t(")"),}),
s( {trig = "CuspN.ar", name = "CuspN.ar", dscr = "Snippet for CuspN.ar, auto generated by SCNvim" }, {t("CuspN.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a:"),i(2, "1"),t(", "), t("b:"),i(3, "1.9"),t(", "), t("xi:"),i(4, "0"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "CustomViewAction.new", name = "CustomViewAction.new", dscr = "Snippet for CustomViewAction.new, auto generated by SCNvim" }, {t("CustomViewAction.new"),t("("),t("view:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "CustomViewAction.qtClass", name = "CustomViewAction.qtClass", dscr = "Snippet for CustomViewAction.qtClass, auto generated by SCNvim" }, {t("CustomViewAction.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "DC.ar", name = "DC.ar", dscr = "Snippet for DC.ar, auto generated by SCNvim" }, {t("DC.ar"),t("("),t("in:"),i(1, "0.0"), t(")"),}),
s( {trig = "DC.kr", name = "DC.kr", dscr = "Snippet for DC.kr, auto generated by SCNvim" }, {t("DC.kr"),t("("),t("in:"),i(1, "0.0"), t(")"),}),
s( {trig = "DFM1.ar", name = "DFM1.ar", dscr = "Snippet for DFM1.ar, auto generated by SCNvim" }, {t("DFM1.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1000.0"),t(", "), t("res:"),i(3, "0.1"),t(", "), t("inputgain:"),i(4, "1.0"),t(", "), t("type:"),i(5, "0.0"),t(", "), t("noiselevel:"),i(6, "0.0003"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "DNoiseRing.new", name = "DNoiseRing.new", dscr = "Snippet for DNoiseRing.new, auto generated by SCNvim" }, {t("DNoiseRing.new"),t("("),t("change:"),i(1, "0.5"),t(", "), t("chance:"),i(2, "0.5"),t(", "), t("shift:"),i(3, "1"),t(", "), t("numBits:"),i(4, "8"),t(", "), t("resetval:"),i(5, "0"), t(")"),}),
s( {trig = "DPW3Tri.ar", name = "DPW3Tri.ar", dscr = "Snippet for DPW3Tri.ar, auto generated by SCNvim" }, {t("DPW3Tri.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "DPW4Saw.ar", name = "DPW4Saw.ar", dscr = "Snippet for DPW4Saw.ar, auto generated by SCNvim" }, {t("DPW4Saw.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "DWGBowed.ar", name = "DWGBowed.ar", dscr = "Snippet for DWGBowed.ar, auto generated by SCNvim" }, {t("DWGBowed.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("velb:"),i(2, "0.5"),t(", "), t("force:"),i(3, "1"),t(", "), t("gate:"),i(4, "1"),t(", "), t("pos:"),i(5, "0.14"),t(", "), t("release:"),i(6, "0.1"),t(", "), t("c1:"),i(7, "1"),t(", "), t("c3:"),i(8, "3"),t(", "), t("impZ:"),i(9, "0.55"),t(", "), t("fB:"),i(10, "2"), t(")"),}),
s( {trig = "DWGBowedSimple.ar", name = "DWGBowedSimple.ar", dscr = "Snippet for DWGBowedSimple.ar, auto generated by SCNvim" }, {t("DWGBowedSimple.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("velb:"),i(2, "0.5"),t(", "), t("force:"),i(3, "1"),t(", "), t("gate:"),i(4, "1"),t(", "), t("pos:"),i(5, "0.14"),t(", "), t("release:"),i(6, "0.1"),t(", "), t("c1:"),i(7, "1"),t(", "), t("c3:"),i(8, "30"), t(")"),}),
s( {trig = "DWGBowedTor.ar", name = "DWGBowedTor.ar", dscr = "Snippet for DWGBowedTor.ar, auto generated by SCNvim" }, {t("DWGBowedTor.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("velb:"),i(2, "0.5"),t(", "), t("force:"),i(3, "1"),t(", "), t("gate:"),i(4, "1"),t(", "), t("pos:"),i(5, "0.14"),t(", "), t("release:"),i(6, "0.1"),t(", "), t("c1:"),i(7, "1"),t(", "), t("c3:"),i(8, "3"),t(", "), t("impZ:"),i(9, "0.55"),t(", "), t("fB:"),i(10, "2"),t(", "), t("mistune:"),i(11, "5.2"),t(", "), t("c1tor:"),i(12, "1"),t(", "), t("c3tor:"),i(13, "3000"),t(", "), t("iZtor:"),i(14, "1.8"), t(")"),}),
s( {trig = "DWGPlucked.ar", name = "DWGPlucked.ar", dscr = "Snippet for DWGPlucked.ar, auto generated by SCNvim" }, {t("DWGPlucked.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("amp:"),i(2, "0.5"),t(", "), t("gate:"),i(3, "1"),t(", "), t("pos:"),i(4, "0.14"),t(", "), t("c1:"),i(5, "1"),t(", "), t("c3:"),i(6, "30"),t(", "), t("inp:"),i(7, "0"),t(", "), t("release:"),i(8, "0.1"), t(")"),}),
s( {trig = "DWGPlucked2.ar", name = "DWGPlucked2.ar", dscr = "Snippet for DWGPlucked2.ar, auto generated by SCNvim" }, {t("DWGPlucked2.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("amp:"),i(2, "0.5"),t(", "), t("gate:"),i(3, "1"),t(", "), t("pos:"),i(4, "0.14"),t(", "), t("c1:"),i(5, "1"),t(", "), t("c3:"),i(6, "30"),t(", "), t("inp:"),i(7, "0"),t(", "), t("release:"),i(8, "0.1"),t(", "), t("mistune:"),i(9, "1.008"),t(", "), t("mp:"),i(10, "0.55"),t(", "), t("gc:"),i(11, "0.01"), t(")"),}),
s( {trig = "DWGPluckedStiff.ar", name = "DWGPluckedStiff.ar", dscr = "Snippet for DWGPluckedStiff.ar, auto generated by SCNvim" }, {t("DWGPluckedStiff.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("amp:"),i(2, "0.5"),t(", "), t("gate:"),i(3, "1"),t(", "), t("pos:"),i(4, "0.14"),t(", "), t("c1:"),i(5, "1"),t(", "), t("c3:"),i(6, "30"),t(", "), t("inp:"),i(7, "0"),t(", "), t("release:"),i(8, "0.1"),t(", "), t("fB:"),i(9, "2"), t(")"),}),
s( {trig = "DWGSoundBoard.ar", name = "DWGSoundBoard.ar", dscr = "Snippet for DWGSoundBoard.ar, auto generated by SCNvim" }, {t("DWGSoundBoard.ar"),t("("),t("inp:"),i(1, "0"),t(", "), t("c1:"),i(2, "20"),t(", "), t("c3:"),i(3, "20"),t(", "), t("mix:"),i(4, "0.8"),t(", "), t("d1:"),i(5, "199"),t(", "), t("d2:"),i(6, "211"),t(", "), t("d3:"),i(7, "223"),t(", "), t("d4:"),i(8, "227"),t(", "), t("d5:"),i(9, "229"),t(", "), t("d6:"),i(10, "233"),t(", "), t("d7:"),i(11, "239"),t(", "), t("d8:"),i(12, "241"), t(")"),}),
s( {trig = "Date.getDate", name = "Date.getDate", dscr = "Snippet for Date.getDate, auto generated by SCNvim" }, {t("Date.getDate"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Date.localtime", name = "Date.localtime", dscr = "Snippet for Date.localtime, auto generated by SCNvim" }, {t("Date.localtime"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Date.gmtime", name = "Date.gmtime", dscr = "Snippet for Date.gmtime, auto generated by SCNvim" }, {t("Date.gmtime"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Date.new", name = "Date.new", dscr = "Snippet for Date.new, auto generated by SCNvim" }, {t("Date.new"),t("("),t("year:"),i(1, "nil"),t(", "), t("month:"),i(2, "nil"),t(", "), t("day:"),i(3, "nil"),t(", "), t("hour:"),i(4, "nil"),t(", "), t("minute:"),i(5, "nil"),t(", "), t("second:"),i(6, "nil"),t(", "), t("dayOfWeek:"),i(7, "nil"),t(", "), t("rawSeconds:"),i(8, "nil"), t(")"),}),
s( {trig = "Date.seed", name = "Date.seed", dscr = "Snippet for Date.seed, auto generated by SCNvim" }, {t("Date.seed"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Dbrown.new", name = "Dbrown.new", dscr = "Snippet for Dbrown.new, auto generated by SCNvim" }, {t("Dbrown.new"),t("("),t("lo:"),i(1, "0.0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("step:"),i(3, "0.01"),t(", "), t("length:"),i(4, "inf"), t(")"),}),
s( {trig = "Dbrown2.new", name = "Dbrown2.new", dscr = "Snippet for Dbrown2.new, auto generated by SCNvim" }, {t("Dbrown2.new"),t("("),t("lo:"),i(1, "nil"),t(", "), t("hi:"),i(2, "nil"),t(", "), t("step:"),i(3, "nil"),t(", "), t("dist:"),i(4, "nil"),t(", "), t("length:"),i(5, "inf"), t(")"),}),
s( {trig = "DbufTag.new", name = "DbufTag.new", dscr = "Snippet for DbufTag.new, auto generated by SCNvim" }, {t("DbufTag.new"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("v:"),i(2, "nil"),t(", "), t("axiom:"),i(3, "nil"),t(", "), t("rules:"),i(4, "nil"),t(", "), t("recycle:"),i(5, "0"),t(", "), t("mode:"),i(6, "0"), t(")"),}),
s( {trig = "DbufTag.convertRules", name = "DbufTag.convertRules", dscr = "Snippet for DbufTag.convertRules, auto generated by SCNvim" }, {t("DbufTag.convertRules"),t("("),t("axiom:"),i(1, "nil"),t(", "), t("rules:"),i(2, "nil"), t(")"),}),
s( {trig = "Dbufrd.new", name = "Dbufrd.new", dscr = "Snippet for Dbufrd.new, auto generated by SCNvim" }, {t("Dbufrd.new"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("phase:"),i(2, "0.0"),t(", "), t("loop:"),i(3, "1.0"), t(")"),}),
s( {trig = "Dbufwr.new", name = "Dbufwr.new", dscr = "Snippet for Dbufwr.new, auto generated by SCNvim" }, {t("Dbufwr.new"),t("("),t("input:"),i(1, "0.0"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("loop:"),i(4, "1.0"), t(")"),}),
s( {trig = "Dconst.new", name = "Dconst.new", dscr = "Snippet for Dconst.new, auto generated by SCNvim" }, {t("Dconst.new"),t("("),t("sum:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("tolerance:"),i(3, "0.001"), t(")"),}),
s( {trig = "Ddup.new", name = "Ddup.new", dscr = "Snippet for Ddup.new, auto generated by SCNvim" }, {t("Ddup.new"),t("("),t("n:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"), t(")"),}),
s( {trig = "Decay.ar", name = "Decay.ar", dscr = "Snippet for Decay.ar, auto generated by SCNvim" }, {t("Decay.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("decayTime:"),i(2, "1.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Decay.kr", name = "Decay.kr", dscr = "Snippet for Decay.kr, auto generated by SCNvim" }, {t("Decay.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("decayTime:"),i(2, "1.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Decay2.ar", name = "Decay2.ar", dscr = "Snippet for Decay2.ar, auto generated by SCNvim" }, {t("Decay2.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("attackTime:"),i(2, "0.01"),t(", "), t("decayTime:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Decay2.kr", name = "Decay2.kr", dscr = "Snippet for Decay2.kr, auto generated by SCNvim" }, {t("Decay2.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("attackTime:"),i(2, "0.01"),t(", "), t("decayTime:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Decimator.ar", name = "Decimator.ar", dscr = "Snippet for Decimator.ar, auto generated by SCNvim" }, {t("Decimator.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("rate:"),i(2, "44100.0"),t(", "), t("bits:"),i(3, "24"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "DecodeB2.ar", name = "DecodeB2.ar", dscr = "Snippet for DecodeB2.ar, auto generated by SCNvim" }, {t("DecodeB2.ar"),t("("),t("numChans:"),i(1, "nil"),t(", "), t("w:"),i(2, "nil"),t(", "), t("x:"),i(3, "nil"),t(", "), t("y:"),i(4, "nil"),t(", "), t("orientation:"),i(5, "0.5"), t(")"),}),
s( {trig = "DecodeB2.kr", name = "DecodeB2.kr", dscr = "Snippet for DecodeB2.kr, auto generated by SCNvim" }, {t("DecodeB2.kr"),t("("),t("numChans:"),i(1, "nil"),t(", "), t("w:"),i(2, "nil"),t(", "), t("x:"),i(3, "nil"),t(", "), t("y:"),i(4, "nil"),t(", "), t("orientation:"),i(5, "0.5"), t(")"),}),
s( {trig = "DegreeToKey.ar", name = "DegreeToKey.ar", dscr = "Snippet for DegreeToKey.ar, auto generated by SCNvim" }, {t("DegreeToKey.ar"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("in:"),i(2, "0.0"),t(", "), t("octave:"),i(3, "12.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "DegreeToKey.kr", name = "DegreeToKey.kr", dscr = "Snippet for DegreeToKey.kr, auto generated by SCNvim" }, {t("DegreeToKey.kr"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("in:"),i(2, "0.0"),t(", "), t("octave:"),i(3, "12.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "DelTapRd.ar", name = "DelTapRd.ar", dscr = "Snippet for DelTapRd.ar, auto generated by SCNvim" }, {t("DelTapRd.ar"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("phase:"),i(2, "nil"),t(", "), t("delTime:"),i(3, "nil"),t(", "), t("interp:"),i(4, "1"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "DelTapRd.kr", name = "DelTapRd.kr", dscr = "Snippet for DelTapRd.kr, auto generated by SCNvim" }, {t("DelTapRd.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("phase:"),i(2, "nil"),t(", "), t("delTime:"),i(3, "nil"),t(", "), t("interp:"),i(4, "1"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "DelTapWr.ar", name = "DelTapWr.ar", dscr = "Snippet for DelTapWr.ar, auto generated by SCNvim" }, {t("DelTapWr.ar"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"), t(")"),}),
s( {trig = "DelTapWr.kr", name = "DelTapWr.kr", dscr = "Snippet for DelTapWr.kr, auto generated by SCNvim" }, {t("DelTapWr.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"), t(")"),}),
s( {trig = "Delay1.ar", name = "Delay1.ar", dscr = "Snippet for Delay1.ar, auto generated by SCNvim" }, {t("Delay1.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Delay1.kr", name = "Delay1.kr", dscr = "Snippet for Delay1.kr, auto generated by SCNvim" }, {t("Delay1.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "DelayN.ar", name = "DelayN.ar", dscr = "Snippet for DelayN.ar, auto generated by SCNvim" }, {t("DelayN.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("maxdelaytime:"),i(2, "0.2"),t(", "), t("delaytime:"),i(3, "0.2"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "DelayN.kr", name = "DelayN.kr", dscr = "Snippet for DelayN.kr, auto generated by SCNvim" }, {t("DelayN.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("maxdelaytime:"),i(2, "0.2"),t(", "), t("delaytime:"),i(3, "0.2"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "DelayWr.ar", name = "DelayWr.ar", dscr = "Snippet for DelayWr.ar, auto generated by SCNvim" }, {t("DelayWr.ar"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("in:"),i(2, "0.0"), t(")"),}),
s( {trig = "Demand.ar", name = "Demand.ar", dscr = "Snippet for Demand.ar, auto generated by SCNvim" }, {t("Demand.ar"),t("("),t("trig:"),i(1, "nil"),t(", "), t("reset:"),i(2, "nil"),t(", "), t("demandUGens:"),i(3, "nil"), t(")"),}),
s( {trig = "Demand.kr", name = "Demand.kr", dscr = "Snippet for Demand.kr, auto generated by SCNvim" }, {t("Demand.kr"),t("("),t("trig:"),i(1, "nil"),t(", "), t("reset:"),i(2, "nil"),t(", "), t("demandUGens:"),i(3, "nil"), t(")"),}),
s( {trig = "DemandEnvGen.kr", name = "DemandEnvGen.kr", dscr = "Snippet for DemandEnvGen.kr, auto generated by SCNvim" }, {t("DemandEnvGen.kr"),t("("),t("level:"),i(1, "nil"),t(", "), t("dur:"),i(2, "nil"),t(", "), t("shape:"),i(3, "1"),t(", "), t("curve:"),i(4, "0"),t(", "), t("gate:"),i(5, "1.0"),t(", "), t("reset:"),i(6, "1.0"),t(", "), t("levelScale:"),i(7, "1.0"),t(", "), t("levelBias:"),i(8, "0.0"),t(", "), t("timeScale:"),i(9, "1.0"),t(", "), t("doneAction:"),i(10, "0"), t(")"),}),
s( {trig = "DemandEnvGen.ar", name = "DemandEnvGen.ar", dscr = "Snippet for DemandEnvGen.ar, auto generated by SCNvim" }, {t("DemandEnvGen.ar"),t("("),t("level:"),i(1, "nil"),t(", "), t("dur:"),i(2, "nil"),t(", "), t("shape:"),i(3, "1"),t(", "), t("curve:"),i(4, "0"),t(", "), t("gate:"),i(5, "1.0"),t(", "), t("reset:"),i(6, "1.0"),t(", "), t("levelScale:"),i(7, "1.0"),t(", "), t("levelBias:"),i(8, "0.0"),t(", "), t("timeScale:"),i(9, "1.0"),t(", "), t("doneAction:"),i(10, "0"), t(")"),}),
s( {trig = "DeprecatedError.new", name = "DeprecatedError.new", dscr = "Snippet for DeprecatedError.new, auto generated by SCNvim" }, {t("DeprecatedError.new"),t("("),t("receiver:"),i(1, "nil"),t(", "), t("method:"),i(2, "nil"),t(", "), t("alternateMethod:"),i(3, "nil"),t(", "), t("class:"),i(4, "nil"), t(")"),}),
s( {trig = "DetaBlockerBuf.new", name = "DetaBlockerBuf.new", dscr = "Snippet for DetaBlockerBuf.new, auto generated by SCNvim" }, {t("DetaBlockerBuf.new"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("startpoint:"),i(2, "0"), t(")"),}),
s( {trig = "DetectSilence.ar", name = "DetectSilence.ar", dscr = "Snippet for DetectSilence.ar, auto generated by SCNvim" }, {t("DetectSilence.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("amp:"),i(2, "0.0001"),t(", "), t("time:"),i(3, "0.1"),t(", "), t("doneAction:"),i(4, "0"), t(")"),}),
s( {trig = "DetectSilence.kr", name = "DetectSilence.kr", dscr = "Snippet for DetectSilence.kr, auto generated by SCNvim" }, {t("DetectSilence.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("amp:"),i(2, "0.0001"),t(", "), t("time:"),i(3, "0.1"),t(", "), t("doneAction:"),i(4, "0"), t(")"),}),
s( {trig = "Dfsm.new", name = "Dfsm.new", dscr = "Snippet for Dfsm.new, auto generated by SCNvim" }, {t("Dfsm.new"),t("("),t("rules:"),i(1, "nil"),t(", "), t("n:"),i(2, "1"),t(", "), t("rgen:"),i(3, "nil"), t(")"),}),
s( {trig = "Dfsm.convertRules", name = "Dfsm.convertRules", dscr = "Snippet for Dfsm.convertRules, auto generated by SCNvim" }, {t("Dfsm.convertRules"),t("("),t("rules:"),i(1, "nil"), t(")"),}),
s( {trig = "Dgauss.new", name = "Dgauss.new", dscr = "Snippet for Dgauss.new, auto generated by SCNvim" }, {t("Dgauss.new"),t("("),t("lo:"),i(1, "nil"),t(", "), t("hi:"),i(2, "nil"),t(", "), t("length:"),i(3, "inf"), t(")"),}),
s( {trig = "Dgeom.new", name = "Dgeom.new", dscr = "Snippet for Dgeom.new, auto generated by SCNvim" }, {t("Dgeom.new"),t("("),t("start:"),i(1, "1"),t(", "), t("grow:"),i(2, "2"),t(", "), t("length:"),i(3, "inf"), t(")"),}),
s( {trig = "Dialog.openPanel", name = "Dialog.openPanel", dscr = "Snippet for Dialog.openPanel, auto generated by SCNvim" }, {t("Dialog.openPanel"),t("("),t("okFunc:"),i(1, "nil"),t(", "), t("cancelFunc:"),i(2, "nil"),t(", "), t("multipleSelection:"),i(3, "false"),t(", "), t("path:"),i(4, "nil"), t(")"),}),
s( {trig = "Dialog.savePanel", name = "Dialog.savePanel", dscr = "Snippet for Dialog.savePanel, auto generated by SCNvim" }, {t("Dialog.savePanel"),t("("),t("okFunc:"),i(1, "nil"),t(", "), t("cancelFunc:"),i(2, "nil"),t(", "), t("path:"),i(3, "nil"), t(")"),}),
s( {trig = "Dialog.getPaths", name = "Dialog.getPaths", dscr = "Snippet for Dialog.getPaths, auto generated by SCNvim" }, {t("Dialog.getPaths"),t("("),t("okFunc:"),i(1, "nil"),t(", "), t("cancelFunc:"),i(2, "nil"),t(", "), t("allowsMultiple:"),i(3, "true"), t(")"),}),
s( {trig = "Dictionary.new", name = "Dictionary.new", dscr = "Snippet for Dictionary.new, auto generated by SCNvim" }, {t("Dictionary.new"),t("("),t("n:"),i(1, "8"), t(")"),}),
s( {trig = "Dictionary.newFrom", name = "Dictionary.newFrom", dscr = "Snippet for Dictionary.newFrom, auto generated by SCNvim" }, {t("Dictionary.newFrom"),t("("),t("aCollection:"),i(1, "nil"), t(")"),}),
s( {trig = "DigitalIO.ar", name = "DigitalIO.ar", dscr = "Snippet for DigitalIO.ar, auto generated by SCNvim" }, {t("DigitalIO.ar"),t("("),t("digitalPin:"),i(1, "0"),t(", "), t("output:"),i(2, "0"),t(", "), t("pinMode:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "DigitalIO.kr", name = "DigitalIO.kr", dscr = "Snippet for DigitalIO.kr, auto generated by SCNvim" }, {t("DigitalIO.kr"),t("("),t("digitalPin:"),i(1, "0"),t(", "), t("output:"),i(2, "0"),t(", "), t("pinMode:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "DigitalIn.ar", name = "DigitalIn.ar", dscr = "Snippet for DigitalIn.ar, auto generated by SCNvim" }, {t("DigitalIn.ar"),t("("),t("digitalPin:"),i(1, "0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "DigitalIn.kr", name = "DigitalIn.kr", dscr = "Snippet for DigitalIn.kr, auto generated by SCNvim" }, {t("DigitalIn.kr"),t("("),t("digitalPin:"),i(1, "0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "DigitalOut.ar", name = "DigitalOut.ar", dscr = "Snippet for DigitalOut.ar, auto generated by SCNvim" }, {t("DigitalOut.ar"),t("("),t("digitalPin:"),i(1, "0"),t(", "), t("output:"),i(2, "0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "DigitalOut.kr", name = "DigitalOut.kr", dscr = "Snippet for DigitalOut.kr, auto generated by SCNvim" }, {t("DigitalOut.kr"),t("("),t("digitalPin:"),i(1, "0"),t(", "), t("output:"),i(2, "0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "DiodeRingMod.ar", name = "DiodeRingMod.ar", dscr = "Snippet for DiodeRingMod.ar, auto generated by SCNvim" }, {t("DiodeRingMod.ar"),t("("),t("car:"),i(1, "0.0"),t(", "), t("mod:"),i(2, "0.0"), t(")"),}),
s( {trig = "Disintegrator.ar", name = "Disintegrator.ar", dscr = "Snippet for Disintegrator.ar, auto generated by SCNvim" }, {t("Disintegrator.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("probability:"),i(2, "0.5"),t(", "), t("multiplier:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "DiskIn.ar", name = "DiskIn.ar", dscr = "Snippet for DiskIn.ar, auto generated by SCNvim" }, {t("DiskIn.ar"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "nil"),t(", "), t("loop:"),i(3, "0"), t(")"),}),
s( {trig = "DiskOut.ar", name = "DiskOut.ar", dscr = "Snippet for DiskOut.ar, auto generated by SCNvim" }, {t("DiskOut.ar"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("channelsArray:"),i(2, "nil"), t(")"),}),
s( {trig = "Dneuromodule.new", name = "Dneuromodule.new", dscr = "Snippet for Dneuromodule.new, auto generated by SCNvim" }, {t("Dneuromodule.new"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("theta:"),i(2, "nil"),t(", "), t("x:"),i(3, "nil"),t(", "), t("weights:"),i(4, "nil"), t(")"),}),
s( {trig = "Dneuromodule.ar", name = "Dneuromodule.ar", dscr = "Snippet for Dneuromodule.ar, auto generated by SCNvim" }, {t("Dneuromodule.ar"),t("("),t("dt:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "nil"),t(", "), t("theta:"),i(3, "nil"),t(", "), t("x:"),i(4, "nil"),t(", "), t("weights:"),i(5, "nil"), t(")"),}),
s( {trig = "Dneuromodule.kr", name = "Dneuromodule.kr", dscr = "Snippet for Dneuromodule.kr, auto generated by SCNvim" }, {t("Dneuromodule.kr"),t("("),t("dt:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "nil"),t(", "), t("theta:"),i(3, "nil"),t(", "), t("x:"),i(4, "nil"),t(", "), t("weights:"),i(5, "nil"), t(")"),}),
s( {trig = "Document.new", name = "Document.new", dscr = "Snippet for Document.new, auto generated by SCNvim" }, {t("Document.new"),t("("),t("path:"),i(1, "nil"),t(", "), t("dataptr:"),i(2, "nil"), t(")"),}),
s( {trig = "Document.current", name = "Document.current", dscr = "Snippet for Document.current, auto generated by SCNvim" }, {t("Document.current"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Document.dir_", name = "Document.dir_", dscr = "Snippet for Document.dir_, auto generated by SCNvim" }, {t("Document.dir_"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "DoesNotUnderstandError.new", name = "DoesNotUnderstandError.new", dscr = "Snippet for DoesNotUnderstandError.new, auto generated by SCNvim" }, {t("DoesNotUnderstandError.new"),t("("),t("receiver:"),i(1, "nil"),t(", "), t("selector:"),i(2, "nil"),t(", "), t("args:"),i(3, "nil"), t(")"),}),
s( {trig = "Done.kr", name = "Done.kr", dscr = "Snippet for Done.kr, auto generated by SCNvim" }, {t("Done.kr"),t("("),t("src:"),i(1, "nil"), t(")"),}),
s( {trig = "DoubleNestedAllpassN.ar", name = "DoubleNestedAllpassN.ar", dscr = "Snippet for DoubleNestedAllpassN.ar, auto generated by SCNvim" }, {t("DoubleNestedAllpassN.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("maxdelay1:"),i(2, "0.0047"),t(", "), t("delay1:"),i(3, "0.0047"),t(", "), t("gain1:"),i(4, "0.15"),t(", "), t("maxdelay2:"),i(5, "0.022"),t(", "), t("delay2:"),i(6, "0.022"),t(", "), t("gain2:"),i(7, "0.25"),t(", "), t("maxdelay3:"),i(8, "0.0083"),t(", "), t("delay3:"),i(9, "0.0083"),t(", "), t("gain3:"),i(10, "0.3"),t(", "), t("mul:"),i(11, "1.0"),t(", "), t("add:"),i(12, "0.0"), t(")"),}),
s( {trig = "DoubleWell.ar", name = "DoubleWell.ar", dscr = "Snippet for DoubleWell.ar, auto generated by SCNvim" }, {t("DoubleWell.ar"),t("("),t("reset:"),i(1, "0"),t(", "), t("ratex:"),i(2, "0.01"),t(", "), t("ratey:"),i(3, "0.01"),t(", "), t("f:"),i(4, "1"),t(", "), t("w:"),i(5, "0.001"),t(", "), t("delta:"),i(6, "1"),t(", "), t("initx:"),i(7, "0"),t(", "), t("inity:"),i(8, "0"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "DoubleWell2.ar", name = "DoubleWell2.ar", dscr = "Snippet for DoubleWell2.ar, auto generated by SCNvim" }, {t("DoubleWell2.ar"),t("("),t("reset:"),i(1, "0"),t(", "), t("ratex:"),i(2, "0.01"),t(", "), t("ratey:"),i(3, "0.01"),t(", "), t("f:"),i(4, "1"),t(", "), t("w:"),i(5, "0.001"),t(", "), t("delta:"),i(6, "1"),t(", "), t("initx:"),i(7, "0"),t(", "), t("inity:"),i(8, "0"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "DoubleWell3.ar", name = "DoubleWell3.ar", dscr = "Snippet for DoubleWell3.ar, auto generated by SCNvim" }, {t("DoubleWell3.ar"),t("("),t("reset:"),i(1, "0"),t(", "), t("rate:"),i(2, "0.01"),t(", "), t("f:"),i(3, "0"),t(", "), t("delta:"),i(4, "0.25"),t(", "), t("initx:"),i(5, "0"),t(", "), t("inity:"),i(6, "0"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "Download.new", name = "Download.new", dscr = "Snippet for Download.new, auto generated by SCNvim" }, {t("Download.new"),t("("),t("requestedURL:"),i(1, "nil"),t(", "), t("localPath:"),i(2, "nil"),t(", "), t("finishedFunc:"),i(3, "nil"),t(", "), t("errorFunc:"),i(4, "nil"),t(", "), t("progressFunc:"),i(5, "nil"), t(")"),}),
s( {trig = "Download.qtClass", name = "Download.qtClass", dscr = "Snippet for Download.qtClass, auto generated by SCNvim" }, {t("Download.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Download.cancelAll", name = "Download.cancelAll", dscr = "Snippet for Download.cancelAll, auto generated by SCNvim" }, {t("Download.cancelAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Dpoll.new", name = "Dpoll.new", dscr = "Snippet for Dpoll.new, auto generated by SCNvim" }, {t("Dpoll.new"),t("("),t("in:"),i(1, "nil"),t(", "), t("label:"),i(2, "nil"),t(", "), t("run:"),i(3, "1"),t(", "), t("trigid:"),i(4, "-1"), t(")"),}),
s( {trig = "Dpoll.new1", name = "Dpoll.new1", dscr = "Snippet for Dpoll.new1, auto generated by SCNvim" }, {t("Dpoll.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("run:"),i(4, "nil"),t(", "), t("trigid:"),i(5, "nil"), t(")"),}),
s( {trig = "DragView.new", name = "DragView.new", dscr = "Snippet for DragView.new, auto generated by SCNvim" }, {t("DragView.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "DrawGrid.new", name = "DrawGrid.new", dscr = "Snippet for DrawGrid.new, auto generated by SCNvim" }, {t("DrawGrid.new"),t("("),t("bounds:"),i(1, "nil"),t(", "), t("horzGrid:"),i(2, "nil"),t(", "), t("vertGrid:"),i(3, "nil"), t(")"),}),
s( {trig = "DrawGrid.test", name = "DrawGrid.test", dscr = "Snippet for DrawGrid.test, auto generated by SCNvim" }, {t("DrawGrid.test"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "DrawGridX.new", name = "DrawGridX.new", dscr = "Snippet for DrawGridX.new, auto generated by SCNvim" }, {t("DrawGridX.new"),t("("),t("grid:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "Dreset.new", name = "Dreset.new", dscr = "Snippet for Dreset.new, auto generated by SCNvim" }, {t("Dreset.new"),t("("),t("in:"),i(1, "nil"),t(", "), t("reset:"),i(2, "0.0"), t(")"),}),
s( {trig = "DriveNoise.ar", name = "DriveNoise.ar", dscr = "Snippet for DriveNoise.ar, auto generated by SCNvim" }, {t("DriveNoise.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("amount:"),i(2, "1"),t(", "), t("multi:"),i(3, "5"), t(")"),}),
s( {trig = "DrumTrack.kr", name = "DrumTrack.kr", dscr = "Snippet for DrumTrack.kr, auto generated by SCNvim" }, {t("DrumTrack.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("lock:"),i(2, "0"),t(", "), t("dynleak:"),i(3, "0.0"),t(", "), t("tempowt:"),i(4, "0.0"),t(", "), t("phasewt:"),i(5, "0.0"),t(", "), t("basswt:"),i(6, "0.0"),t(", "), t("patternwt:"),i(7, "1.0"),t(", "), t("prior:"),i(8, "nil"),t(", "), t("kicksensitivity:"),i(9, "1.0"),t(", "), t("snaresensitivity:"),i(10, "1.0"),t(", "), t("debugmode:"),i(11, "0"), t(")"),}),
s( {trig = "Dseries.new", name = "Dseries.new", dscr = "Snippet for Dseries.new, auto generated by SCNvim" }, {t("Dseries.new"),t("("),t("start:"),i(1, "1"),t(", "), t("step:"),i(2, "1"),t(", "), t("length:"),i(3, "inf"), t(")"),}),
s( {trig = "Dstutter.initClass", name = "Dstutter.initClass", dscr = "Snippet for Dstutter.initClass, auto generated by SCNvim" }, {t("Dstutter.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Dstutter.new", name = "Dstutter.new", dscr = "Snippet for Dstutter.new, auto generated by SCNvim" }, {t("Dstutter.new"),t("("),t("n:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"), t(")"),}),
s( {trig = "Dswitch1.new", name = "Dswitch1.new", dscr = "Snippet for Dswitch1.new, auto generated by SCNvim" }, {t("Dswitch1.new"),t("("),t("list:"),i(1, "nil"),t(", "), t("index:"),i(2, "nil"), t(")"),}),
s( {trig = "Dtag.new", name = "Dtag.new", dscr = "Snippet for Dtag.new, auto generated by SCNvim" }, {t("Dtag.new"),t("("),t("bufsize:"),i(1, "nil"),t(", "), t("v:"),i(2, "nil"),t(", "), t("axiom:"),i(3, "nil"),t(", "), t("rules:"),i(4, "nil"),t(", "), t("recycle:"),i(5, "0"),t(", "), t("mode:"),i(6, "0"), t(")"),}),
s( {trig = "Dunique.new", name = "Dunique.new", dscr = "Snippet for Dunique.new, auto generated by SCNvim" }, {t("Dunique.new"),t("("),t("source:"),i(1, "nil"),t(", "), t("maxBufferSize:"),i(2, "1024"),t(", "), t("protected:"),i(3, "true"), t(")"),}),
s( {trig = "Dust.ar", name = "Dust.ar", dscr = "Snippet for Dust.ar, auto generated by SCNvim" }, {t("Dust.ar"),t("("),t("density:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Dust.kr", name = "Dust.kr", dscr = "Snippet for Dust.kr, auto generated by SCNvim" }, {t("Dust.kr"),t("("),t("density:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Dust2.ar", name = "Dust2.ar", dscr = "Snippet for Dust2.ar, auto generated by SCNvim" }, {t("Dust2.ar"),t("("),t("density:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Dust2.kr", name = "Dust2.kr", dscr = "Snippet for Dust2.kr, auto generated by SCNvim" }, {t("Dust2.kr"),t("("),t("density:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Duty.ar", name = "Duty.ar", dscr = "Snippet for Duty.ar, auto generated by SCNvim" }, {t("Duty.ar"),t("("),t("dur:"),i(1, "1.0"),t(", "), t("reset:"),i(2, "0.0"),t(", "), t("level:"),i(3, "1.0"),t(", "), t("doneAction:"),i(4, "0"), t(")"),}),
s( {trig = "Duty.kr", name = "Duty.kr", dscr = "Snippet for Duty.kr, auto generated by SCNvim" }, {t("Duty.kr"),t("("),t("dur:"),i(1, "1.0"),t(", "), t("reset:"),i(2, "0.0"),t(", "), t("level:"),i(3, "1.0"),t(", "), t("doneAction:"),i(4, "0"), t(")"),}),
s( {trig = "Dwhite.new", name = "Dwhite.new", dscr = "Snippet for Dwhite.new, auto generated by SCNvim" }, {t("Dwhite.new"),t("("),t("lo:"),i(1, "0.0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("length:"),i(3, "inf"), t(")"),}),
s( {trig = "Dwrand.new", name = "Dwrand.new", dscr = "Snippet for Dwrand.new, auto generated by SCNvim" }, {t("Dwrand.new"),t("("),t("list:"),i(1, "nil"),t(", "), t("weights:"),i(2, "nil"),t(", "), t("repeats:"),i(3, "1"), t(")"),}),
s( {trig = "DynKlang.ar", name = "DynKlang.ar", dscr = "Snippet for DynKlang.ar, auto generated by SCNvim" }, {t("DynKlang.ar"),t("("),t("specificationsArrayRef:"),i(1, "nil"),t(", "), t("freqscale:"),i(2, "1.0"),t(", "), t("freqoffset:"),i(3, "0.0"), t(")"),}),
s( {trig = "DynKlang.kr", name = "DynKlang.kr", dscr = "Snippet for DynKlang.kr, auto generated by SCNvim" }, {t("DynKlang.kr"),t("("),t("specificationsArrayRef:"),i(1, "nil"),t(", "), t("freqscale:"),i(2, "1.0"),t(", "), t("freqoffset:"),i(3, "0.0"), t(")"),}),
s( {trig = "DynKlang.new1", name = "DynKlang.new1", dscr = "Snippet for DynKlang.new1, auto generated by SCNvim" }, {t("DynKlang.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("specificationsArrayRef:"),i(2, "nil"),t(", "), t("freqscale:"),i(3, "1.0"),t(", "), t("freqoffset:"),i(4, "0.0"), t(")"),}),
s( {trig = "DynKlank.ar", name = "DynKlank.ar", dscr = "Snippet for DynKlank.ar, auto generated by SCNvim" }, {t("DynKlank.ar"),t("("),t("specificationsArrayRef:"),i(1, "nil"),t(", "), t("input:"),i(2, "nil"),t(", "), t("freqscale:"),i(3, "1.0"),t(", "), t("freqoffset:"),i(4, "0.0"),t(", "), t("decayscale:"),i(5, "1.0"), t(")"),}),
s( {trig = "DynKlank.kr", name = "DynKlank.kr", dscr = "Snippet for DynKlank.kr, auto generated by SCNvim" }, {t("DynKlank.kr"),t("("),t("specificationsArrayRef:"),i(1, "nil"),t(", "), t("input:"),i(2, "nil"),t(", "), t("freqscale:"),i(3, "1.0"),t(", "), t("freqoffset:"),i(4, "0.0"),t(", "), t("decayscale:"),i(5, "1.0"), t(")"),}),
s( {trig = "DynKlank.new1", name = "DynKlank.new1", dscr = "Snippet for DynKlank.new1, auto generated by SCNvim" }, {t("DynKlank.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("specificationsArrayRef:"),i(2, "nil"),t(", "), t("input:"),i(3, "nil"),t(", "), t("freqscale:"),i(4, "1.0"),t(", "), t("freqoffset:"),i(5, "0.0"),t(", "), t("decayscale:"),i(6, "1.0"), t(")"),}),
s( {trig = "EZControlSpecEditor.new", name = "EZControlSpecEditor.new", dscr = "Snippet for EZControlSpecEditor.new, auto generated by SCNvim" }, {t("EZControlSpecEditor.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("label:"),i(3, "Mn/Mx/Wp/Stp"),t(", "), t("controlSpec:"),i(4, "nil"),t(", "), t("labelWidth:"),i(5, "100"),t(", "), t("labelHeight:"),i(6, "20"),t(", "), t("layout:"),i(7, "horz"),t(", "), t("gap:"),i(8, "nil"),t(", "), t("margin:"),i(9, "nil"), t(")"),}),
s( {trig = "EZKnob.new", name = "EZKnob.new", dscr = "Snippet for EZKnob.new, auto generated by SCNvim" }, {t("EZKnob.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("controlSpec:"),i(4, "nil"),t(", "), t("action:"),i(5, "nil"),t(", "), t("initVal:"),i(6, "nil"),t(", "), t("initAction:"),i(7, "false"),t(", "), t("labelWidth:"),i(8, "60"),t(", "), t("knobSize:"),i(9, "nil"),t(", "), t("unitWidth:"),i(10, "0"),t(", "), t("labelHeight:"),i(11, "20"),t(", "), t("layout:"),i(12, "vert"),t(", "), t("gap:"),i(13, "nil"),t(", "), t("margin:"),i(14, "nil"), t(")"),}),
s( {trig = "EZLists.new", name = "EZLists.new", dscr = "Snippet for EZLists.new, auto generated by SCNvim" }, {t("EZLists.new"),t("("),t("parentView:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("items:"),i(4, "nil"),t(", "), t("globalAction:"),i(5, "nil"),t(", "), t("initVal:"),i(6, "0"),t(", "), t("initAction:"),i(7, "false"),t(", "), t("labelWidth:"),i(8, "nil"),t(", "), t("labelHeight:"),i(9, "20"),t(", "), t("layout:"),i(10, "nil"),t(", "), t("gap:"),i(11, "nil"),t(", "), t("margin:"),i(12, "nil"), t(")"),}),
s( {trig = "EZNumber.new", name = "EZNumber.new", dscr = "Snippet for EZNumber.new, auto generated by SCNvim" }, {t("EZNumber.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("controlSpec:"),i(4, "nil"),t(", "), t("action:"),i(5, "nil"),t(", "), t("initVal:"),i(6, "nil"),t(", "), t("initAction:"),i(7, "false"),t(", "), t("labelWidth:"),i(8, "60"),t(", "), t("numberWidth:"),i(9, "nil"),t(", "), t("unitWidth:"),i(10, "0"),t(", "), t("labelHeight:"),i(11, "20"),t(", "), t("layout:"),i(12, "horz"),t(", "), t("gap:"),i(13, "nil"),t(", "), t("margin:"),i(14, "nil"), t(")"),}),
s( {trig = "EZRanger.new", name = "EZRanger.new", dscr = "Snippet for EZRanger.new, auto generated by SCNvim" }, {t("EZRanger.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("controlSpec:"),i(4, "nil"),t(", "), t("action:"),i(5, "nil"),t(", "), t("initVal:"),i(6, "nil"),t(", "), t("initAction:"),i(7, "false"),t(", "), t("labelWidth:"),i(8, "60"),t(", "), t("numberWidth:"),i(9, "45"),t(", "), t("unitWidth:"),i(10, "0"),t(", "), t("labelHeight:"),i(11, "20"),t(", "), t("layout:"),i(12, "horz"),t(", "), t("gap:"),i(13, "nil"),t(", "), t("margin:"),i(14, "nil"), t(")"),}),
s( {trig = "EZScroller.new", name = "EZScroller.new", dscr = "Snippet for EZScroller.new, auto generated by SCNvim" }, {t("EZScroller.new"),t("("),t("w:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("maxItems:"),i(3, "nil"),t(", "), t("numItems:"),i(4, "nil"),t(", "), t("action:"),i(5, "nil"),t(", "), t("initVal:"),i(6, "0"), t(")"),}),
s( {trig = "EZSlider.new", name = "EZSlider.new", dscr = "Snippet for EZSlider.new, auto generated by SCNvim" }, {t("EZSlider.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("controlSpec:"),i(4, "nil"),t(", "), t("action:"),i(5, "nil"),t(", "), t("initVal:"),i(6, "nil"),t(", "), t("initAction:"),i(7, "false"),t(", "), t("labelWidth:"),i(8, "60"),t(", "), t("numberWidth:"),i(9, "45"),t(", "), t("unitWidth:"),i(10, "0"),t(", "), t("labelHeight:"),i(11, "20"),t(", "), t("layout:"),i(12, "horz"),t(", "), t("gap:"),i(13, "nil"),t(", "), t("margin:"),i(14, "nil"), t(")"),}),
s( {trig = "EZText.new", name = "EZText.new", dscr = "Snippet for EZText.new, auto generated by SCNvim" }, {t("EZText.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("action:"),i(4, "nil"),t(", "), t("initVal:"),i(5, "nil"),t(", "), t("initAction:"),i(6, "false"),t(", "), t("labelWidth:"),i(7, "60"),t(", "), t("textWidth:"),i(8, "nil"),t(", "), t("labelHeight:"),i(9, "20"),t(", "), t("layout:"),i(10, "horz"),t(", "), t("gap:"),i(11, "nil"),t(", "), t("margin:"),i(12, "nil"), t(")"),}),
s( {trig = "EmbedOnce.new", name = "EmbedOnce.new", dscr = "Snippet for EmbedOnce.new, auto generated by SCNvim" }, {t("EmbedOnce.new"),t("("),t("stream:"),i(1, "nil"),t(", "), t("cleanup:"),i(2, "nil"), t(")"),}),
s( {trig = "Env.new", name = "Env.new", dscr = "Snippet for Env.new, auto generated by SCNvim" }, {t("Env.new"),t("("),t("levels:"),i(1, "[0"),t(", "), t("1:"),i(2, "nil"),t(", "), t("0]:"),i(3, "nil"),t(", "), t("times:"),i(4, "[1"),t(", "), t("1]:"),i(5, "nil"),t(", "), t("curve:"),i(6, "lin"),t(", "), t("releaseNode:"),i(7, "nil"),t(", "), t("loopNode:"),i(8, "nil"),t(", "), t("offset:"),i(9, "0"), t(")"),}),
s( {trig = "Env.newClear", name = "Env.newClear", dscr = "Snippet for Env.newClear, auto generated by SCNvim" }, {t("Env.newClear"),t("("),t("numSegments:"),i(1, "8"),t(", "), t("numChannels:"),i(2, "1"), t(")"),}),
s( {trig = "Env.initClass", name = "Env.initClass", dscr = "Snippet for Env.initClass, auto generated by SCNvim" }, {t("Env.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Env.triangle", name = "Env.triangle", dscr = "Snippet for Env.triangle, auto generated by SCNvim" }, {t("Env.triangle"),t("("),t("dur:"),i(1, "1.0"),t(", "), t("level:"),i(2, "1.0"), t(")"),}),
s( {trig = "Env.sine", name = "Env.sine", dscr = "Snippet for Env.sine, auto generated by SCNvim" }, {t("Env.sine"),t("("),t("dur:"),i(1, "1.0"),t(", "), t("level:"),i(2, "1.0"), t(")"),}),
s( {trig = "Env.perc", name = "Env.perc", dscr = "Snippet for Env.perc, auto generated by SCNvim" }, {t("Env.perc"),t("("),t("attackTime:"),i(1, "0.01"),t(", "), t("releaseTime:"),i(2, "1.0"),t(", "), t("level:"),i(3, "1.0"),t(", "), t("curve:"),i(4, "-4.0"), t(")"),}),
s( {trig = "Env.linen", name = "Env.linen", dscr = "Snippet for Env.linen, auto generated by SCNvim" }, {t("Env.linen"),t("("),t("attackTime:"),i(1, "0.01"),t(", "), t("sustainTime:"),i(2, "1.0"),t(", "), t("releaseTime:"),i(3, "1.0"),t(", "), t("level:"),i(4, "1.0"),t(", "), t("curve:"),i(5, "lin"), t(")"),}),
s( {trig = "Env.xyc", name = "Env.xyc", dscr = "Snippet for Env.xyc, auto generated by SCNvim" }, {t("Env.xyc"),t("("),t("xyc:"),i(1, "nil"), t(")"),}),
s( {trig = "Env.pairs", name = "Env.pairs", dscr = "Snippet for Env.pairs, auto generated by SCNvim" }, {t("Env.pairs"),t("("),t("pairs:"),i(1, "nil"),t(", "), t("curve:"),i(2, "nil"), t(")"),}),
s( {trig = "Env.step", name = "Env.step", dscr = "Snippet for Env.step, auto generated by SCNvim" }, {t("Env.step"),t("("),t("levels:"),i(1, "[0"),t(", "), t("1]:"),i(2, "nil"),t(", "), t("times:"),i(3, "[1"),t(", "), t("1]:"),i(4, "nil"),t(", "), t("releaseNode:"),i(5, "nil"),t(", "), t("loopNode:"),i(6, "nil"),t(", "), t("offset:"),i(7, "0"), t(")"),}),
s( {trig = "Env.cutoff", name = "Env.cutoff", dscr = "Snippet for Env.cutoff, auto generated by SCNvim" }, {t("Env.cutoff"),t("("),t("releaseTime:"),i(1, "0.1"),t(", "), t("level:"),i(2, "1.0"),t(", "), t("curve:"),i(3, "lin"), t(")"),}),
s( {trig = "Env.dadsr", name = "Env.dadsr", dscr = "Snippet for Env.dadsr, auto generated by SCNvim" }, {t("Env.dadsr"),t("("),t("delayTime:"),i(1, "0.1"),t(", "), t("attackTime:"),i(2, "0.01"),t(", "), t("decayTime:"),i(3, "0.3"),t(", "), t("sustainLevel:"),i(4, "0.5"),t(", "), t("releaseTime:"),i(5, "1.0"),t(", "), t("peakLevel:"),i(6, "1.0"),t(", "), t("curve:"),i(7, "-4.0"),t(", "), t("bias:"),i(8, "0.0"), t(")"),}),
s( {trig = "Env.adsr", name = "Env.adsr", dscr = "Snippet for Env.adsr, auto generated by SCNvim" }, {t("Env.adsr"),t("("),t("attackTime:"),i(1, "0.01"),t(", "), t("decayTime:"),i(2, "0.3"),t(", "), t("sustainLevel:"),i(3, "0.5"),t(", "), t("releaseTime:"),i(4, "1.0"),t(", "), t("peakLevel:"),i(5, "1.0"),t(", "), t("curve:"),i(6, "-4.0"),t(", "), t("bias:"),i(7, "0.0"), t(")"),}),
s( {trig = "Env.asr", name = "Env.asr", dscr = "Snippet for Env.asr, auto generated by SCNvim" }, {t("Env.asr"),t("("),t("attackTime:"),i(1, "0.01"),t(", "), t("sustainLevel:"),i(2, "1.0"),t(", "), t("releaseTime:"),i(3, "1.0"),t(", "), t("curve:"),i(4, "-4.0"), t(")"),}),
s( {trig = "Env.circle", name = "Env.circle", dscr = "Snippet for Env.circle, auto generated by SCNvim" }, {t("Env.circle"),t("("),t("levels:"),i(1, "nil"),t(", "), t("times:"),i(2, "nil"),t(", "), t("curve:"),i(3, "lin"), t(")"),}),
s( {trig = "Env.shapeNumber", name = "Env.shapeNumber", dscr = "Snippet for Env.shapeNumber, auto generated by SCNvim" }, {t("Env.shapeNumber"),t("("),t("shapeName:"),i(1, "nil"), t(")"),}),
s( {trig = "EnvDetect.ar", name = "EnvDetect.ar", dscr = "Snippet for EnvDetect.ar, auto generated by SCNvim" }, {t("EnvDetect.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("attack:"),i(2, "100"),t(", "), t("release:"),i(3, "0"), t(")"),}),
s( {trig = "EnvFollow.ar", name = "EnvFollow.ar", dscr = "Snippet for EnvFollow.ar, auto generated by SCNvim" }, {t("EnvFollow.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("decaycoeff:"),i(2, "0.99"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "EnvFollow.kr", name = "EnvFollow.kr", dscr = "Snippet for EnvFollow.kr, auto generated by SCNvim" }, {t("EnvFollow.kr"),t("("),t("input:"),i(1, "nil"),t(", "), t("decaycoeff:"),i(2, "0.99"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "EnvGate.new", name = "EnvGate.new", dscr = "Snippet for EnvGate.new, auto generated by SCNvim" }, {t("EnvGate.new"),t("("),t("i_level:"),i(1, "1"),t(", "), t("gate:"),i(2, "nil"),t(", "), t("fadeTime:"),i(3, "nil"),t(", "), t("doneAction:"),i(4, "2"),t(", "), t("curve:"),i(5, "sin"), t(")"),}),
s( {trig = "EnvGen.ar", name = "EnvGen.ar", dscr = "Snippet for EnvGen.ar, auto generated by SCNvim" }, {t("EnvGen.ar"),t("("),t("envelope:"),i(1, "nil"),t(", "), t("gate:"),i(2, "1.0"),t(", "), t("levelScale:"),i(3, "1.0"),t(", "), t("levelBias:"),i(4, "0.0"),t(", "), t("timeScale:"),i(5, "1.0"),t(", "), t("doneAction:"),i(6, "0"), t(")"),}),
s( {trig = "EnvGen.kr", name = "EnvGen.kr", dscr = "Snippet for EnvGen.kr, auto generated by SCNvim" }, {t("EnvGen.kr"),t("("),t("envelope:"),i(1, "nil"),t(", "), t("gate:"),i(2, "1.0"),t(", "), t("levelScale:"),i(3, "1.0"),t(", "), t("levelBias:"),i(4, "0.0"),t(", "), t("timeScale:"),i(5, "1.0"),t(", "), t("doneAction:"),i(6, "0"), t(")"),}),
s( {trig = "EnvGen.convertEnv", name = "EnvGen.convertEnv", dscr = "Snippet for EnvGen.convertEnv, auto generated by SCNvim" }, {t("EnvGen.convertEnv"),t("("),t("env:"),i(1, "nil"), t(")"),}),
s( {trig = "EnvGen.new1", name = "EnvGen.new1", dscr = "Snippet for EnvGen.new1, auto generated by SCNvim" }, {t("EnvGen.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("gate:"),i(2, "nil"),t(", "), t("levelScale:"),i(3, "nil"),t(", "), t("levelBias:"),i(4, "nil"),t(", "), t("timeScale:"),i(5, "nil"),t(", "), t("doneAction:"),i(6, "nil"),t(", "), t("envArray:"),i(7, "nil"), t(")"),}),
s( {trig = "EnvelopeView.qtClass", name = "EnvelopeView.qtClass", dscr = "Snippet for EnvelopeView.qtClass, auto generated by SCNvim" }, {t("EnvelopeView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "EnvirGui.new", name = "EnvirGui.new", dscr = "Snippet for EnvirGui.new, auto generated by SCNvim" }, {t("EnvirGui.new"),t("("),t("object:"),i(1, "nil"),t(", "), t("numItems:"),i(2, "8"),t(", "), t("parent:"),i(3, "nil"),t(", "), t("bounds:"),i(4, "nil"),t(", "), t("makeSkip:"),i(5, "true"),t(", "), t("options:"),i(6, "[]"), t(")"),}),
s( {trig = "Environment.make", name = "Environment.make", dscr = "Snippet for Environment.make, auto generated by SCNvim" }, {t("Environment.make"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "Environment.use", name = "Environment.use", dscr = "Snippet for Environment.use, auto generated by SCNvim" }, {t("Environment.use"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "Environment.pop", name = "Environment.pop", dscr = "Snippet for Environment.pop, auto generated by SCNvim" }, {t("Environment.pop"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Environment.push", name = "Environment.push", dscr = "Snippet for Environment.push, auto generated by SCNvim" }, {t("Environment.push"),t("("),t("envir:"),i(1, "nil"), t(")"),}),
s( {trig = "EnvironmentRedirect.new", name = "EnvironmentRedirect.new", dscr = "Snippet for EnvironmentRedirect.new, auto generated by SCNvim" }, {t("EnvironmentRedirect.new"),t("("),t("envir:"),i(1, "nil"), t(")"),}),
s( {trig = "EnvironmentRedirect.make", name = "EnvironmentRedirect.make", dscr = "Snippet for EnvironmentRedirect.make, auto generated by SCNvim" }, {t("EnvironmentRedirect.make"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "EnvironmentRedirect.use", name = "EnvironmentRedirect.use", dscr = "Snippet for EnvironmentRedirect.use, auto generated by SCNvim" }, {t("EnvironmentRedirect.use"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "EnvironmentRedirect.newFrom", name = "EnvironmentRedirect.newFrom", dscr = "Snippet for EnvironmentRedirect.newFrom, auto generated by SCNvim" }, {t("EnvironmentRedirect.newFrom"),t("("),t("aCollection:"),i(1, "nil"), t(")"),}),
s( {trig = "EnvironmentRedirect.push", name = "EnvironmentRedirect.push", dscr = "Snippet for EnvironmentRedirect.push, auto generated by SCNvim" }, {t("EnvironmentRedirect.push"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "EnvironmentRedirect.pop", name = "EnvironmentRedirect.pop", dscr = "Snippet for EnvironmentRedirect.pop, auto generated by SCNvim" }, {t("EnvironmentRedirect.pop"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Event.new", name = "Event.new", dscr = "Snippet for Event.new, auto generated by SCNvim" }, {t("Event.new"),t("("),t("n:"),i(1, "8"),t(", "), t("proto:"),i(2, "nil"),t(", "), t("parent:"),i(3, "nil"),t(", "), t("know:"),i(4, "true"), t(")"),}),
s( {trig = "Event.default", name = "Event.default", dscr = "Snippet for Event.default, auto generated by SCNvim" }, {t("Event.default"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Event.silent", name = "Event.silent", dscr = "Snippet for Event.silent, auto generated by SCNvim" }, {t("Event.silent"),t("("),t("dur:"),i(1, "1.0"),t(", "), t("inEvent:"),i(2, "nil"), t(")"),}),
s( {trig = "Event.addEventType", name = "Event.addEventType", dscr = "Snippet for Event.addEventType, auto generated by SCNvim" }, {t("Event.addEventType"),t("("),t("type:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("parentEvent:"),i(3, "nil"), t(")"),}),
s( {trig = "Event.addParentType", name = "Event.addParentType", dscr = "Snippet for Event.addParentType, auto generated by SCNvim" }, {t("Event.addParentType"),t("("),t("type:"),i(1, "nil"),t(", "), t("parentEvent:"),i(2, "nil"), t(")"),}),
s( {trig = "Event.removeEventType", name = "Event.removeEventType", dscr = "Snippet for Event.removeEventType, auto generated by SCNvim" }, {t("Event.removeEventType"),t("("),t("type:"),i(1, "nil"), t(")"),}),
s( {trig = "Event.removeParentType", name = "Event.removeParentType", dscr = "Snippet for Event.removeParentType, auto generated by SCNvim" }, {t("Event.removeParentType"),t("("),t("type:"),i(1, "nil"), t(")"),}),
s( {trig = "Event.parentTypes", name = "Event.parentTypes", dscr = "Snippet for Event.parentTypes, auto generated by SCNvim" }, {t("Event.parentTypes"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Event.eventTypes", name = "Event.eventTypes", dscr = "Snippet for Event.eventTypes, auto generated by SCNvim" }, {t("Event.eventTypes"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Event.initClass", name = "Event.initClass", dscr = "Snippet for Event.initClass, auto generated by SCNvim" }, {t("Event.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Event.makeDefaultSynthDef", name = "Event.makeDefaultSynthDef", dscr = "Snippet for Event.makeDefaultSynthDef, auto generated by SCNvim" }, {t("Event.makeDefaultSynthDef"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Event.makeParentEvents", name = "Event.makeParentEvents", dscr = "Snippet for Event.makeParentEvents, auto generated by SCNvim" }, {t("Event.makeParentEvents"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Event.checkIDs", name = "Event.checkIDs", dscr = "Snippet for Event.checkIDs, auto generated by SCNvim" }, {t("Event.checkIDs"),t("("),t("id:"),i(1, "nil"),t(", "), t("server:"),i(2, "nil"), t(")"),}),
s( {trig = "EventPatternProxy.defaultValue", name = "EventPatternProxy.defaultValue", dscr = "Snippet for EventPatternProxy.defaultValue, auto generated by SCNvim" }, {t("EventPatternProxy.defaultValue"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "EventPatternProxy.parallelise", name = "EventPatternProxy.parallelise", dscr = "Snippet for EventPatternProxy.parallelise, auto generated by SCNvim" }, {t("EventPatternProxy.parallelise"),t("("),t("list:"),i(1, "nil"), t(")"),}),
s( {trig = "EventStreamCleanup.new", name = "EventStreamCleanup.new", dscr = "Snippet for EventStreamCleanup.new, auto generated by SCNvim" }, {t("EventStreamCleanup.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "EventStreamPlayer.new", name = "EventStreamPlayer.new", dscr = "Snippet for EventStreamPlayer.new, auto generated by SCNvim" }, {t("EventStreamPlayer.new"),t("("),t("stream:"),i(1, "nil"),t(", "), t("event:"),i(2, "nil"), t(")"),}),
s( {trig = "EventTypesWithCleanup.initClass", name = "EventTypesWithCleanup.initClass", dscr = "Snippet for EventTypesWithCleanup.initClass, auto generated by SCNvim" }, {t("EventTypesWithCleanup.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "EventTypesWithCleanup.cleanup", name = "EventTypesWithCleanup.cleanup", dscr = "Snippet for EventTypesWithCleanup.cleanup, auto generated by SCNvim" }, {t("EventTypesWithCleanup.cleanup"),t("("),t("ev:"),i(1, "nil"),t(", "), t("flag:"),i(2, "true"), t(")"),}),
s( {trig = "Exception.new", name = "Exception.new", dscr = "Snippet for Exception.new, auto generated by SCNvim" }, {t("Exception.new"),t("("),t("what:"),i(1, "nil"), t(")"),}),
s( {trig = "ExpRand.new", name = "ExpRand.new", dscr = "Snippet for ExpRand.new, auto generated by SCNvim" }, {t("ExpRand.new"),t("("),t("lo:"),i(1, "0.01"),t(", "), t("hi:"),i(2, "1.0"), t(")"),}),
s( {trig = "FBSineN.ar", name = "FBSineN.ar", dscr = "Snippet for FBSineN.ar, auto generated by SCNvim" }, {t("FBSineN.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("im:"),i(2, "1"),t(", "), t("fb:"),i(3, "0.1"),t(", "), t("a:"),i(4, "1.1"),t(", "), t("c:"),i(5, "0.5"),t(", "), t("xi:"),i(6, "0.1"),t(", "), t("yi:"),i(7, "0.1"),t(", "), t("mul:"),i(8, "1"),t(", "), t("add:"),i(9, "0"), t(")"),}),
s( {trig = "FFT.new", name = "FFT.new", dscr = "Snippet for FFT.new, auto generated by SCNvim" }, {t("FFT.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("in:"),i(2, "0.0"),t(", "), t("hop:"),i(3, "0.5"),t(", "), t("wintype:"),i(4, "0"),t(", "), t("active:"),i(5, "1"),t(", "), t("winsize:"),i(6, "0"), t(")"),}),
s( {trig = "FFTCentroid.kr", name = "FFTCentroid.kr", dscr = "Snippet for FFTCentroid.kr, auto generated by SCNvim" }, {t("FFTCentroid.kr"),t("("),t("buffer:"),i(1, "nil"), t(")"),}),
s( {trig = "FFTComplexDev.kr", name = "FFTComplexDev.kr", dscr = "Snippet for FFTComplexDev.kr, auto generated by SCNvim" }, {t("FFTComplexDev.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("rectify:"),i(2, "0"),t(", "), t("powthresh:"),i(3, "0.1"), t(")"),}),
s( {trig = "FFTComplexDev.categories", name = "FFTComplexDev.categories", dscr = "Snippet for FFTComplexDev.categories, auto generated by SCNvim" }, {t("FFTComplexDev.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTCrest.kr", name = "FFTCrest.kr", dscr = "Snippet for FFTCrest.kr, auto generated by SCNvim" }, {t("FFTCrest.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("freqlo:"),i(2, "0"),t(", "), t("freqhi:"),i(3, "50000"), t(")"),}),
s( {trig = "FFTCrest.categories", name = "FFTCrest.categories", dscr = "Snippet for FFTCrest.categories, auto generated by SCNvim" }, {t("FFTCrest.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTDiffMags.kr", name = "FFTDiffMags.kr", dscr = "Snippet for FFTDiffMags.kr, auto generated by SCNvim" }, {t("FFTDiffMags.kr"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"), t(")"),}),
s( {trig = "FFTDiffMags.categories", name = "FFTDiffMags.categories", dscr = "Snippet for FFTDiffMags.categories, auto generated by SCNvim" }, {t("FFTDiffMags.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTFlux.kr", name = "FFTFlux.kr", dscr = "Snippet for FFTFlux.kr, auto generated by SCNvim" }, {t("FFTFlux.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("normalise:"),i(2, "1"), t(")"),}),
s( {trig = "FFTFlux.categories", name = "FFTFlux.categories", dscr = "Snippet for FFTFlux.categories, auto generated by SCNvim" }, {t("FFTFlux.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTFluxPos.kr", name = "FFTFluxPos.kr", dscr = "Snippet for FFTFluxPos.kr, auto generated by SCNvim" }, {t("FFTFluxPos.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("normalise:"),i(2, "1"), t(")"),}),
s( {trig = "FFTFluxPos.categories", name = "FFTFluxPos.categories", dscr = "Snippet for FFTFluxPos.categories, auto generated by SCNvim" }, {t("FFTFluxPos.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTMKL.kr", name = "FFTMKL.kr", dscr = "Snippet for FFTMKL.kr, auto generated by SCNvim" }, {t("FFTMKL.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("epsilon:"),i(2, "1e-06"), t(")"),}),
s( {trig = "FFTMKL.categories", name = "FFTMKL.categories", dscr = "Snippet for FFTMKL.categories, auto generated by SCNvim" }, {t("FFTMKL.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTPeak.kr", name = "FFTPeak.kr", dscr = "Snippet for FFTPeak.kr, auto generated by SCNvim" }, {t("FFTPeak.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("freqlo:"),i(2, "0"),t(", "), t("freqhi:"),i(3, "50000"), t(")"),}),
s( {trig = "FFTPeak.categories", name = "FFTPeak.categories", dscr = "Snippet for FFTPeak.categories, auto generated by SCNvim" }, {t("FFTPeak.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTPhaseDev.kr", name = "FFTPhaseDev.kr", dscr = "Snippet for FFTPhaseDev.kr, auto generated by SCNvim" }, {t("FFTPhaseDev.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("weight:"),i(2, "0"),t(", "), t("powthresh:"),i(3, "0.1"), t(")"),}),
s( {trig = "FFTPhaseDev.categories", name = "FFTPhaseDev.categories", dscr = "Snippet for FFTPhaseDev.categories, auto generated by SCNvim" }, {t("FFTPhaseDev.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTPower.kr", name = "FFTPower.kr", dscr = "Snippet for FFTPower.kr, auto generated by SCNvim" }, {t("FFTPower.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("square:"),i(2, "true"), t(")"),}),
s( {trig = "FFTPower.categories", name = "FFTPower.categories", dscr = "Snippet for FFTPower.categories, auto generated by SCNvim" }, {t("FFTPower.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTSlope.kr", name = "FFTSlope.kr", dscr = "Snippet for FFTSlope.kr, auto generated by SCNvim" }, {t("FFTSlope.kr"),t("("),t("buffer:"),i(1, "nil"), t(")"),}),
s( {trig = "FFTSlope.categories", name = "FFTSlope.categories", dscr = "Snippet for FFTSlope.categories, auto generated by SCNvim" }, {t("FFTSlope.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTSpread.kr", name = "FFTSpread.kr", dscr = "Snippet for FFTSpread.kr, auto generated by SCNvim" }, {t("FFTSpread.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("centroid:"),i(2, "nil"), t(")"),}),
s( {trig = "FFTSpread.categories", name = "FFTSpread.categories", dscr = "Snippet for FFTSpread.categories, auto generated by SCNvim" }, {t("FFTSpread.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTSubbandFlatness.kr", name = "FFTSubbandFlatness.kr", dscr = "Snippet for FFTSubbandFlatness.kr, auto generated by SCNvim" }, {t("FFTSubbandFlatness.kr"),t("("),t("chain:"),i(1, "nil"),t(", "), t("cutfreqs:"),i(2, "nil"), t(")"),}),
s( {trig = "FFTSubbandFlatness.categories", name = "FFTSubbandFlatness.categories", dscr = "Snippet for FFTSubbandFlatness.categories, auto generated by SCNvim" }, {t("FFTSubbandFlatness.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTSubbandFlux.kr", name = "FFTSubbandFlux.kr", dscr = "Snippet for FFTSubbandFlux.kr, auto generated by SCNvim" }, {t("FFTSubbandFlux.kr"),t("("),t("chain:"),i(1, "nil"),t(", "), t("cutfreqs:"),i(2, "nil"),t(", "), t("posonly:"),i(3, "0"), t(")"),}),
s( {trig = "FFTSubbandFlux.categories", name = "FFTSubbandFlux.categories", dscr = "Snippet for FFTSubbandFlux.categories, auto generated by SCNvim" }, {t("FFTSubbandFlux.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTSubbandPower.kr", name = "FFTSubbandPower.kr", dscr = "Snippet for FFTSubbandPower.kr, auto generated by SCNvim" }, {t("FFTSubbandPower.kr"),t("("),t("chain:"),i(1, "nil"),t(", "), t("cutfreqs:"),i(2, "nil"),t(", "), t("square:"),i(3, "1"),t(", "), t("scalemode:"),i(4, "1"), t(")"),}),
s( {trig = "FFTSubbandPower.categories", name = "FFTSubbandPower.categories", dscr = "Snippet for FFTSubbandPower.categories, auto generated by SCNvim" }, {t("FFTSubbandPower.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FFTTrigger.new", name = "FFTTrigger.new", dscr = "Snippet for FFTTrigger.new, auto generated by SCNvim" }, {t("FFTTrigger.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("hop:"),i(2, "0.5"),t(", "), t("polar:"),i(3, "0.0"), t(")"),}),
s( {trig = "FM7.numOperators", name = "FM7.numOperators", dscr = "Snippet for FM7.numOperators, auto generated by SCNvim" }, {t("FM7.numOperators"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FM7.numControls", name = "FM7.numControls", dscr = "Snippet for FM7.numControls, auto generated by SCNvim" }, {t("FM7.numControls"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FM7.controlArraySize", name = "FM7.controlArraySize", dscr = "Snippet for FM7.controlArraySize, auto generated by SCNvim" }, {t("FM7.controlArraySize"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FM7.modArraySize", name = "FM7.modArraySize", dscr = "Snippet for FM7.modArraySize, auto generated by SCNvim" }, {t("FM7.modArraySize"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FM7.numRequiredInputs", name = "FM7.numRequiredInputs", dscr = "Snippet for FM7.numRequiredInputs, auto generated by SCNvim" }, {t("FM7.numRequiredInputs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FM7.controlMatrix", name = "FM7.controlMatrix", dscr = "Snippet for FM7.controlMatrix, auto generated by SCNvim" }, {t("FM7.controlMatrix"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "FM7.modMatrix", name = "FM7.modMatrix", dscr = "Snippet for FM7.modMatrix, auto generated by SCNvim" }, {t("FM7.modMatrix"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "FM7.algoSpec", name = "FM7.algoSpec", dscr = "Snippet for FM7.algoSpec, auto generated by SCNvim" }, {t("FM7.algoSpec"),t("("),t("algo:"),i(1, "nil"),t(", "), t("feedback:"),i(2, "0.0"), t(")"),}),
s( {trig = "FM7.ar", name = "FM7.ar", dscr = "Snippet for FM7.ar, auto generated by SCNvim" }, {t("FM7.ar"),t("("),t("ctlMatrix:"),i(1, "nil"),t(", "), t("modMatrix:"),i(2, "nil"), t(")"),}),
s( {trig = "FM7.arAlgo", name = "FM7.arAlgo", dscr = "Snippet for FM7.arAlgo, auto generated by SCNvim" }, {t("FM7.arAlgo"),t("("),t("algo:"),i(1, "0"),t(", "), t("ctlMatrix:"),i(2, "nil"),t(", "), t("feedback:"),i(3, "0.0"), t(")"),}),
s( {trig = "FMGrain.ar", name = "FMGrain.ar", dscr = "Snippet for FMGrain.ar, auto generated by SCNvim" }, {t("FMGrain.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("carfreq:"),i(3, "440"),t(", "), t("modfreq:"),i(4, "200"),t(", "), t("index:"),i(5, "1"),t(", "), t("mul:"),i(6, "1"),t(", "), t("add:"),i(7, "0"), t(")"),}),
s( {trig = "FMGrainB.ar", name = "FMGrainB.ar", dscr = "Snippet for FMGrainB.ar, auto generated by SCNvim" }, {t("FMGrainB.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("carfreq:"),i(3, "440"),t(", "), t("modfreq:"),i(4, "200"),t(", "), t("index:"),i(5, "1"),t(", "), t("envbuf:"),i(6, "nil"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0"), t(")"),}),
s( {trig = "FMGrainBBF.ar", name = "FMGrainBBF.ar", dscr = "Snippet for FMGrainBBF.ar, auto generated by SCNvim" }, {t("FMGrainBBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("carfreq:"),i(3, "440"),t(", "), t("modfreq:"),i(4, "200"),t(", "), t("index:"),i(5, "1"),t(", "), t("envbuf:"),i(6, "nil"),t(", "), t("azimuth:"),i(7, "0"),t(", "), t("elevation:"),i(8, "0"),t(", "), t("rho:"),i(9, "1"),t(", "), t("wComp:"),i(10, "0"),t(", "), t("mul:"),i(11, "1"),t(", "), t("add:"),i(12, "0"), t(")"),}),
s( {trig = "FMGrainBF.ar", name = "FMGrainBF.ar", dscr = "Snippet for FMGrainBF.ar, auto generated by SCNvim" }, {t("FMGrainBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("carfreq:"),i(3, "440"),t(", "), t("modfreq:"),i(4, "200"),t(", "), t("index:"),i(5, "1"),t(", "), t("azimuth:"),i(6, "0"),t(", "), t("elevation:"),i(7, "0"),t(", "), t("rho:"),i(8, "1"),t(", "), t("wComp:"),i(9, "0"),t(", "), t("mul:"),i(10, "1"),t(", "), t("add:"),i(11, "0"), t(")"),}),
s( {trig = "FMGrainI.ar", name = "FMGrainI.ar", dscr = "Snippet for FMGrainI.ar, auto generated by SCNvim" }, {t("FMGrainI.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("carfreq:"),i(3, "440"),t(", "), t("modfreq:"),i(4, "200"),t(", "), t("index:"),i(5, "1"),t(", "), t("envbuf1:"),i(6, "nil"),t(", "), t("envbuf2:"),i(7, "nil"),t(", "), t("ifac:"),i(8, "0.5"),t(", "), t("mul:"),i(9, "1"),t(", "), t("add:"),i(10, "0"), t(")"),}),
s( {trig = "FMGrainIBF.ar", name = "FMGrainIBF.ar", dscr = "Snippet for FMGrainIBF.ar, auto generated by SCNvim" }, {t("FMGrainIBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("carfreq:"),i(3, "440"),t(", "), t("modfreq:"),i(4, "200"),t(", "), t("index:"),i(5, "1"),t(", "), t("envbuf1:"),i(6, "nil"),t(", "), t("envbuf2:"),i(7, "nil"),t(", "), t("ifac:"),i(8, "0.5"),t(", "), t("azimuth:"),i(9, "0"),t(", "), t("elevation:"),i(10, "0"),t(", "), t("rho:"),i(11, "1"),t(", "), t("wComp:"),i(12, "0"),t(", "), t("mul:"),i(13, "1"),t(", "), t("add:"),i(14, "0"), t(")"),}),
s( {trig = "FMHDecode1.ar", name = "FMHDecode1.ar", dscr = "Snippet for FMHDecode1.ar, auto generated by SCNvim" }, {t("FMHDecode1.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("r:"),i(5, "nil"),t(", "), t("s:"),i(6, "nil"),t(", "), t("t:"),i(7, "nil"),t(", "), t("u:"),i(8, "nil"),t(", "), t("v:"),i(9, "nil"),t(", "), t("azimuth:"),i(10, "0"),t(", "), t("elevation:"),i(11, "0"),t(", "), t("mul:"),i(12, "1"),t(", "), t("add:"),i(13, "0"), t(")"),}),
s( {trig = "FMHDecode1.ar1", name = "FMHDecode1.ar1", dscr = "Snippet for FMHDecode1.ar1, auto generated by SCNvim" }, {t("FMHDecode1.ar1"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("r:"),i(5, "nil"),t(", "), t("s:"),i(6, "nil"),t(", "), t("t:"),i(7, "nil"),t(", "), t("u:"),i(8, "nil"),t(", "), t("v:"),i(9, "nil"),t(", "), t("azimuth:"),i(10, "0"),t(", "), t("elevation:"),i(11, "0"),t(", "), t("maxDist:"),i(12, "10"),t(", "), t("distance:"),i(13, "10"),t(", "), t("mul:"),i(14, "1"),t(", "), t("add:"),i(15, "0"),t(", "), t("scaleflag:"),i(16, "1"), t(")"),}),
s( {trig = "FMHDecode1.stereo", name = "FMHDecode1.stereo", dscr = "Snippet for FMHDecode1.stereo, auto generated by SCNvim" }, {t("FMHDecode1.stereo"),t("("),t("w:"),i(1, "nil"),t(", "), t("y:"),i(2, "nil"),t(", "), t("mul:"),i(3, "1"),t(", "), t("add:"),i(4, "0"), t(")"),}),
s( {trig = "FMHDecode1.square", name = "FMHDecode1.square", dscr = "Snippet for FMHDecode1.square, auto generated by SCNvim" }, {t("FMHDecode1.square"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("v:"),i(4, "nil"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "FMHDecode1.quad", name = "FMHDecode1.quad", dscr = "Snippet for FMHDecode1.quad, auto generated by SCNvim" }, {t("FMHDecode1.quad"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("v:"),i(4, "nil"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "FMHDecode1.pentagon", name = "FMHDecode1.pentagon", dscr = "Snippet for FMHDecode1.pentagon, auto generated by SCNvim" }, {t("FMHDecode1.pentagon"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("u:"),i(4, "nil"),t(", "), t("v:"),i(5, "nil"),t(", "), t("mul:"),i(6, "1"),t(", "), t("add:"),i(7, "0"), t(")"),}),
s( {trig = "FMHDecode1.hexagon", name = "FMHDecode1.hexagon", dscr = "Snippet for FMHDecode1.hexagon, auto generated by SCNvim" }, {t("FMHDecode1.hexagon"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("u:"),i(4, "nil"),t(", "), t("v:"),i(5, "nil"),t(", "), t("mul:"),i(6, "1"),t(", "), t("add:"),i(7, "0"), t(")"),}),
s( {trig = "FMHDecode1.octagon1", name = "FMHDecode1.octagon1", dscr = "Snippet for FMHDecode1.octagon1, auto generated by SCNvim" }, {t("FMHDecode1.octagon1"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("u:"),i(4, "nil"),t(", "), t("v:"),i(5, "nil"),t(", "), t("mul:"),i(6, "1"),t(", "), t("add:"),i(7, "0"), t(")"),}),
s( {trig = "FMHDecode1.octagon2", name = "FMHDecode1.octagon2", dscr = "Snippet for FMHDecode1.octagon2, auto generated by SCNvim" }, {t("FMHDecode1.octagon2"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("u:"),i(4, "nil"),t(", "), t("v:"),i(5, "nil"),t(", "), t("mul:"),i(6, "1"),t(", "), t("add:"),i(7, "0"), t(")"),}),
s( {trig = "FMHDecode1.cube", name = "FMHDecode1.cube", dscr = "Snippet for FMHDecode1.cube, auto generated by SCNvim" }, {t("FMHDecode1.cube"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("s:"),i(5, "nil"),t(", "), t("t:"),i(6, "nil"),t(", "), t("v:"),i(7, "nil"),t(", "), t("mul:"),i(8, "1"),t(", "), t("add:"),i(9, "0"), t(")"),}),
s( {trig = "FMHDecode1.doubleHex", name = "FMHDecode1.doubleHex", dscr = "Snippet for FMHDecode1.doubleHex, auto generated by SCNvim" }, {t("FMHDecode1.doubleHex"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("s:"),i(5, "nil"),t(", "), t("t:"),i(6, "nil"),t(", "), t("u:"),i(7, "nil"),t(", "), t("v:"),i(8, "nil"),t(", "), t("mul:"),i(9, "1"),t(", "), t("add:"),i(10, "0"), t(")"),}),
s( {trig = "FMHDecode1.dodecahedron", name = "FMHDecode1.dodecahedron", dscr = "Snippet for FMHDecode1.dodecahedron, auto generated by SCNvim" }, {t("FMHDecode1.dodecahedron"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("r:"),i(5, "nil"),t(", "), t("s:"),i(6, "nil"),t(", "), t("t:"),i(7, "nil"),t(", "), t("u:"),i(8, "nil"),t(", "), t("v:"),i(9, "nil"),t(", "), t("mul:"),i(10, "1"),t(", "), t("add:"),i(11, "0"), t(")"),}),
s( {trig = "FMHEncode0.ar", name = "FMHEncode0.ar", dscr = "Snippet for FMHEncode0.ar, auto generated by SCNvim" }, {t("FMHEncode0.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("azimuth:"),i(2, "0"),t(", "), t("elevation:"),i(3, "0"),t(", "), t("gain:"),i(4, "1"), t(")"),}),
s( {trig = "FMHEncode1.ar", name = "FMHEncode1.ar", dscr = "Snippet for FMHEncode1.ar, auto generated by SCNvim" }, {t("FMHEncode1.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("azimuth:"),i(2, "0"),t(", "), t("elevation:"),i(3, "0"),t(", "), t("rho:"),i(4, "1"),t(", "), t("gain:"),i(5, "1"),t(", "), t("wComp:"),i(6, "0"), t(")"),}),
s( {trig = "FMHEncode2.ar", name = "FMHEncode2.ar", dscr = "Snippet for FMHEncode2.ar, auto generated by SCNvim" }, {t("FMHEncode2.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("point_x:"),i(2, "0"),t(", "), t("point_y:"),i(3, "0"),t(", "), t("elevation:"),i(4, "0"),t(", "), t("gain:"),i(5, "1"),t(", "), t("wComp:"),i(6, "0"), t(")"),}),
s( {trig = "FOS.ar", name = "FOS.ar", dscr = "Snippet for FOS.ar, auto generated by SCNvim" }, {t("FOS.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("a0:"),i(2, "0.0"),t(", "), t("a1:"),i(3, "0.0"),t(", "), t("b1:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "FOS.kr", name = "FOS.kr", dscr = "Snippet for FOS.kr, auto generated by SCNvim" }, {t("FOS.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("a0:"),i(2, "0.0"),t(", "), t("a1:"),i(3, "0.0"),t(", "), t("b1:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "FSinOsc.ar", name = "FSinOsc.ar", dscr = "Snippet for FSinOsc.ar, auto generated by SCNvim" }, {t("FSinOsc.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("iphase:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "FSinOsc.kr", name = "FSinOsc.kr", dscr = "Snippet for FSinOsc.kr, auto generated by SCNvim" }, {t("FSinOsc.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("iphase:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Fdef.initClass", name = "Fdef.initClass", dscr = "Snippet for Fdef.initClass, auto generated by SCNvim" }, {t("Fdef.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Fdef.new", name = "Fdef.new", dscr = "Snippet for Fdef.new, auto generated by SCNvim" }, {t("Fdef.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("val:"),i(2, "nil"), t(")"),}),
s( {trig = "FeatureSave.kr", name = "FeatureSave.kr", dscr = "Snippet for FeatureSave.kr, auto generated by SCNvim" }, {t("FeatureSave.kr"),t("("),t("features:"),i(1, "nil"),t(", "), t("trig:"),i(2, "nil"), t(")"),}),
s( {trig = "Feedback.ar", name = "Feedback.ar", dscr = "Snippet for Feedback.ar, auto generated by SCNvim" }, {t("Feedback.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("feedbackpct:"),i(2, "1"),t(", "), t("delayTime:"),i(3, "0.1"),t(", "), t("bufnum:"),i(4, "-1"),t(", "), t("mul:"),i(5, "1"), t(")"),}),
s( {trig = "Fhn2DN.ar", name = "Fhn2DN.ar", dscr = "Snippet for Fhn2DN.ar, auto generated by SCNvim" }, {t("Fhn2DN.ar"),t("("),t("minfreq:"),i(1, "11025"),t(", "), t("maxfreq:"),i(2, "22050"),t(", "), t("urate:"),i(3, "0.1"),t(", "), t("wrate:"),i(4, "0.1"),t(", "), t("b0:"),i(5, "0.6"),t(", "), t("b1:"),i(6, "0.8"),t(", "), t("i:"),i(7, "0.0"),t(", "), t("u0:"),i(8, "0.0"),t(", "), t("w0:"),i(9, "0.0"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "Fhn2DN.kr", name = "Fhn2DN.kr", dscr = "Snippet for Fhn2DN.kr, auto generated by SCNvim" }, {t("Fhn2DN.kr"),t("("),t("minfreq:"),i(1, "40"),t(", "), t("maxfreq:"),i(2, "100"),t(", "), t("urate:"),i(3, "0.1"),t(", "), t("wrate:"),i(4, "0.1"),t(", "), t("b0:"),i(5, "0.6"),t(", "), t("b1:"),i(6, "0.8"),t(", "), t("i:"),i(7, "0.0"),t(", "), t("u0:"),i(8, "0.0"),t(", "), t("w0:"),i(9, "0.0"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "FhnTrig.ar", name = "FhnTrig.ar", dscr = "Snippet for FhnTrig.ar, auto generated by SCNvim" }, {t("FhnTrig.ar"),t("("),t("minfreq:"),i(1, "4"),t(", "), t("maxfreq:"),i(2, "10"),t(", "), t("urate:"),i(3, "0.1"),t(", "), t("wrate:"),i(4, "0.1"),t(", "), t("b0:"),i(5, "0.6"),t(", "), t("b1:"),i(6, "0.8"),t(", "), t("i:"),i(7, "0.0"),t(", "), t("u0:"),i(8, "0.0"),t(", "), t("w0:"),i(9, "0.0"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "FhnTrig.kr", name = "FhnTrig.kr", dscr = "Snippet for FhnTrig.kr, auto generated by SCNvim" }, {t("FhnTrig.kr"),t("("),t("minfreq:"),i(1, "4"),t(", "), t("maxfreq:"),i(2, "10"),t(", "), t("urate:"),i(3, "0.1"),t(", "), t("wrate:"),i(4, "0.1"),t(", "), t("b0:"),i(5, "0.6"),t(", "), t("b1:"),i(6, "0.8"),t(", "), t("i:"),i(7, "0.0"),t(", "), t("u0:"),i(8, "0.0"),t(", "), t("w0:"),i(9, "0.0"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "File.initClass", name = "File.initClass", dscr = "Snippet for File.initClass, auto generated by SCNvim" }, {t("File.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "File.new", name = "File.new", dscr = "Snippet for File.new, auto generated by SCNvim" }, {t("File.new"),t("("),t("pathName:"),i(1, "nil"),t(", "), t("mode:"),i(2, "nil"), t(")"),}),
s( {trig = "File.open", name = "File.open", dscr = "Snippet for File.open, auto generated by SCNvim" }, {t("File.open"),t("("),t("pathName:"),i(1, "nil"),t(", "), t("mode:"),i(2, "nil"), t(")"),}),
s( {trig = "File.use", name = "File.use", dscr = "Snippet for File.use, auto generated by SCNvim" }, {t("File.use"),t("("),t("pathName:"),i(1, "nil"),t(", "), t("mode:"),i(2, "nil"),t(", "), t("function:"),i(3, "nil"), t(")"),}),
s( {trig = "File.readAllString", name = "File.readAllString", dscr = "Snippet for File.readAllString, auto generated by SCNvim" }, {t("File.readAllString"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.readAllSignal", name = "File.readAllSignal", dscr = "Snippet for File.readAllSignal, auto generated by SCNvim" }, {t("File.readAllSignal"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.readAllStringHTML", name = "File.readAllStringHTML", dscr = "Snippet for File.readAllStringHTML, auto generated by SCNvim" }, {t("File.readAllStringHTML"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.readAllStringRTF", name = "File.readAllStringRTF", dscr = "Snippet for File.readAllStringRTF, auto generated by SCNvim" }, {t("File.readAllStringRTF"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.delete", name = "File.delete", dscr = "Snippet for File.delete, auto generated by SCNvim" }, {t("File.delete"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.deleteAll", name = "File.deleteAll", dscr = "Snippet for File.deleteAll, auto generated by SCNvim" }, {t("File.deleteAll"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.mtime", name = "File.mtime", dscr = "Snippet for File.mtime, auto generated by SCNvim" }, {t("File.mtime"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.exists", name = "File.exists", dscr = "Snippet for File.exists, auto generated by SCNvim" }, {t("File.exists"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.existsCaseSensitive", name = "File.existsCaseSensitive", dscr = "Snippet for File.existsCaseSensitive, auto generated by SCNvim" }, {t("File.existsCaseSensitive"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.realpath", name = "File.realpath", dscr = "Snippet for File.realpath, auto generated by SCNvim" }, {t("File.realpath"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.mkdir", name = "File.mkdir", dscr = "Snippet for File.mkdir, auto generated by SCNvim" }, {t("File.mkdir"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.copy", name = "File.copy", dscr = "Snippet for File.copy, auto generated by SCNvim" }, {t("File.copy"),t("("),t("pathNameFrom:"),i(1, "nil"),t(", "), t("pathNameTo:"),i(2, "nil"), t(")"),}),
s( {trig = "File.type", name = "File.type", dscr = "Snippet for File.type, auto generated by SCNvim" }, {t("File.type"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.prType", name = "File.prType", dscr = "Snippet for File.prType, auto generated by SCNvim" }, {t("File.prType"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.fileSize", name = "File.fileSize", dscr = "Snippet for File.fileSize, auto generated by SCNvim" }, {t("File.fileSize"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "File.getcwd", name = "File.getcwd", dscr = "Snippet for File.getcwd, auto generated by SCNvim" }, {t("File.getcwd"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "File.prGetcwd", name = "File.prGetcwd", dscr = "Snippet for File.prGetcwd, auto generated by SCNvim" }, {t("File.prGetcwd"),t("("),t("string:"),i(1, "nil"), t(")"),}),
s( {trig = "File.openDialog", name = "File.openDialog", dscr = "Snippet for File.openDialog, auto generated by SCNvim" }, {t("File.openDialog"),t("("),t("prompt:"),i(1, "nil"),t(", "), t("successFunc:"),i(2, "nil"),t(", "), t("cancelFunc:"),i(3, "nil"), t(")"),}),
s( {trig = "File.saveDialog", name = "File.saveDialog", dscr = "Snippet for File.saveDialog, auto generated by SCNvim" }, {t("File.saveDialog"),t("("),t("prompt:"),i(1, "nil"),t(", "), t("defaultName:"),i(2, "nil"),t(", "), t("successFunc:"),i(3, "nil"),t(", "), t("cancelFunc:"),i(4, "nil"), t(")"),}),
s( {trig = "File.openDialogs", name = "File.openDialogs", dscr = "Snippet for File.openDialogs, auto generated by SCNvim" }, {t("File.openDialogs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FileDialog.qtClass", name = "FileDialog.qtClass", dscr = "Snippet for FileDialog.qtClass, auto generated by SCNvim" }, {t("FileDialog.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FileDialog.new", name = "FileDialog.new", dscr = "Snippet for FileDialog.new, auto generated by SCNvim" }, {t("FileDialog.new"),t("("),t("okFunc:"),i(1, "nil"),t(", "), t("cancelFunc:"),i(2, "nil"),t(", "), t("fileMode:"),i(3, "1"),t(", "), t("acceptMode:"),i(4, "0"),t(", "), t("stripResult:"),i(5, "false"),t(", "), t("path:"),i(6, "nil"), t(")"),}),
s( {trig = "FileReader.new", name = "FileReader.new", dscr = "Snippet for FileReader.new, auto generated by SCNvim" }, {t("FileReader.new"),t("("),t("pathOrFile:"),i(1, "nil"),t(", "), t("skipEmptyLines:"),i(2, "false"),t(", "), t("skipBlanks:"),i(3, "false"),t(", "), t("delimiter:"),i(4, "nil"), t(")"),}),
s( {trig = "FileReader.read", name = "FileReader.read", dscr = "Snippet for FileReader.read, auto generated by SCNvim" }, {t("FileReader.read"),t("("),t("path:"),i(1, "nil"),t(", "), t("skipEmptyLines:"),i(2, "false"),t(", "), t("skipBlanks:"),i(3, "false"),t(", "), t("func:"),i(4, "nil"),t(", "), t("delimiter:"),i(5, "nil"),t(", "), t("startRow:"),i(6, "0"),t(", "), t("skipSize:"),i(7, "0"), t(")"),}),
s( {trig = "FileReader.readInterpret", name = "FileReader.readInterpret", dscr = "Snippet for FileReader.readInterpret, auto generated by SCNvim" }, {t("FileReader.readInterpret"),t("("),t("path:"),i(1, "nil"),t(", "), t("skipEmptyLines:"),i(2, "false"),t(", "), t("skipBlanks:"),i(3, "false"),t(", "), t("delimiter:"),i(4, "nil"),t(", "), t("startRow:"),i(5, "0"),t(", "), t("skipSize:"),i(6, "0"), t(")"),}),
s( {trig = "Filter.scopeResponse", name = "Filter.scopeResponse", dscr = "Snippet for Filter.scopeResponse, auto generated by SCNvim" }, {t("Filter.scopeResponse"),t("("),t("server:"),i(1, "nil"),t(", "), t("freqMode:"),i(2, "1"),t(", "), t("label:"),i(3, "nil"),t(", "), t("args:"),i(4, "nil"), t(")"),}),
s( {trig = "FilterPattern.new", name = "FilterPattern.new", dscr = "Snippet for FilterPattern.new, auto generated by SCNvim" }, {t("FilterPattern.new"),t("("),t("pattern:"),i(1, "nil"), t(")"),}),
s( {trig = "FincoSprottL.ar", name = "FincoSprottL.ar", dscr = "Snippet for FincoSprottL.ar, auto generated by SCNvim" }, {t("FincoSprottL.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a:"),i(2, "2.45"),t(", "), t("h:"),i(3, "0.05"),t(", "), t("xi:"),i(4, "0"),t(", "), t("yi:"),i(5, "0"),t(", "), t("zi:"),i(6, "0"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "FincoSprottL.categories", name = "FincoSprottL.categories", dscr = "Snippet for FincoSprottL.categories, auto generated by SCNvim" }, {t("FincoSprottL.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FincoSprottM.ar", name = "FincoSprottM.ar", dscr = "Snippet for FincoSprottM.ar, auto generated by SCNvim" }, {t("FincoSprottM.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a:"),i(2, "-7"),t(", "), t("b:"),i(3, "4"),t(", "), t("h:"),i(4, "0.05"),t(", "), t("xi:"),i(5, "0"),t(", "), t("yi:"),i(6, "0"),t(", "), t("zi:"),i(7, "0"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "FincoSprottM.categories", name = "FincoSprottM.categories", dscr = "Snippet for FincoSprottM.categories, auto generated by SCNvim" }, {t("FincoSprottM.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FincoSprottS.ar", name = "FincoSprottS.ar", dscr = "Snippet for FincoSprottS.ar, auto generated by SCNvim" }, {t("FincoSprottS.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a:"),i(2, "8"),t(", "), t("b:"),i(3, "2"),t(", "), t("h:"),i(4, "0.05"),t(", "), t("xi:"),i(5, "0"),t(", "), t("yi:"),i(6, "0"),t(", "), t("zi:"),i(7, "0"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "FincoSprottS.categories", name = "FincoSprottS.categories", dscr = "Snippet for FincoSprottS.categories, auto generated by SCNvim" }, {t("FincoSprottS.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FitzHughNagumo.ar", name = "FitzHughNagumo.ar", dscr = "Snippet for FitzHughNagumo.ar, auto generated by SCNvim" }, {t("FitzHughNagumo.ar"),t("("),t("reset:"),i(1, "0"),t(", "), t("rateu:"),i(2, "0.01"),t(", "), t("ratew:"),i(3, "0.01"),t(", "), t("b0:"),i(4, "1"),t(", "), t("b1:"),i(5, "1"),t(", "), t("initu:"),i(6, "0"),t(", "), t("initw:"),i(7, "0"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "Float.from32Bits", name = "Float.from32Bits", dscr = "Snippet for Float.from32Bits, auto generated by SCNvim" }, {t("Float.from32Bits"),t("("),t("word:"),i(1, "nil"), t(")"),}),
s( {trig = "Float.from64Bits", name = "Float.from64Bits", dscr = "Snippet for Float.from64Bits, auto generated by SCNvim" }, {t("Float.from64Bits"),t("("),t("hiWord:"),i(1, "nil"),t(", "), t("loWord:"),i(2, "nil"), t(")"),}),
s( {trig = "FlowLayout.new", name = "FlowLayout.new", dscr = "Snippet for FlowLayout.new, auto generated by SCNvim" }, {t("FlowLayout.new"),t("("),t("bounds:"),i(1, "nil"),t(", "), t("margin:"),i(2, "nil"),t(", "), t("gap:"),i(3, "nil"), t(")"),}),
s( {trig = "FlowVar.new", name = "FlowVar.new", dscr = "Snippet for FlowVar.new, auto generated by SCNvim" }, {t("FlowVar.new"),t("("),t("inVal:"),i(1, "unbound"), t(")"),}),
s( {trig = "FlowView.layout", name = "FlowView.layout", dscr = "Snippet for FlowView.layout, auto generated by SCNvim" }, {t("FlowView.layout"),t("("),t("f:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "FlowView.viewClass", name = "FlowView.viewClass", dscr = "Snippet for FlowView.viewClass, auto generated by SCNvim" }, {t("FlowView.viewClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FlowView.new", name = "FlowView.new", dscr = "Snippet for FlowView.new, auto generated by SCNvim" }, {t("FlowView.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("margin:"),i(3, "nil"),t(", "), t("gap:"),i(4, "nil"),t(", "), t("windowTitle:"),i(5, ""), t(")"),}),
s( {trig = "FlowViewLayout.new", name = "FlowViewLayout.new", dscr = "Snippet for FlowViewLayout.new, auto generated by SCNvim" }, {t("FlowViewLayout.new"),t("("),t("bounds:"),i(1, "nil"),t(", "), t("margin:"),i(2, "nil"),t(", "), t("gap:"),i(3, "nil"), t(")"),}),
s( {trig = "Font.initClass", name = "Font.initClass", dscr = "Snippet for Font.initClass, auto generated by SCNvim" }, {t("Font.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Font.new", name = "Font.new", dscr = "Snippet for Font.new, auto generated by SCNvim" }, {t("Font.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("size:"),i(2, "nil"),t(", "), t("bold:"),i(3, "false"),t(", "), t("italic:"),i(4, "false"),t(", "), t("usePointSize:"),i(5, "false"), t(")"),}),
s( {trig = "Font.availableFonts", name = "Font.availableFonts", dscr = "Snippet for Font.availableFonts, auto generated by SCNvim" }, {t("Font.availableFonts"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Font.antiAliasing_", name = "Font.antiAliasing_", dscr = "Snippet for Font.antiAliasing_, auto generated by SCNvim" }, {t("Font.antiAliasing_"),t("("),t("flag:"),i(1, "nil"), t(")"),}),
s( {trig = "Font.smoothing_", name = "Font.smoothing_", dscr = "Snippet for Font.smoothing_, auto generated by SCNvim" }, {t("Font.smoothing_"),t("("),t("flag:"),i(1, "nil"), t(")"),}),
s( {trig = "Font.default", name = "Font.default", dscr = "Snippet for Font.default, auto generated by SCNvim" }, {t("Font.default"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Font.default_", name = "Font.default_", dscr = "Snippet for Font.default_, auto generated by SCNvim" }, {t("Font.default_"),t("("),t("font:"),i(1, "nil"), t(")"),}),
s( {trig = "Font.setDefault", name = "Font.setDefault", dscr = "Snippet for Font.setDefault, auto generated by SCNvim" }, {t("Font.setDefault"),t("("),t("font:"),i(1, "nil"),t(", "), t("class:"),i(2, "nil"), t(")"),}),
s( {trig = "Font.monospace", name = "Font.monospace", dscr = "Snippet for Font.monospace, auto generated by SCNvim" }, {t("Font.monospace"),t("("),t("size:"),i(1, "nil"),t(", "), t("bold:"),i(2, "false"),t(", "), t("italic:"),i(3, "false"),t(", "), t("usePointSize:"),i(4, "false"), t(")"),}),
s( {trig = "Font.serif", name = "Font.serif", dscr = "Snippet for Font.serif, auto generated by SCNvim" }, {t("Font.serif"),t("("),t("size:"),i(1, "nil"),t(", "), t("bold:"),i(2, "false"),t(", "), t("italic:"),i(3, "false"),t(", "), t("usePointSize:"),i(4, "false"), t(")"),}),
s( {trig = "Font.sansSerif", name = "Font.sansSerif", dscr = "Snippet for Font.sansSerif, auto generated by SCNvim" }, {t("Font.sansSerif"),t("("),t("size:"),i(1, "nil"),t(", "), t("bold:"),i(2, "false"),t(", "), t("italic:"),i(3, "false"),t(", "), t("usePointSize:"),i(4, "false"), t(")"),}),
s( {trig = "Font.prSetDefault", name = "Font.prSetDefault", dscr = "Snippet for Font.prSetDefault, auto generated by SCNvim" }, {t("Font.prSetDefault"),t("("),t("font:"),i(1, "nil"),t(", "), t("className:"),i(2, "nil"), t(")"),}),
s( {trig = "Font.prDefaultFamilyForStyle", name = "Font.prDefaultFamilyForStyle", dscr = "Snippet for Font.prDefaultFamilyForStyle, auto generated by SCNvim" }, {t("Font.prDefaultFamilyForStyle"),t("("),t("style:"),i(1, "-1"), t(")"),}),
s( {trig = "Formant.ar", name = "Formant.ar", dscr = "Snippet for Formant.ar, auto generated by SCNvim" }, {t("Formant.ar"),t("("),t("fundfreq:"),i(1, "440.0"),t(", "), t("formfreq:"),i(2, "1760.0"),t(", "), t("bwfreq:"),i(3, "880.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "FormantTable.initClass", name = "FormantTable.initClass", dscr = "Snippet for FormantTable.initClass, auto generated by SCNvim" }, {t("FormantTable.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FormantTable.keys", name = "FormantTable.keys", dscr = "Snippet for FormantTable.keys, auto generated by SCNvim" }, {t("FormantTable.keys"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FormantTable.get", name = "FormantTable.get", dscr = "Snippet for FormantTable.get, auto generated by SCNvim" }, {t("FormantTable.get"),t("("),t("preset:"),i(1, "nil"), t(")"),}),
s( {trig = "FormantTable.at", name = "FormantTable.at", dscr = "Snippet for FormantTable.at, auto generated by SCNvim" }, {t("FormantTable.at"),t("("),t("preset:"),i(1, "nil"), t(")"),}),
s( {trig = "FormantTable.rand", name = "FormantTable.rand", dscr = "Snippet for FormantTable.rand, auto generated by SCNvim" }, {t("FormantTable.rand"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Formlet.ar", name = "Formlet.ar", dscr = "Snippet for Formlet.ar, auto generated by SCNvim" }, {t("Formlet.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("attacktime:"),i(3, "1.0"),t(", "), t("decaytime:"),i(4, "1.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "Formlet.kr", name = "Formlet.kr", dscr = "Snippet for Formlet.kr, auto generated by SCNvim" }, {t("Formlet.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("attacktime:"),i(3, "1.0"),t(", "), t("decaytime:"),i(4, "1.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "FrameCompare.kr", name = "FrameCompare.kr", dscr = "Snippet for FrameCompare.kr, auto generated by SCNvim" }, {t("FrameCompare.kr"),t("("),t("buffer1:"),i(1, "nil"),t(", "), t("buffer2:"),i(2, "nil"),t(", "), t("wAmount:"),i(3, "0.5"), t(")"),}),
s( {trig = "Free.kr", name = "Free.kr", dscr = "Snippet for Free.kr, auto generated by SCNvim" }, {t("Free.kr"),t("("),t("trig:"),i(1, "nil"),t(", "), t("id:"),i(2, "nil"), t(")"),}),
s( {trig = "FreeSelf.kr", name = "FreeSelf.kr", dscr = "Snippet for FreeSelf.kr, auto generated by SCNvim" }, {t("FreeSelf.kr"),t("("),t("in:"),i(1, "nil"), t(")"),}),
s( {trig = "FreeSelfWhenDone.kr", name = "FreeSelfWhenDone.kr", dscr = "Snippet for FreeSelfWhenDone.kr, auto generated by SCNvim" }, {t("FreeSelfWhenDone.kr"),t("("),t("src:"),i(1, "nil"), t(")"),}),
s( {trig = "FreeVerb.ar", name = "FreeVerb.ar", dscr = "Snippet for FreeVerb.ar, auto generated by SCNvim" }, {t("FreeVerb.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("mix:"),i(2, "0.33"),t(", "), t("room:"),i(3, "0.5"),t(", "), t("damp:"),i(4, "0.5"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "FreeVerb1.ar", name = "FreeVerb1.ar", dscr = "Snippet for FreeVerb1.ar, auto generated by SCNvim" }, {t("FreeVerb1.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("revTime:"),i(2, "3"),t(", "), t("hfDamping:"),i(3, "0.995"),t(", "), t("numTaps:"),i(4, "10"),t(", "), t("numCombs:"),i(5, "8"),t(", "), t("numAllpasses:"),i(6, "4"),t(", "), t("tapScale:"),i(7, "1"),t(", "), t("combScale:"),i(8, "1"),t(", "), t("allpassScale:"),i(9, "1"), t(")"),}),
s( {trig = "FreeVerb2.ar", name = "FreeVerb2.ar", dscr = "Snippet for FreeVerb2.ar, auto generated by SCNvim" }, {t("FreeVerb2.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("mix:"),i(3, "0.33"),t(", "), t("room:"),i(4, "0.5"),t(", "), t("damp:"),i(5, "0.5"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "FreqScope.new", name = "FreqScope.new", dscr = "Snippet for FreqScope.new, auto generated by SCNvim" }, {t("FreqScope.new"),t("("),t("width:"),i(1, "522"),t(", "), t("height:"),i(2, "300"),t(", "), t("busNum:"),i(3, "0"),t(", "), t("scopeColor:"),i(4, "nil"),t(", "), t("bgColor:"),i(5, "nil"),t(", "), t("server:"),i(6, "nil"), t(")"),}),
s( {trig = "FreqScopeView.initClass", name = "FreqScopeView.initClass", dscr = "Snippet for FreqScopeView.initClass, auto generated by SCNvim" }, {t("FreqScopeView.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FreqScopeView.new", name = "FreqScopeView.new", dscr = "Snippet for FreqScopeView.new, auto generated by SCNvim" }, {t("FreqScopeView.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("server:"),i(3, "nil"), t(")"),}),
s( {trig = "FreqScopeView.initSynthDefs", name = "FreqScopeView.initSynthDefs", dscr = "Snippet for FreqScopeView.initSynthDefs, auto generated by SCNvim" }, {t("FreqScopeView.initSynthDefs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FreqScopeView.response", name = "FreqScopeView.response", dscr = "Snippet for FreqScopeView.response, auto generated by SCNvim" }, {t("FreqScopeView.response"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("bus1:"),i(3, "nil"),t(", "), t("bus2:"),i(4, "nil"),t(", "), t("freqMode:"),i(5, "1"), t(")"),}),
s( {trig = "FreqShift.ar", name = "FreqShift.ar", dscr = "Snippet for FreqShift.ar, auto generated by SCNvim" }, {t("FreqShift.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "0.0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Friction.ar", name = "Friction.ar", dscr = "Snippet for Friction.ar, auto generated by SCNvim" }, {t("Friction.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("friction:"),i(2, "0.5"),t(", "), t("spring:"),i(3, "0.414"),t(", "), t("damp:"),i(4, "0.313"),t(", "), t("mass:"),i(5, "0.1"),t(", "), t("beltmass:"),i(6, "1"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0"), t(")"),}),
s( {trig = "Friction.kr", name = "Friction.kr", dscr = "Snippet for Friction.kr, auto generated by SCNvim" }, {t("Friction.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("friction:"),i(2, "0.5"),t(", "), t("spring:"),i(3, "0.414"),t(", "), t("damp:"),i(4, "0.313"),t(", "), t("mass:"),i(5, "0.1"),t(", "), t("beltmass:"),i(6, "1"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0"), t(")"),}),
s( {trig = "Friction.categories", name = "Friction.categories", dscr = "Snippet for Friction.categories, auto generated by SCNvim" }, {t("Friction.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FuncFilterPattern.new", name = "FuncFilterPattern.new", dscr = "Snippet for FuncFilterPattern.new, auto generated by SCNvim" }, {t("FuncFilterPattern.new"),t("("),t("func:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"), t(")"),}),
s( {trig = "FuncStream.new", name = "FuncStream.new", dscr = "Snippet for FuncStream.new, auto generated by SCNvim" }, {t("FuncStream.new"),t("("),t("nextFunc:"),i(1, "nil"),t(", "), t("resetFunc:"),i(2, "nil"), t(")"),}),
s( {trig = "FuncStreamAsRoutine.new", name = "FuncStreamAsRoutine.new", dscr = "Snippet for FuncStreamAsRoutine.new, auto generated by SCNvim" }, {t("FuncStreamAsRoutine.new"),t("("),t("nextFunc:"),i(1, "nil"),t(", "), t("resetFunc:"),i(2, "nil"), t(")"),}),
s( {trig = "Function.new", name = "Function.new", dscr = "Snippet for Function.new, auto generated by SCNvim" }, {t("Function.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "FunctionList.new", name = "FunctionList.new", dscr = "Snippet for FunctionList.new, auto generated by SCNvim" }, {t("FunctionList.new"),t("("),t("functions:"),i(1, "nil"), t(")"),}),
s( {trig = "FuzzySet.new", name = "FuzzySet.new", dscr = "Snippet for FuzzySet.new, auto generated by SCNvim" }, {t("FuzzySet.new"),t("("),t("size:"),i(1, "8"), t(")"),}),
s( {trig = "GUI.new", name = "GUI.new", dscr = "Snippet for GUI.new, auto generated by SCNvim" }, {t("GUI.new"),t("("),t("key:"),i(1, "nil"), t(")"),}),
s( {trig = "GUI.makeGUI", name = "GUI.makeGUI", dscr = "Snippet for GUI.makeGUI, auto generated by SCNvim" }, {t("GUI.makeGUI"),t("("),t("key:"),i(1, "nil"),t(", "), t("args:"),i(2, "nil"),t(", "), t("properties:"),i(3, "nil"), t(")"),}),
s( {trig = "GUI.initClass", name = "GUI.initClass", dscr = "Snippet for GUI.initClass, auto generated by SCNvim" }, {t("GUI.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "GUI.qt", name = "GUI.qt", dscr = "Snippet for GUI.qt, auto generated by SCNvim" }, {t("GUI.qt"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "GUI.fromID", name = "GUI.fromID", dscr = "Snippet for GUI.fromID, auto generated by SCNvim" }, {t("GUI.fromID"),t("("),t("id:"),i(1, "nil"), t(")"),}),
s( {trig = "GUI.current", name = "GUI.current", dscr = "Snippet for GUI.current, auto generated by SCNvim" }, {t("GUI.current"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "GUI.get", name = "GUI.get", dscr = "Snippet for GUI.get, auto generated by SCNvim" }, {t("GUI.get"),t("("),t("id:"),i(1, "nil"), t(")"),}),
s( {trig = "GUI.set", name = "GUI.set", dscr = "Snippet for GUI.set, auto generated by SCNvim" }, {t("GUI.set"),t("("),t("aScheme:"),i(1, "nil"), t(")"),}),
s( {trig = "GUI.use", name = "GUI.use", dscr = "Snippet for GUI.use, auto generated by SCNvim" }, {t("GUI.use"),t("("),t("aScheme:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "GUI.useID", name = "GUI.useID", dscr = "Snippet for GUI.useID, auto generated by SCNvim" }, {t("GUI.useID"),t("("),t("id:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "GUI.add", name = "GUI.add", dscr = "Snippet for GUI.add, auto generated by SCNvim" }, {t("GUI.add"),t("("),t("aScheme:"),i(1, "nil"), t(")"),}),
s( {trig = "GUI.doesNotUnderstand", name = "GUI.doesNotUnderstand", dscr = "Snippet for GUI.doesNotUnderstand, auto generated by SCNvim" }, {t("GUI.doesNotUnderstand"),t("("),t("selector:"),i(1, "nil"),t(", "), t("args:"),i(2, "[]"), t(")"),}),
s( {trig = "GUI.setSkin", name = "GUI.setSkin", dscr = "Snippet for GUI.setSkin, auto generated by SCNvim" }, {t("GUI.setSkin"),t("("),t("skinName:"),i(1, "nil"), t(")"),}),
s( {trig = "GVerb.ar", name = "GVerb.ar", dscr = "Snippet for GVerb.ar, auto generated by SCNvim" }, {t("GVerb.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("roomsize:"),i(2, "10"),t(", "), t("revtime:"),i(3, "3"),t(", "), t("damping:"),i(4, "0.5"),t(", "), t("inputbw:"),i(5, "0.5"),t(", "), t("spread:"),i(6, "15"),t(", "), t("drylevel:"),i(7, "1"),t(", "), t("earlyreflevel:"),i(8, "0.7"),t(", "), t("taillevel:"),i(9, "0.5"),t(", "), t("maxroomsize:"),i(10, "300"),t(", "), t("mul:"),i(11, "1"),t(", "), t("add:"),i(12, "0"), t(")"),}),
s( {trig = "Gammatone.ar", name = "Gammatone.ar", dscr = "Snippet for Gammatone.ar, auto generated by SCNvim" }, {t("Gammatone.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("centrefrequency:"),i(2, "440.0"),t(", "), t("bandwidth:"),i(3, "200.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "GaussClass.kr", name = "GaussClass.kr", dscr = "Snippet for GaussClass.kr, auto generated by SCNvim" }, {t("GaussClass.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("gate:"),i(3, "0"), t(")"),}),
s( {trig = "GaussClass.categories", name = "GaussClass.categories", dscr = "Snippet for GaussClass.categories, auto generated by SCNvim" }, {t("GaussClass.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "GaussClass.classesToFloatArray", name = "GaussClass.classesToFloatArray", dscr = "Snippet for GaussClass.classesToFloatArray, auto generated by SCNvim" }, {t("GaussClass.classesToFloatArray"),t("("),t("arr:"),i(1, "nil"), t(")"),}),
s( {trig = "GaussTrig.ar", name = "GaussTrig.ar", dscr = "Snippet for GaussTrig.ar, auto generated by SCNvim" }, {t("GaussTrig.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("dev:"),i(2, "0.3"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "GaussTrig.kr", name = "GaussTrig.kr", dscr = "Snippet for GaussTrig.kr, auto generated by SCNvim" }, {t("GaussTrig.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("dev:"),i(2, "0.3"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Gbman2DN.ar", name = "Gbman2DN.ar", dscr = "Snippet for Gbman2DN.ar, auto generated by SCNvim" }, {t("Gbman2DN.ar"),t("("),t("minfreq:"),i(1, "11025"),t(", "), t("maxfreq:"),i(2, "22050"),t(", "), t("x0:"),i(3, "1.2"),t(", "), t("y0:"),i(4, "2.1"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "Gbman2DN.kr", name = "Gbman2DN.kr", dscr = "Snippet for Gbman2DN.kr, auto generated by SCNvim" }, {t("Gbman2DN.kr"),t("("),t("minfreq:"),i(1, "40"),t(", "), t("maxfreq:"),i(2, "100"),t(", "), t("x0:"),i(3, "1.2"),t(", "), t("y0:"),i(4, "2.1"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "GbmanN.ar", name = "GbmanN.ar", dscr = "Snippet for GbmanN.ar, auto generated by SCNvim" }, {t("GbmanN.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("xi:"),i(2, "1.2"),t(", "), t("yi:"),i(3, "2.1"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "GbmanTrig.ar", name = "GbmanTrig.ar", dscr = "Snippet for GbmanTrig.ar, auto generated by SCNvim" }, {t("GbmanTrig.ar"),t("("),t("minfreq:"),i(1, "5"),t(", "), t("maxfreq:"),i(2, "10"),t(", "), t("x0:"),i(3, "1.2"),t(", "), t("y0:"),i(4, "2.1"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "GbmanTrig.kr", name = "GbmanTrig.kr", dscr = "Snippet for GbmanTrig.kr, auto generated by SCNvim" }, {t("GbmanTrig.kr"),t("("),t("minfreq:"),i(1, "5"),t(", "), t("maxfreq:"),i(2, "10"),t(", "), t("x0:"),i(3, "1.2"),t(", "), t("y0:"),i(4, "2.1"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "GenLaguerre.new", name = "GenLaguerre.new", dscr = "Snippet for GenLaguerre.new, auto generated by SCNvim" }, {t("GenLaguerre.new"),t("("),t("n:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"), t(")"),}),
s( {trig = "GenLaguerre.calc", name = "GenLaguerre.calc", dscr = "Snippet for GenLaguerre.calc, auto generated by SCNvim" }, {t("GenLaguerre.calc"),t("("),t("n:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("x:"),i(3, "nil"), t(")"),}),
s( {trig = "Gendy1.ar", name = "Gendy1.ar", dscr = "Snippet for Gendy1.ar, auto generated by SCNvim" }, {t("Gendy1.ar"),t("("),t("ampdist:"),i(1, "1"),t(", "), t("durdist:"),i(2, "1"),t(", "), t("adparam:"),i(3, "1.0"),t(", "), t("ddparam:"),i(4, "1.0"),t(", "), t("minfreq:"),i(5, "440"),t(", "), t("maxfreq:"),i(6, "660"),t(", "), t("ampscale:"),i(7, "0.5"),t(", "), t("durscale:"),i(8, "0.5"),t(", "), t("initCPs:"),i(9, "12"),t(", "), t("knum:"),i(10, "nil"),t(", "), t("mul:"),i(11, "1.0"),t(", "), t("add:"),i(12, "0.0"), t(")"),}),
s( {trig = "Gendy1.kr", name = "Gendy1.kr", dscr = "Snippet for Gendy1.kr, auto generated by SCNvim" }, {t("Gendy1.kr"),t("("),t("ampdist:"),i(1, "1"),t(", "), t("durdist:"),i(2, "1"),t(", "), t("adparam:"),i(3, "1.0"),t(", "), t("ddparam:"),i(4, "1.0"),t(", "), t("minfreq:"),i(5, "20"),t(", "), t("maxfreq:"),i(6, "1000"),t(", "), t("ampscale:"),i(7, "0.5"),t(", "), t("durscale:"),i(8, "0.5"),t(", "), t("initCPs:"),i(9, "12"),t(", "), t("knum:"),i(10, "nil"),t(", "), t("mul:"),i(11, "1.0"),t(", "), t("add:"),i(12, "0.0"), t(")"),}),
s( {trig = "Gendy2.ar", name = "Gendy2.ar", dscr = "Snippet for Gendy2.ar, auto generated by SCNvim" }, {t("Gendy2.ar"),t("("),t("ampdist:"),i(1, "1"),t(", "), t("durdist:"),i(2, "1"),t(", "), t("adparam:"),i(3, "1.0"),t(", "), t("ddparam:"),i(4, "1.0"),t(", "), t("minfreq:"),i(5, "440"),t(", "), t("maxfreq:"),i(6, "660"),t(", "), t("ampscale:"),i(7, "0.5"),t(", "), t("durscale:"),i(8, "0.5"),t(", "), t("initCPs:"),i(9, "12"),t(", "), t("knum:"),i(10, "nil"),t(", "), t("a:"),i(11, "1.17"),t(", "), t("c:"),i(12, "0.31"),t(", "), t("mul:"),i(13, "1.0"),t(", "), t("add:"),i(14, "0.0"), t(")"),}),
s( {trig = "Gendy2.kr", name = "Gendy2.kr", dscr = "Snippet for Gendy2.kr, auto generated by SCNvim" }, {t("Gendy2.kr"),t("("),t("ampdist:"),i(1, "1"),t(", "), t("durdist:"),i(2, "1"),t(", "), t("adparam:"),i(3, "1.0"),t(", "), t("ddparam:"),i(4, "1.0"),t(", "), t("minfreq:"),i(5, "20"),t(", "), t("maxfreq:"),i(6, "1000"),t(", "), t("ampscale:"),i(7, "0.5"),t(", "), t("durscale:"),i(8, "0.5"),t(", "), t("initCPs:"),i(9, "12"),t(", "), t("knum:"),i(10, "nil"),t(", "), t("a:"),i(11, "1.17"),t(", "), t("c:"),i(12, "0.31"),t(", "), t("mul:"),i(13, "1.0"),t(", "), t("add:"),i(14, "0.0"), t(")"),}),
s( {trig = "Gendy3.ar", name = "Gendy3.ar", dscr = "Snippet for Gendy3.ar, auto generated by SCNvim" }, {t("Gendy3.ar"),t("("),t("ampdist:"),i(1, "1"),t(", "), t("durdist:"),i(2, "1"),t(", "), t("adparam:"),i(3, "1.0"),t(", "), t("ddparam:"),i(4, "1.0"),t(", "), t("freq:"),i(5, "440"),t(", "), t("ampscale:"),i(6, "0.5"),t(", "), t("durscale:"),i(7, "0.5"),t(", "), t("initCPs:"),i(8, "12"),t(", "), t("knum:"),i(9, "nil"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "Gendy3.kr", name = "Gendy3.kr", dscr = "Snippet for Gendy3.kr, auto generated by SCNvim" }, {t("Gendy3.kr"),t("("),t("ampdist:"),i(1, "1"),t(", "), t("durdist:"),i(2, "1"),t(", "), t("adparam:"),i(3, "1.0"),t(", "), t("ddparam:"),i(4, "1.0"),t(", "), t("freq:"),i(5, "440"),t(", "), t("ampscale:"),i(6, "0.5"),t(", "), t("durscale:"),i(7, "0.5"),t(", "), t("initCPs:"),i(8, "12"),t(", "), t("knum:"),i(9, "nil"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "Gendy4.ar", name = "Gendy4.ar", dscr = "Snippet for Gendy4.ar, auto generated by SCNvim" }, {t("Gendy4.ar"),t("("),t("ampdist:"),i(1, "1"),t(", "), t("durdist:"),i(2, "1"),t(", "), t("adparam:"),i(3, "1.0"),t(", "), t("ddparam:"),i(4, "1.0"),t(", "), t("minfreq:"),i(5, "440"),t(", "), t("maxfreq:"),i(6, "660"),t(", "), t("ampscale:"),i(7, "0.5"),t(", "), t("durscale:"),i(8, "0.5"),t(", "), t("initCPs:"),i(9, "12"),t(", "), t("knum:"),i(10, "nil"),t(", "), t("mul:"),i(11, "1.0"),t(", "), t("add:"),i(12, "0.0"), t(")"),}),
s( {trig = "Gendy4.kr", name = "Gendy4.kr", dscr = "Snippet for Gendy4.kr, auto generated by SCNvim" }, {t("Gendy4.kr"),t("("),t("ampdist:"),i(1, "1"),t(", "), t("durdist:"),i(2, "1"),t(", "), t("adparam:"),i(3, "1.0"),t(", "), t("ddparam:"),i(4, "1.0"),t(", "), t("minfreq:"),i(5, "20"),t(", "), t("maxfreq:"),i(6, "1000"),t(", "), t("ampscale:"),i(7, "0.5"),t(", "), t("durscale:"),i(8, "0.5"),t(", "), t("initCPs:"),i(9, "12"),t(", "), t("knum:"),i(10, "nil"),t(", "), t("mul:"),i(11, "1.0"),t(", "), t("add:"),i(12, "0.0"), t(")"),}),
s( {trig = "Getenv.new", name = "Getenv.new", dscr = "Snippet for Getenv.new, auto generated by SCNvim" }, {t("Getenv.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("defaultval:"),i(2, "0"), t(")"),}),
s( {trig = "Getenv.new1", name = "Getenv.new1", dscr = "Snippet for Getenv.new1, auto generated by SCNvim" }, {t("Getenv.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("key:"),i(2, "nil"),t(", "), t("defaultval:"),i(3, "nil"), t(")"),}),
s( {trig = "Getenv.categories", name = "Getenv.categories", dscr = "Snippet for Getenv.categories, auto generated by SCNvim" }, {t("Getenv.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Git.isGit", name = "Git.isGit", dscr = "Snippet for Git.isGit, auto generated by SCNvim" }, {t("Git.isGit"),t("("),t("localPath:"),i(1, "nil"), t(")"),}),
s( {trig = "Git.new", name = "Git.new", dscr = "Snippet for Git.new, auto generated by SCNvim" }, {t("Git.new"),t("("),t("localPath:"),i(1, "nil"), t(")"),}),
s( {trig = "Git.checkForGit", name = "Git.checkForGit", dscr = "Snippet for Git.checkForGit, auto generated by SCNvim" }, {t("Git.checkForGit"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "GlitchBPF.ar", name = "GlitchBPF.ar", dscr = "Snippet for GlitchBPF.ar, auto generated by SCNvim" }, {t("GlitchBPF.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "GlitchBPF.kr", name = "GlitchBPF.kr", dscr = "Snippet for GlitchBPF.kr, auto generated by SCNvim" }, {t("GlitchBPF.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "GlitchHPF.ar", name = "GlitchHPF.ar", dscr = "Snippet for GlitchHPF.ar, auto generated by SCNvim" }, {t("GlitchHPF.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "GlitchHPF.kr", name = "GlitchHPF.kr", dscr = "Snippet for GlitchHPF.kr, auto generated by SCNvim" }, {t("GlitchHPF.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "GlitchRHPF.ar", name = "GlitchRHPF.ar", dscr = "Snippet for GlitchRHPF.ar, auto generated by SCNvim" }, {t("GlitchRHPF.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "GlitchRHPF.kr", name = "GlitchRHPF.kr", dscr = "Snippet for GlitchRHPF.kr, auto generated by SCNvim" }, {t("GlitchRHPF.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Goertzel.kr", name = "Goertzel.kr", dscr = "Snippet for Goertzel.kr, auto generated by SCNvim" }, {t("Goertzel.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("bufsize:"),i(2, "1024"),t(", "), t("freq:"),i(3, "nil"),t(", "), t("hop:"),i(4, "1"), t(")"),}),
s( {trig = "Gradient.new", name = "Gradient.new", dscr = "Snippet for Gradient.new, auto generated by SCNvim" }, {t("Gradient.new"),t("("),t("color1:"),i(1, "nil"),t(", "), t("color2:"),i(2, "nil"),t(", "), t("direction:"),i(3, "h"),t(", "), t("steps:"),i(4, "64"), t(")"),}),
s( {trig = "GrainBuf.ar", name = "GrainBuf.ar", dscr = "Snippet for GrainBuf.ar, auto generated by SCNvim" }, {t("GrainBuf.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("dur:"),i(3, "1"),t(", "), t("sndbuf:"),i(4, "nil"),t(", "), t("rate:"),i(5, "1"),t(", "), t("pos:"),i(6, "0"),t(", "), t("interp:"),i(7, "2"),t(", "), t("pan:"),i(8, "0"),t(", "), t("envbufnum:"),i(9, "-1"),t(", "), t("maxGrains:"),i(10, "512"),t(", "), t("mul:"),i(11, "1"),t(", "), t("add:"),i(12, "0"), t(")"),}),
s( {trig = "GrainBufJ.ar", name = "GrainBufJ.ar", dscr = "Snippet for GrainBufJ.ar, auto generated by SCNvim" }, {t("GrainBufJ.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("dur:"),i(3, "1"),t(", "), t("sndbuf:"),i(4, "nil"),t(", "), t("rate:"),i(5, "1"),t(", "), t("pos:"),i(6, "0"),t(", "), t("loop:"),i(7, "0"),t(", "), t("interp:"),i(8, "2"),t(", "), t("grainAmp:"),i(9, "1"),t(", "), t("pan:"),i(10, "0"),t(", "), t("envbufnum:"),i(11, "-1"),t(", "), t("maxGrains:"),i(12, "512"),t(", "), t("mul:"),i(13, "1"),t(", "), t("add:"),i(14, "0"), t(")"),}),
s( {trig = "GrainFM.ar", name = "GrainFM.ar", dscr = "Snippet for GrainFM.ar, auto generated by SCNvim" }, {t("GrainFM.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("dur:"),i(3, "1"),t(", "), t("carfreq:"),i(4, "440"),t(", "), t("modfreq:"),i(5, "200"),t(", "), t("index:"),i(6, "1"),t(", "), t("pan:"),i(7, "0"),t(", "), t("envbufnum:"),i(8, "-1"),t(", "), t("maxGrains:"),i(9, "512"),t(", "), t("mul:"),i(10, "1"),t(", "), t("add:"),i(11, "0"), t(")"),}),
s( {trig = "GrainFMJ.ar", name = "GrainFMJ.ar", dscr = "Snippet for GrainFMJ.ar, auto generated by SCNvim" }, {t("GrainFMJ.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("dur:"),i(3, "1"),t(", "), t("carfreq:"),i(4, "440"),t(", "), t("modfreq:"),i(5, "200"),t(", "), t("index:"),i(6, "1"),t(", "), t("grainAmp:"),i(7, "1"),t(", "), t("pan:"),i(8, "0"),t(", "), t("envbufnum:"),i(9, "-1"),t(", "), t("maxGrains:"),i(10, "512"),t(", "), t("mul:"),i(11, "1"),t(", "), t("add:"),i(12, "0"), t(")"),}),
s( {trig = "GrainIn.ar", name = "GrainIn.ar", dscr = "Snippet for GrainIn.ar, auto generated by SCNvim" }, {t("GrainIn.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("dur:"),i(3, "1"),t(", "), t("in:"),i(4, "nil"),t(", "), t("pan:"),i(5, "0"),t(", "), t("envbufnum:"),i(6, "-1"),t(", "), t("maxGrains:"),i(7, "512"),t(", "), t("mul:"),i(8, "1"),t(", "), t("add:"),i(9, "0"), t(")"),}),
s( {trig = "GrainInJ.ar", name = "GrainInJ.ar", dscr = "Snippet for GrainInJ.ar, auto generated by SCNvim" }, {t("GrainInJ.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("dur:"),i(3, "1"),t(", "), t("in:"),i(4, "nil"),t(", "), t("grainAmp:"),i(5, "1"),t(", "), t("pan:"),i(6, "0"),t(", "), t("envbufnum:"),i(7, "-1"),t(", "), t("maxGrains:"),i(8, "512"),t(", "), t("mul:"),i(9, "1"),t(", "), t("add:"),i(10, "0"), t(")"),}),
s( {trig = "GrainSin.ar", name = "GrainSin.ar", dscr = "Snippet for GrainSin.ar, auto generated by SCNvim" }, {t("GrainSin.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("dur:"),i(3, "1"),t(", "), t("freq:"),i(4, "440"),t(", "), t("pan:"),i(5, "0"),t(", "), t("envbufnum:"),i(6, "-1"),t(", "), t("maxGrains:"),i(7, "512"),t(", "), t("mul:"),i(8, "1"),t(", "), t("add:"),i(9, "0"), t(")"),}),
s( {trig = "GrainSinJ.ar", name = "GrainSinJ.ar", dscr = "Snippet for GrainSinJ.ar, auto generated by SCNvim" }, {t("GrainSinJ.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("dur:"),i(3, "1"),t(", "), t("freq:"),i(4, "440"),t(", "), t("grainAmp:"),i(5, "1"),t(", "), t("pan:"),i(6, "0"),t(", "), t("envbufnum:"),i(7, "-1"),t(", "), t("maxGrains:"),i(8, "512"),t(", "), t("mul:"),i(9, "1"),t(", "), t("add:"),i(10, "0"), t(")"),}),
s( {trig = "GraphBuilder.wrapOut", name = "GraphBuilder.wrapOut", dscr = "Snippet for GraphBuilder.wrapOut, auto generated by SCNvim" }, {t("GraphBuilder.wrapOut"),t("("),t("name:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("rates:"),i(3, "nil"),t(", "), t("prependArgs:"),i(4, "nil"),t(", "), t("outClass:"),i(5, "Out"),t(", "), t("fadeTime:"),i(6, "nil"), t(")"),}),
s( {trig = "GraphBuilder.makeFadeEnv", name = "GraphBuilder.makeFadeEnv", dscr = "Snippet for GraphBuilder.makeFadeEnv, auto generated by SCNvim" }, {t("GraphBuilder.makeFadeEnv"),t("("),t("fadeTime:"),i(1, "0.02"), t(")"),}),
s( {trig = "GravityGrid.ar", name = "GravityGrid.ar", dscr = "Snippet for GravityGrid.ar, auto generated by SCNvim" }, {t("GravityGrid.ar"),t("("),t("reset:"),i(1, "0"),t(", "), t("rate:"),i(2, "0.1"),t(", "), t("newx:"),i(3, "0.0"),t(", "), t("newy:"),i(4, "0.0"),t(", "), t("bufnum:"),i(5, "nil"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "GravityGrid2.ar", name = "GravityGrid2.ar", dscr = "Snippet for GravityGrid2.ar, auto generated by SCNvim" }, {t("GravityGrid2.ar"),t("("),t("reset:"),i(1, "0"),t(", "), t("rate:"),i(2, "0.1"),t(", "), t("newx:"),i(3, "0.0"),t(", "), t("newy:"),i(4, "0.0"),t(", "), t("bufnum:"),i(5, "nil"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "Greyhole.ar", name = "Greyhole.ar", dscr = "Snippet for Greyhole.ar, auto generated by SCNvim" }, {t("Greyhole.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("delayTime:"),i(2, "2.0"),t(", "), t("damp:"),i(3, "0.0"),t(", "), t("size:"),i(4, "1.0"),t(", "), t("diff:"),i(5, "0.707"),t(", "), t("feedback:"),i(6, "0.9"),t(", "), t("modDepth:"),i(7, "0.1"),t(", "), t("modFreq:"),i(8, "2.0"), t(")"),}),
s( {trig = "GreyholeRaw.ar", name = "GreyholeRaw.ar", dscr = "Snippet for GreyholeRaw.ar, auto generated by SCNvim" }, {t("GreyholeRaw.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("damping:"),i(3, "0.0"),t(", "), t("delaytime:"),i(4, "2.0"),t(", "), t("diffusion:"),i(5, "0.5"),t(", "), t("feedback:"),i(6, "0.9"),t(", "), t("moddepth:"),i(7, "0.1"),t(", "), t("modfreq:"),i(8, "2.0"),t(", "), t("size:"),i(9, "1.0"), t(")"),}),
s( {trig = "GridLayout.new", name = "GridLayout.new", dscr = "Snippet for GridLayout.new, auto generated by SCNvim" }, {t("GridLayout.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "GridLayout.qtClass", name = "GridLayout.qtClass", dscr = "Snippet for GridLayout.qtClass, auto generated by SCNvim" }, {t("GridLayout.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "GridLayout.parse", name = "GridLayout.parse", dscr = "Snippet for GridLayout.parse, auto generated by SCNvim" }, {t("GridLayout.parse"),t("("),t("in:"),i(1, "nil"),t(", "), t("row:"),i(2, "nil"),t(", "), t("col:"),i(3, "nil"), t(")"),}),
s( {trig = "GridLayout.rows", name = "GridLayout.rows", dscr = "Snippet for GridLayout.rows, auto generated by SCNvim" }, {t("GridLayout.rows"),t("("),t("rows:"),i(1, "[]"), t(")"),}),
s( {trig = "GridLayout.columns", name = "GridLayout.columns", dscr = "Snippet for GridLayout.columns, auto generated by SCNvim" }, {t("GridLayout.columns"),t("("),t("cols:"),i(1, "[]"), t(")"),}),
s( {trig = "GridLines.new", name = "GridLines.new", dscr = "Snippet for GridLines.new, auto generated by SCNvim" }, {t("GridLines.new"),t("("),t("spec:"),i(1, "nil"), t(")"),}),
s( {trig = "Group.creationCmd", name = "Group.creationCmd", dscr = "Snippet for Group.creationCmd, auto generated by SCNvim" }, {t("Group.creationCmd"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HID.initClass", name = "HID.initClass", dscr = "Snippet for HID.initClass, auto generated by SCNvim" }, {t("HID.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HID.addRecvFunc", name = "HID.addRecvFunc", dscr = "Snippet for HID.addRecvFunc, auto generated by SCNvim" }, {t("HID.addRecvFunc"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.removeRecvFunc", name = "HID.removeRecvFunc", dscr = "Snippet for HID.removeRecvFunc, auto generated by SCNvim" }, {t("HID.removeRecvFunc"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.addDevFunc", name = "HID.addDevFunc", dscr = "Snippet for HID.addDevFunc, auto generated by SCNvim" }, {t("HID.addDevFunc"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.removeDevFunc", name = "HID.removeDevFunc", dscr = "Snippet for HID.removeDevFunc, auto generated by SCNvim" }, {t("HID.removeDevFunc"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.action_", name = "HID.action_", dscr = "Snippet for HID.action_, auto generated by SCNvim" }, {t("HID.action_"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.deviceAction_", name = "HID.deviceAction_", dscr = "Snippet for HID.deviceAction_, auto generated by SCNvim" }, {t("HID.deviceAction_"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.findAvailable", name = "HID.findAvailable", dscr = "Snippet for HID.findAvailable, auto generated by SCNvim" }, {t("HID.findAvailable"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HID.openAt", name = "HID.openAt", dscr = "Snippet for HID.openAt, auto generated by SCNvim" }, {t("HID.openAt"),t("("),t("index:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.open", name = "HID.open", dscr = "Snippet for HID.open, auto generated by SCNvim" }, {t("HID.open"),t("("),t("vendorID:"),i(1, "nil"),t(", "), t("productID:"),i(2, "nil"),t(", "), t("path:"),i(3, "nil"), t(")"),}),
s( {trig = "HID.mergeUsageDict", name = "HID.mergeUsageDict", dscr = "Snippet for HID.mergeUsageDict, auto generated by SCNvim" }, {t("HID.mergeUsageDict"),t("("),t("dev:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.removeUsageDict", name = "HID.removeUsageDict", dscr = "Snippet for HID.removeUsageDict, auto generated by SCNvim" }, {t("HID.removeUsageDict"),t("("),t("dev:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.openPath", name = "HID.openPath", dscr = "Snippet for HID.openPath, auto generated by SCNvim" }, {t("HID.openPath"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.initializeHID", name = "HID.initializeHID", dscr = "Snippet for HID.initializeHID, auto generated by SCNvim" }, {t("HID.initializeHID"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HID.closeAll", name = "HID.closeAll", dscr = "Snippet for HID.closeAll, auto generated by SCNvim" }, {t("HID.closeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HID.findBy", name = "HID.findBy", dscr = "Snippet for HID.findBy, auto generated by SCNvim" }, {t("HID.findBy"),t("("),t("vendorID:"),i(1, "nil"),t(", "), t("productID:"),i(2, "nil"),t(", "), t("path:"),i(3, "nil"),t(", "), t("serial:"),i(4, "nil"),t(", "), t("releaseNumber:"),i(5, "nil"), t(")"),}),
s( {trig = "HID.doPrAction", name = "HID.doPrAction", dscr = "Snippet for HID.doPrAction, auto generated by SCNvim" }, {t("HID.doPrAction"),t("("),t("value:"),i(1, "nil"),t(", "), t("physValue:"),i(2, "nil"),t(", "), t("rawValue:"),i(3, "nil"),t(", "), t("arrayValue:"),i(4, "nil"),t(", "), t("usage:"),i(5, "nil"),t(", "), t("page:"),i(6, "nil"),t(", "), t("elid:"),i(7, "nil"),t(", "), t("devid:"),i(8, "nil"), t(")"),}),
s( {trig = "HID.prInitHID", name = "HID.prInitHID", dscr = "Snippet for HID.prInitHID, auto generated by SCNvim" }, {t("HID.prInitHID"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HID.prCloseAll", name = "HID.prCloseAll", dscr = "Snippet for HID.prCloseAll, auto generated by SCNvim" }, {t("HID.prCloseAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HID.prOpenDevice", name = "HID.prOpenDevice", dscr = "Snippet for HID.prOpenDevice, auto generated by SCNvim" }, {t("HID.prOpenDevice"),t("("),t("vendorID:"),i(1, "nil"),t(", "), t("productID:"),i(2, "nil"),t(", "), t("path:"),i(3, "nil"), t(")"),}),
s( {trig = "HID.prCloseDevice", name = "HID.prCloseDevice", dscr = "Snippet for HID.prCloseDevice, auto generated by SCNvim" }, {t("HID.prCloseDevice"),t("("),t("joyid:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.prGetDeviceInfo", name = "HID.prGetDeviceInfo", dscr = "Snippet for HID.prGetDeviceInfo, auto generated by SCNvim" }, {t("HID.prGetDeviceInfo"),t("("),t("joyid:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.prGetNumberOfCollections", name = "HID.prGetNumberOfCollections", dscr = "Snippet for HID.prGetNumberOfCollections, auto generated by SCNvim" }, {t("HID.prGetNumberOfCollections"),t("("),t("joyid:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.prGetCollectionInfo", name = "HID.prGetCollectionInfo", dscr = "Snippet for HID.prGetCollectionInfo, auto generated by SCNvim" }, {t("HID.prGetCollectionInfo"),t("("),t("joyid:"),i(1, "nil"),t(", "), t("colid:"),i(2, "nil"), t(")"),}),
s( {trig = "HID.prGetNumberOfElements", name = "HID.prGetNumberOfElements", dscr = "Snippet for HID.prGetNumberOfElements, auto generated by SCNvim" }, {t("HID.prGetNumberOfElements"),t("("),t("joyid:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.prGetElementInfo", name = "HID.prGetElementInfo", dscr = "Snippet for HID.prGetElementInfo, auto generated by SCNvim" }, {t("HID.prGetElementInfo"),t("("),t("joyid:"),i(1, "nil"),t(", "), t("elid:"),i(2, "nil"), t(")"),}),
s( {trig = "HID.prSetElementOutput", name = "HID.prSetElementOutput", dscr = "Snippet for HID.prSetElementOutput, auto generated by SCNvim" }, {t("HID.prSetElementOutput"),t("("),t("joyid:"),i(1, "nil"),t(", "), t("elid:"),i(2, "nil"),t(", "), t("value:"),i(3, "nil"), t(")"),}),
s( {trig = "HID.prSetElementRepeat", name = "HID.prSetElementRepeat", dscr = "Snippet for HID.prSetElementRepeat, auto generated by SCNvim" }, {t("HID.prSetElementRepeat"),t("("),t("joyid:"),i(1, "nil"),t(", "), t("elid:"),i(2, "nil"),t(", "), t("value:"),i(3, "nil"), t(")"),}),
s( {trig = "HID.prbuildDeviceList", name = "HID.prbuildDeviceList", dscr = "Snippet for HID.prbuildDeviceList, auto generated by SCNvim" }, {t("HID.prbuildDeviceList"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HID.prHIDDeviceClosed", name = "HID.prHIDDeviceClosed", dscr = "Snippet for HID.prHIDDeviceClosed, auto generated by SCNvim" }, {t("HID.prHIDDeviceClosed"),t("("),t("devid:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.prHIDElementData", name = "HID.prHIDElementData", dscr = "Snippet for HID.prHIDElementData, auto generated by SCNvim" }, {t("HID.prHIDElementData"),t("("),t("devid:"),i(1, "nil"),t(", "), t("elid:"),i(2, "nil"),t(", "), t("page:"),i(3, "nil"),t(", "), t("usage:"),i(4, "nil"),t(", "), t("rawValue:"),i(5, "nil"),t(", "), t("value:"),i(6, "nil"),t(", "), t("physValue:"),i(7, "nil"),t(", "), t("arrayValue:"),i(8, "nil"), t(")"),}),
s( {trig = "HID.prHIDDeviceData", name = "HID.prHIDDeviceData", dscr = "Snippet for HID.prHIDDeviceData, auto generated by SCNvim" }, {t("HID.prHIDDeviceData"),t("("),t("devid:"),i(1, "nil"),t(", "), t("numelements:"),i(2, "nil"), t(")"),}),
s( {trig = "HID.new", name = "HID.new", dscr = "Snippet for HID.new, auto generated by SCNvim" }, {t("HID.new"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "HID.basicNew", name = "HID.basicNew", dscr = "Snippet for HID.basicNew, auto generated by SCNvim" }, {t("HID.basicNew"),t("("),t("id:"),i(1, "nil"), t(")"),}),
s( {trig = "HID.postAvailable", name = "HID.postAvailable", dscr = "Snippet for HID.postAvailable, auto generated by SCNvim" }, {t("HID.postAvailable"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HID.postAvailableUsages", name = "HID.postAvailableUsages", dscr = "Snippet for HID.postAvailableUsages, auto generated by SCNvim" }, {t("HID.postAvailableUsages"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HIDCollection.new", name = "HIDCollection.new", dscr = "Snippet for HIDCollection.new, auto generated by SCNvim" }, {t("HIDCollection.new"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "HIDElement.new", name = "HIDElement.new", dscr = "Snippet for HIDElement.new, auto generated by SCNvim" }, {t("HIDElement.new"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "HIDElementProto.new", name = "HIDElementProto.new", dscr = "Snippet for HIDElementProto.new, auto generated by SCNvim" }, {t("HIDElementProto.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HIDElementProto.newType", name = "HIDElementProto.newType", dscr = "Snippet for HIDElementProto.newType, auto generated by SCNvim" }, {t("HIDElementProto.newType"),t("("),t("uName:"),i(1, "nil"),t(", "), t("pName:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDElementProto.newTypeID", name = "HIDElementProto.newTypeID", dscr = "Snippet for HIDElementProto.newTypeID, auto generated by SCNvim" }, {t("HIDElementProto.newTypeID"),t("("),t("uID:"),i(1, "nil"),t(", "), t("pID:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDElementProto.newFromDict", name = "HIDElementProto.newFromDict", dscr = "Snippet for HIDElementProto.newFromDict, auto generated by SCNvim" }, {t("HIDElementProto.newFromDict"),t("("),t("dict:"),i(1, "nil"), t(")"),}),
s( {trig = "HIDElementProtoDispatcher.new", name = "HIDElementProtoDispatcher.new", dscr = "Snippet for HIDElementProtoDispatcher.new, auto generated by SCNvim" }, {t("HIDElementProtoDispatcher.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HIDFunc.initClass", name = "HIDFunc.initClass", dscr = "Snippet for HIDFunc.initClass, auto generated by SCNvim" }, {t("HIDFunc.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HIDFunc.usage", name = "HIDFunc.usage", dscr = "Snippet for HIDFunc.usage, auto generated by SCNvim" }, {t("HIDFunc.usage"),t("("),t("func:"),i(1, "nil"),t(", "), t("elUsageName:"),i(2, "nil"),t(", "), t("devUsageName:"),i(3, "nil"),t(", "), t("deviceInfo:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("argTemplateType:"),i(6, "nil"),t(", "), t("dispatcher:"),i(7, "nil"), t(")"),}),
s( {trig = "HIDFunc.usageID", name = "HIDFunc.usageID", dscr = "Snippet for HIDFunc.usageID, auto generated by SCNvim" }, {t("HIDFunc.usageID"),t("("),t("func:"),i(1, "nil"),t(", "), t("elUsageID:"),i(2, "nil"),t(", "), t("elPageID:"),i(3, "nil"),t(", "), t("deviceName:"),i(4, "nil"),t(", "), t("deviceInfo:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"),t(", "), t("argTemplateType:"),i(7, "nil"),t(", "), t("dispatcher:"),i(8, "nil"), t(")"),}),
s( {trig = "HIDFunc.device", name = "HIDFunc.device", dscr = "Snippet for HIDFunc.device, auto generated by SCNvim" }, {t("HIDFunc.device"),t("("),t("func:"),i(1, "nil"),t(", "), t("elUsageName:"),i(2, "nil"),t(", "), t("deviceName:"),i(3, "nil"),t(", "), t("deviceInfo:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("argTemplateType:"),i(6, "nil"),t(", "), t("dispatcher:"),i(7, "nil"), t(")"),}),
s( {trig = "HIDFunc.proto", name = "HIDFunc.proto", dscr = "Snippet for HIDFunc.proto, auto generated by SCNvim" }, {t("HIDFunc.proto"),t("("),t("func:"),i(1, "nil"),t(", "), t("protoElement:"),i(2, "nil"),t(", "), t("deviceInfo:"),i(3, "nil"),t(", "), t("argTemplate:"),i(4, "nil"),t(", "), t("argTemplateType:"),i(5, "nil"),t(", "), t("dispatcher:"),i(6, "nil"), t(")"),}),
s( {trig = "HIDFunc.element", name = "HIDFunc.element", dscr = "Snippet for HIDFunc.element, auto generated by SCNvim" }, {t("HIDFunc.element"),t("("),t("func:"),i(1, "nil"),t(", "), t("elID:"),i(2, "nil"),t(", "), t("deviceName:"),i(3, "nil"),t(", "), t("deviceInfo:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("argTemplateType:"),i(6, "nil"),t(", "), t("dispatcher:"),i(7, "nil"), t(")"),}),
s( {trig = "HIDFunc.trace", name = "HIDFunc.trace", dscr = "Snippet for HIDFunc.trace, auto generated by SCNvim" }, {t("HIDFunc.trace"),t("("),t("bool:"),i(1, "true"), t(")"),}),
s( {trig = "HIDFunc.cmdPeriod", name = "HIDFunc.cmdPeriod", dscr = "Snippet for HIDFunc.cmdPeriod, auto generated by SCNvim" }, {t("HIDFunc.cmdPeriod"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HIDFuncDeviceProtoMatcher.new", name = "HIDFuncDeviceProtoMatcher.new", dscr = "Snippet for HIDFuncDeviceProtoMatcher.new, auto generated by SCNvim" }, {t("HIDFuncDeviceProtoMatcher.new"),t("("),t("srcID:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDFuncElementProtoMatcher.new", name = "HIDFuncElementProtoMatcher.new", dscr = "Snippet for HIDFuncElementProtoMatcher.new, auto generated by SCNvim" }, {t("HIDFuncElementProtoMatcher.new"),t("("),t("elProto:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDInfo.new", name = "HIDInfo.new", dscr = "Snippet for HIDInfo.new, auto generated by SCNvim" }, {t("HIDInfo.new"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "HIDProto.new", name = "HIDProto.new", dscr = "Snippet for HIDProto.new, auto generated by SCNvim" }, {t("HIDProto.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HIDProto.newType", name = "HIDProto.newType", dscr = "Snippet for HIDProto.newType, auto generated by SCNvim" }, {t("HIDProto.newType"),t("("),t("uName:"),i(1, "nil"),t(", "), t("pName:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDProto.newProduct", name = "HIDProto.newProduct", dscr = "Snippet for HIDProto.newProduct, auto generated by SCNvim" }, {t("HIDProto.newProduct"),t("("),t("pName:"),i(1, "nil"),t(", "), t("vName:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDProto.newFromDict", name = "HIDProto.newFromDict", dscr = "Snippet for HIDProto.newFromDict, auto generated by SCNvim" }, {t("HIDProto.newFromDict"),t("("),t("dict:"),i(1, "nil"), t(")"),}),
s( {trig = "HIDRawValueMatcher.new", name = "HIDRawValueMatcher.new", dscr = "Snippet for HIDRawValueMatcher.new, auto generated by SCNvim" }, {t("HIDRawValueMatcher.new"),t("("),t("argTemplate:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDUsage.initClass", name = "HIDUsage.initClass", dscr = "Snippet for HIDUsage.initClass, auto generated by SCNvim" }, {t("HIDUsage.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HIDUsage.getUsageDescription", name = "HIDUsage.getUsageDescription", dscr = "Snippet for HIDUsage.getUsageDescription, auto generated by SCNvim" }, {t("HIDUsage.getUsageDescription"),t("("),t("usagePage:"),i(1, "nil"),t(", "), t("usage:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDUsage.idsToName", name = "HIDUsage.idsToName", dscr = "Snippet for HIDUsage.idsToName, auto generated by SCNvim" }, {t("HIDUsage.idsToName"),t("("),t("page:"),i(1, "nil"),t(", "), t("usage:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDUsage.getUsageIds", name = "HIDUsage.getUsageIds", dscr = "Snippet for HIDUsage.getUsageIds, auto generated by SCNvim" }, {t("HIDUsage.getUsageIds"),t("("),t("usageName:"),i(1, "nil"), t(")"),}),
s( {trig = "HIDUsage.readHUTFile", name = "HIDUsage.readHUTFile", dscr = "Snippet for HIDUsage.readHUTFile, auto generated by SCNvim" }, {t("HIDUsage.readHUTFile"),t("("),t("yamlfile:"),i(1, "nil"), t(")"),}),
s( {trig = "HIDUsageDispatcher.new", name = "HIDUsageDispatcher.new", dscr = "Snippet for HIDUsageDispatcher.new, auto generated by SCNvim" }, {t("HIDUsageDispatcher.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HIDValueMatcher.new", name = "HIDValueMatcher.new", dscr = "Snippet for HIDValueMatcher.new, auto generated by SCNvim" }, {t("HIDValueMatcher.new"),t("("),t("argTemplate:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDdef.initClass", name = "HIDdef.initClass", dscr = "Snippet for HIDdef.initClass, auto generated by SCNvim" }, {t("HIDdef.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HIDdef.new", name = "HIDdef.new", dscr = "Snippet for HIDdef.new, auto generated by SCNvim" }, {t("HIDdef.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "HIDdef.usage", name = "HIDdef.usage", dscr = "Snippet for HIDdef.usage, auto generated by SCNvim" }, {t("HIDdef.usage"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("elUsageName:"),i(3, "nil"),t(", "), t("devUsageName:"),i(4, "nil"),t(", "), t("deviceInfo:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"),t(", "), t("argTemplateType:"),i(7, "nil"),t(", "), t("dispatcher:"),i(8, "nil"), t(")"),}),
s( {trig = "HIDdef.usageID", name = "HIDdef.usageID", dscr = "Snippet for HIDdef.usageID, auto generated by SCNvim" }, {t("HIDdef.usageID"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("elUsageID:"),i(3, "nil"),t(", "), t("elPageID:"),i(4, "nil"),t(", "), t("deviceName:"),i(5, "nil"),t(", "), t("deviceInfo:"),i(6, "nil"),t(", "), t("argTemplate:"),i(7, "nil"),t(", "), t("argTemplateType:"),i(8, "nil"),t(", "), t("dispatcher:"),i(9, "nil"), t(")"),}),
s( {trig = "HIDdef.device", name = "HIDdef.device", dscr = "Snippet for HIDdef.device, auto generated by SCNvim" }, {t("HIDdef.device"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("elUsageName:"),i(3, "nil"),t(", "), t("deviceName:"),i(4, "nil"),t(", "), t("deviceInfo:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"),t(", "), t("argTemplateType:"),i(7, "nil"),t(", "), t("dispatcher:"),i(8, "nil"), t(")"),}),
s( {trig = "HIDdef.proto", name = "HIDdef.proto", dscr = "Snippet for HIDdef.proto, auto generated by SCNvim" }, {t("HIDdef.proto"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("protoElement:"),i(3, "nil"),t(", "), t("deviceInfo:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("argTemplateType:"),i(6, "nil"),t(", "), t("dispatcher:"),i(7, "nil"), t(")"),}),
s( {trig = "HIDdef.element", name = "HIDdef.element", dscr = "Snippet for HIDdef.element, auto generated by SCNvim" }, {t("HIDdef.element"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("elID:"),i(3, "nil"),t(", "), t("deviceName:"),i(4, "nil"),t(", "), t("deviceInfo:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"),t(", "), t("argTemplateType:"),i(7, "nil"),t(", "), t("dispatcher:"),i(8, "nil"), t(")"),}),
s( {trig = "HIDdef.freeAll", name = "HIDdef.freeAll", dscr = "Snippet for HIDdef.freeAll, auto generated by SCNvim" }, {t("HIDdef.freeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HLayout.qtClass", name = "HLayout.qtClass", dscr = "Snippet for HLayout.qtClass, auto generated by SCNvim" }, {t("HLayout.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HLayoutView.qtClass", name = "HLayoutView.qtClass", dscr = "Snippet for HLayoutView.qtClass, auto generated by SCNvim" }, {t("HLayoutView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HOAAzimuthRotator1.ar", name = "HOAAzimuthRotator1.ar", dscr = "Snippet for HOAAzimuthRotator1.ar, auto generated by SCNvim" }, {t("HOAAzimuthRotator1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("azimuth:"),i(5, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator1.kr", name = "HOAAzimuthRotator1.kr", dscr = "Snippet for HOAAzimuthRotator1.kr, auto generated by SCNvim" }, {t("HOAAzimuthRotator1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("azimuth:"),i(5, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator10.ar", name = "HOAAzimuthRotator10.ar", dscr = "Snippet for HOAAzimuthRotator10.ar, auto generated by SCNvim" }, {t("HOAAzimuthRotator10.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("in101:"),i(101, "nil"),t(", "), t("in102:"),i(102, "nil"),t(", "), t("in103:"),i(103, "nil"),t(", "), t("in104:"),i(104, "nil"),t(", "), t("in105:"),i(105, "nil"),t(", "), t("in106:"),i(106, "nil"),t(", "), t("in107:"),i(107, "nil"),t(", "), t("in108:"),i(108, "nil"),t(", "), t("in109:"),i(109, "nil"),t(", "), t("in110:"),i(110, "nil"),t(", "), t("in111:"),i(111, "nil"),t(", "), t("in112:"),i(112, "nil"),t(", "), t("in113:"),i(113, "nil"),t(", "), t("in114:"),i(114, "nil"),t(", "), t("in115:"),i(115, "nil"),t(", "), t("in116:"),i(116, "nil"),t(", "), t("in117:"),i(117, "nil"),t(", "), t("in118:"),i(118, "nil"),t(", "), t("in119:"),i(119, "nil"),t(", "), t("in120:"),i(120, "nil"),t(", "), t("in121:"),i(121, "nil"),t(", "), t("azimuth:"),i(122, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator10.kr", name = "HOAAzimuthRotator10.kr", dscr = "Snippet for HOAAzimuthRotator10.kr, auto generated by SCNvim" }, {t("HOAAzimuthRotator10.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("in101:"),i(101, "nil"),t(", "), t("in102:"),i(102, "nil"),t(", "), t("in103:"),i(103, "nil"),t(", "), t("in104:"),i(104, "nil"),t(", "), t("in105:"),i(105, "nil"),t(", "), t("in106:"),i(106, "nil"),t(", "), t("in107:"),i(107, "nil"),t(", "), t("in108:"),i(108, "nil"),t(", "), t("in109:"),i(109, "nil"),t(", "), t("in110:"),i(110, "nil"),t(", "), t("in111:"),i(111, "nil"),t(", "), t("in112:"),i(112, "nil"),t(", "), t("in113:"),i(113, "nil"),t(", "), t("in114:"),i(114, "nil"),t(", "), t("in115:"),i(115, "nil"),t(", "), t("in116:"),i(116, "nil"),t(", "), t("in117:"),i(117, "nil"),t(", "), t("in118:"),i(118, "nil"),t(", "), t("in119:"),i(119, "nil"),t(", "), t("in120:"),i(120, "nil"),t(", "), t("in121:"),i(121, "nil"),t(", "), t("azimuth:"),i(122, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator2.ar", name = "HOAAzimuthRotator2.ar", dscr = "Snippet for HOAAzimuthRotator2.ar, auto generated by SCNvim" }, {t("HOAAzimuthRotator2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("azimuth:"),i(10, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator2.kr", name = "HOAAzimuthRotator2.kr", dscr = "Snippet for HOAAzimuthRotator2.kr, auto generated by SCNvim" }, {t("HOAAzimuthRotator2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("azimuth:"),i(10, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator3.ar", name = "HOAAzimuthRotator3.ar", dscr = "Snippet for HOAAzimuthRotator3.ar, auto generated by SCNvim" }, {t("HOAAzimuthRotator3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("azimuth:"),i(17, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator3.kr", name = "HOAAzimuthRotator3.kr", dscr = "Snippet for HOAAzimuthRotator3.kr, auto generated by SCNvim" }, {t("HOAAzimuthRotator3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("azimuth:"),i(17, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator4.ar", name = "HOAAzimuthRotator4.ar", dscr = "Snippet for HOAAzimuthRotator4.ar, auto generated by SCNvim" }, {t("HOAAzimuthRotator4.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("azimuth:"),i(26, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator4.kr", name = "HOAAzimuthRotator4.kr", dscr = "Snippet for HOAAzimuthRotator4.kr, auto generated by SCNvim" }, {t("HOAAzimuthRotator4.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("azimuth:"),i(26, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator5.ar", name = "HOAAzimuthRotator5.ar", dscr = "Snippet for HOAAzimuthRotator5.ar, auto generated by SCNvim" }, {t("HOAAzimuthRotator5.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("azimuth:"),i(37, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator5.kr", name = "HOAAzimuthRotator5.kr", dscr = "Snippet for HOAAzimuthRotator5.kr, auto generated by SCNvim" }, {t("HOAAzimuthRotator5.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("azimuth:"),i(37, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator6.ar", name = "HOAAzimuthRotator6.ar", dscr = "Snippet for HOAAzimuthRotator6.ar, auto generated by SCNvim" }, {t("HOAAzimuthRotator6.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("azimuth:"),i(50, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator6.kr", name = "HOAAzimuthRotator6.kr", dscr = "Snippet for HOAAzimuthRotator6.kr, auto generated by SCNvim" }, {t("HOAAzimuthRotator6.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("azimuth:"),i(50, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator7.ar", name = "HOAAzimuthRotator7.ar", dscr = "Snippet for HOAAzimuthRotator7.ar, auto generated by SCNvim" }, {t("HOAAzimuthRotator7.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("azimuth:"),i(65, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator7.kr", name = "HOAAzimuthRotator7.kr", dscr = "Snippet for HOAAzimuthRotator7.kr, auto generated by SCNvim" }, {t("HOAAzimuthRotator7.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("azimuth:"),i(65, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator8.ar", name = "HOAAzimuthRotator8.ar", dscr = "Snippet for HOAAzimuthRotator8.ar, auto generated by SCNvim" }, {t("HOAAzimuthRotator8.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("azimuth:"),i(82, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator8.kr", name = "HOAAzimuthRotator8.kr", dscr = "Snippet for HOAAzimuthRotator8.kr, auto generated by SCNvim" }, {t("HOAAzimuthRotator8.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("azimuth:"),i(82, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator9.ar", name = "HOAAzimuthRotator9.ar", dscr = "Snippet for HOAAzimuthRotator9.ar, auto generated by SCNvim" }, {t("HOAAzimuthRotator9.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("azimuth:"),i(101, "0.0"), t(")"),}),
s( {trig = "HOAAzimuthRotator9.kr", name = "HOAAzimuthRotator9.kr", dscr = "Snippet for HOAAzimuthRotator9.kr, auto generated by SCNvim" }, {t("HOAAzimuthRotator9.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("azimuth:"),i(101, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA1.ar", name = "HOABeamDirac2HOA1.ar", dscr = "Snippet for HOABeamDirac2HOA1.ar, auto generated by SCNvim" }, {t("HOABeamDirac2HOA1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("on:"),i(5, "0.0"),t(", "), t("crossfade:"),i(6, "1.0"),t(", "), t("gain:"),i(7, "0.0"),t(", "), t("azimuth:"),i(8, "0.0"),t(", "), t("elevation:"),i(9, "0.0"),t(", "), t("timer_manual:"),i(10, "0.0"),t(", "), t("focus:"),i(11, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA1.kr", name = "HOABeamDirac2HOA1.kr", dscr = "Snippet for HOABeamDirac2HOA1.kr, auto generated by SCNvim" }, {t("HOABeamDirac2HOA1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("on:"),i(5, "0.0"),t(", "), t("crossfade:"),i(6, "1.0"),t(", "), t("gain:"),i(7, "0.0"),t(", "), t("azimuth:"),i(8, "0.0"),t(", "), t("elevation:"),i(9, "0.0"),t(", "), t("timer_manual:"),i(10, "0.0"),t(", "), t("focus:"),i(11, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA10.ar", name = "HOABeamDirac2HOA10.ar", dscr = "Snippet for HOABeamDirac2HOA10.ar, auto generated by SCNvim" }, {t("HOABeamDirac2HOA10.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("in101:"),i(101, "nil"),t(", "), t("in102:"),i(102, "nil"),t(", "), t("in103:"),i(103, "nil"),t(", "), t("in104:"),i(104, "nil"),t(", "), t("in105:"),i(105, "nil"),t(", "), t("in106:"),i(106, "nil"),t(", "), t("in107:"),i(107, "nil"),t(", "), t("in108:"),i(108, "nil"),t(", "), t("in109:"),i(109, "nil"),t(", "), t("in110:"),i(110, "nil"),t(", "), t("in111:"),i(111, "nil"),t(", "), t("in112:"),i(112, "nil"),t(", "), t("in113:"),i(113, "nil"),t(", "), t("in114:"),i(114, "nil"),t(", "), t("in115:"),i(115, "nil"),t(", "), t("in116:"),i(116, "nil"),t(", "), t("in117:"),i(117, "nil"),t(", "), t("in118:"),i(118, "nil"),t(", "), t("in119:"),i(119, "nil"),t(", "), t("in120:"),i(120, "nil"),t(", "), t("in121:"),i(121, "nil"),t(", "), t("on:"),i(122, "0.0"),t(", "), t("crossfade:"),i(123, "1.0"),t(", "), t("gain:"),i(124, "0.0"),t(", "), t("azimuth:"),i(125, "0.0"),t(", "), t("elevation:"),i(126, "0.0"),t(", "), t("timer_manual:"),i(127, "0.0"),t(", "), t("focus:"),i(128, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA10.kr", name = "HOABeamDirac2HOA10.kr", dscr = "Snippet for HOABeamDirac2HOA10.kr, auto generated by SCNvim" }, {t("HOABeamDirac2HOA10.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("in101:"),i(101, "nil"),t(", "), t("in102:"),i(102, "nil"),t(", "), t("in103:"),i(103, "nil"),t(", "), t("in104:"),i(104, "nil"),t(", "), t("in105:"),i(105, "nil"),t(", "), t("in106:"),i(106, "nil"),t(", "), t("in107:"),i(107, "nil"),t(", "), t("in108:"),i(108, "nil"),t(", "), t("in109:"),i(109, "nil"),t(", "), t("in110:"),i(110, "nil"),t(", "), t("in111:"),i(111, "nil"),t(", "), t("in112:"),i(112, "nil"),t(", "), t("in113:"),i(113, "nil"),t(", "), t("in114:"),i(114, "nil"),t(", "), t("in115:"),i(115, "nil"),t(", "), t("in116:"),i(116, "nil"),t(", "), t("in117:"),i(117, "nil"),t(", "), t("in118:"),i(118, "nil"),t(", "), t("in119:"),i(119, "nil"),t(", "), t("in120:"),i(120, "nil"),t(", "), t("in121:"),i(121, "nil"),t(", "), t("on:"),i(122, "0.0"),t(", "), t("crossfade:"),i(123, "1.0"),t(", "), t("gain:"),i(124, "0.0"),t(", "), t("azimuth:"),i(125, "0.0"),t(", "), t("elevation:"),i(126, "0.0"),t(", "), t("timer_manual:"),i(127, "0.0"),t(", "), t("focus:"),i(128, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA2.ar", name = "HOABeamDirac2HOA2.ar", dscr = "Snippet for HOABeamDirac2HOA2.ar, auto generated by SCNvim" }, {t("HOABeamDirac2HOA2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("on:"),i(10, "0.0"),t(", "), t("crossfade:"),i(11, "1.0"),t(", "), t("gain:"),i(12, "0.0"),t(", "), t("azimuth:"),i(13, "0.0"),t(", "), t("elevation:"),i(14, "0.0"),t(", "), t("timer_manual:"),i(15, "0.0"),t(", "), t("focus:"),i(16, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA2.kr", name = "HOABeamDirac2HOA2.kr", dscr = "Snippet for HOABeamDirac2HOA2.kr, auto generated by SCNvim" }, {t("HOABeamDirac2HOA2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("on:"),i(10, "0.0"),t(", "), t("crossfade:"),i(11, "1.0"),t(", "), t("gain:"),i(12, "0.0"),t(", "), t("azimuth:"),i(13, "0.0"),t(", "), t("elevation:"),i(14, "0.0"),t(", "), t("timer_manual:"),i(15, "0.0"),t(", "), t("focus:"),i(16, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA3.ar", name = "HOABeamDirac2HOA3.ar", dscr = "Snippet for HOABeamDirac2HOA3.ar, auto generated by SCNvim" }, {t("HOABeamDirac2HOA3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("on:"),i(17, "0.0"),t(", "), t("crossfade:"),i(18, "1.0"),t(", "), t("gain:"),i(19, "0.0"),t(", "), t("azimuth:"),i(20, "0.0"),t(", "), t("elevation:"),i(21, "0.0"),t(", "), t("timer_manual:"),i(22, "0.0"),t(", "), t("focus:"),i(23, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA3.kr", name = "HOABeamDirac2HOA3.kr", dscr = "Snippet for HOABeamDirac2HOA3.kr, auto generated by SCNvim" }, {t("HOABeamDirac2HOA3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("on:"),i(17, "0.0"),t(", "), t("crossfade:"),i(18, "1.0"),t(", "), t("gain:"),i(19, "0.0"),t(", "), t("azimuth:"),i(20, "0.0"),t(", "), t("elevation:"),i(21, "0.0"),t(", "), t("timer_manual:"),i(22, "0.0"),t(", "), t("focus:"),i(23, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA4.ar", name = "HOABeamDirac2HOA4.ar", dscr = "Snippet for HOABeamDirac2HOA4.ar, auto generated by SCNvim" }, {t("HOABeamDirac2HOA4.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("on:"),i(26, "0.0"),t(", "), t("crossfade:"),i(27, "1.0"),t(", "), t("gain:"),i(28, "0.0"),t(", "), t("azimuth:"),i(29, "0.0"),t(", "), t("elevation:"),i(30, "0.0"),t(", "), t("timer_manual:"),i(31, "0.0"),t(", "), t("focus:"),i(32, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA4.kr", name = "HOABeamDirac2HOA4.kr", dscr = "Snippet for HOABeamDirac2HOA4.kr, auto generated by SCNvim" }, {t("HOABeamDirac2HOA4.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("on:"),i(26, "0.0"),t(", "), t("crossfade:"),i(27, "1.0"),t(", "), t("gain:"),i(28, "0.0"),t(", "), t("azimuth:"),i(29, "0.0"),t(", "), t("elevation:"),i(30, "0.0"),t(", "), t("timer_manual:"),i(31, "0.0"),t(", "), t("focus:"),i(32, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA5.ar", name = "HOABeamDirac2HOA5.ar", dscr = "Snippet for HOABeamDirac2HOA5.ar, auto generated by SCNvim" }, {t("HOABeamDirac2HOA5.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("on:"),i(37, "0.0"),t(", "), t("crossfade:"),i(38, "1.0"),t(", "), t("gain:"),i(39, "0.0"),t(", "), t("azimuth:"),i(40, "0.0"),t(", "), t("elevation:"),i(41, "0.0"),t(", "), t("timer_manual:"),i(42, "0.0"),t(", "), t("focus:"),i(43, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA5.kr", name = "HOABeamDirac2HOA5.kr", dscr = "Snippet for HOABeamDirac2HOA5.kr, auto generated by SCNvim" }, {t("HOABeamDirac2HOA5.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("on:"),i(37, "0.0"),t(", "), t("crossfade:"),i(38, "1.0"),t(", "), t("gain:"),i(39, "0.0"),t(", "), t("azimuth:"),i(40, "0.0"),t(", "), t("elevation:"),i(41, "0.0"),t(", "), t("timer_manual:"),i(42, "0.0"),t(", "), t("focus:"),i(43, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA6.ar", name = "HOABeamDirac2HOA6.ar", dscr = "Snippet for HOABeamDirac2HOA6.ar, auto generated by SCNvim" }, {t("HOABeamDirac2HOA6.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("on:"),i(50, "0.0"),t(", "), t("crossfade:"),i(51, "1.0"),t(", "), t("gain:"),i(52, "0.0"),t(", "), t("azimuth:"),i(53, "0.0"),t(", "), t("elevation:"),i(54, "0.0"),t(", "), t("timer_manual:"),i(55, "0.0"),t(", "), t("focus:"),i(56, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA6.kr", name = "HOABeamDirac2HOA6.kr", dscr = "Snippet for HOABeamDirac2HOA6.kr, auto generated by SCNvim" }, {t("HOABeamDirac2HOA6.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("on:"),i(50, "0.0"),t(", "), t("crossfade:"),i(51, "1.0"),t(", "), t("gain:"),i(52, "0.0"),t(", "), t("azimuth:"),i(53, "0.0"),t(", "), t("elevation:"),i(54, "0.0"),t(", "), t("timer_manual:"),i(55, "0.0"),t(", "), t("focus:"),i(56, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA7.ar", name = "HOABeamDirac2HOA7.ar", dscr = "Snippet for HOABeamDirac2HOA7.ar, auto generated by SCNvim" }, {t("HOABeamDirac2HOA7.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("on:"),i(65, "0.0"),t(", "), t("crossfade:"),i(66, "1.0"),t(", "), t("gain:"),i(67, "0.0"),t(", "), t("azimuth:"),i(68, "0.0"),t(", "), t("elevation:"),i(69, "0.0"),t(", "), t("timer_manual:"),i(70, "0.0"),t(", "), t("focus:"),i(71, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA7.kr", name = "HOABeamDirac2HOA7.kr", dscr = "Snippet for HOABeamDirac2HOA7.kr, auto generated by SCNvim" }, {t("HOABeamDirac2HOA7.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("on:"),i(65, "0.0"),t(", "), t("crossfade:"),i(66, "1.0"),t(", "), t("gain:"),i(67, "0.0"),t(", "), t("azimuth:"),i(68, "0.0"),t(", "), t("elevation:"),i(69, "0.0"),t(", "), t("timer_manual:"),i(70, "0.0"),t(", "), t("focus:"),i(71, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA8.ar", name = "HOABeamDirac2HOA8.ar", dscr = "Snippet for HOABeamDirac2HOA8.ar, auto generated by SCNvim" }, {t("HOABeamDirac2HOA8.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("on:"),i(82, "0.0"),t(", "), t("crossfade:"),i(83, "1.0"),t(", "), t("gain:"),i(84, "0.0"),t(", "), t("azimuth:"),i(85, "0.0"),t(", "), t("elevation:"),i(86, "0.0"),t(", "), t("timer_manual:"),i(87, "0.0"),t(", "), t("focus:"),i(88, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA8.kr", name = "HOABeamDirac2HOA8.kr", dscr = "Snippet for HOABeamDirac2HOA8.kr, auto generated by SCNvim" }, {t("HOABeamDirac2HOA8.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("on:"),i(82, "0.0"),t(", "), t("crossfade:"),i(83, "1.0"),t(", "), t("gain:"),i(84, "0.0"),t(", "), t("azimuth:"),i(85, "0.0"),t(", "), t("elevation:"),i(86, "0.0"),t(", "), t("timer_manual:"),i(87, "0.0"),t(", "), t("focus:"),i(88, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA9.ar", name = "HOABeamDirac2HOA9.ar", dscr = "Snippet for HOABeamDirac2HOA9.ar, auto generated by SCNvim" }, {t("HOABeamDirac2HOA9.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("on:"),i(101, "0.0"),t(", "), t("crossfade:"),i(102, "1.0"),t(", "), t("gain:"),i(103, "0.0"),t(", "), t("azimuth:"),i(104, "0.0"),t(", "), t("elevation:"),i(105, "0.0"),t(", "), t("timer_manual:"),i(106, "0.0"),t(", "), t("focus:"),i(107, "0.0"), t(")"),}),
s( {trig = "HOABeamDirac2HOA9.kr", name = "HOABeamDirac2HOA9.kr", dscr = "Snippet for HOABeamDirac2HOA9.kr, auto generated by SCNvim" }, {t("HOABeamDirac2HOA9.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("on:"),i(101, "0.0"),t(", "), t("crossfade:"),i(102, "1.0"),t(", "), t("gain:"),i(103, "0.0"),t(", "), t("azimuth:"),i(104, "0.0"),t(", "), t("elevation:"),i(105, "0.0"),t(", "), t("timer_manual:"),i(106, "0.0"),t(", "), t("focus:"),i(107, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2HOA1.ar", name = "HOABeamHCardio2HOA1.ar", dscr = "Snippet for HOABeamHCardio2HOA1.ar, auto generated by SCNvim" }, {t("HOABeamHCardio2HOA1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("azimuth:"),i(5, "0.0"),t(", "), t("elevation:"),i(6, "0.0"),t(", "), t("int_float:"),i(7, "0.0"),t(", "), t("order:"),i(8, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2HOA1.kr", name = "HOABeamHCardio2HOA1.kr", dscr = "Snippet for HOABeamHCardio2HOA1.kr, auto generated by SCNvim" }, {t("HOABeamHCardio2HOA1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("azimuth:"),i(5, "0.0"),t(", "), t("elevation:"),i(6, "0.0"),t(", "), t("int_float:"),i(7, "0.0"),t(", "), t("order:"),i(8, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2HOA2.ar", name = "HOABeamHCardio2HOA2.ar", dscr = "Snippet for HOABeamHCardio2HOA2.ar, auto generated by SCNvim" }, {t("HOABeamHCardio2HOA2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("azimuth:"),i(10, "0.0"),t(", "), t("elevation:"),i(11, "0.0"),t(", "), t("int_float:"),i(12, "0.0"),t(", "), t("order:"),i(13, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2HOA2.kr", name = "HOABeamHCardio2HOA2.kr", dscr = "Snippet for HOABeamHCardio2HOA2.kr, auto generated by SCNvim" }, {t("HOABeamHCardio2HOA2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("azimuth:"),i(10, "0.0"),t(", "), t("elevation:"),i(11, "0.0"),t(", "), t("int_float:"),i(12, "0.0"),t(", "), t("order:"),i(13, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2HOA3.ar", name = "HOABeamHCardio2HOA3.ar", dscr = "Snippet for HOABeamHCardio2HOA3.ar, auto generated by SCNvim" }, {t("HOABeamHCardio2HOA3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("azimuth:"),i(17, "0.0"),t(", "), t("elevation:"),i(18, "0.0"),t(", "), t("int_float:"),i(19, "0.0"),t(", "), t("order:"),i(20, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2HOA3.kr", name = "HOABeamHCardio2HOA3.kr", dscr = "Snippet for HOABeamHCardio2HOA3.kr, auto generated by SCNvim" }, {t("HOABeamHCardio2HOA3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("azimuth:"),i(17, "0.0"),t(", "), t("elevation:"),i(18, "0.0"),t(", "), t("int_float:"),i(19, "0.0"),t(", "), t("order:"),i(20, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2Mono1.ar", name = "HOABeamHCardio2Mono1.ar", dscr = "Snippet for HOABeamHCardio2Mono1.ar, auto generated by SCNvim" }, {t("HOABeamHCardio2Mono1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("int_float:"),i(5, "0.0"),t(", "), t("order:"),i(6, "0.0"),t(", "), t("output_gain:"),i(7, "0.0"),t(", "), t("azimuth:"),i(8, "0.0"),t(", "), t("elevation:"),i(9, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2Mono1.kr", name = "HOABeamHCardio2Mono1.kr", dscr = "Snippet for HOABeamHCardio2Mono1.kr, auto generated by SCNvim" }, {t("HOABeamHCardio2Mono1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("int_float:"),i(5, "0.0"),t(", "), t("order:"),i(6, "0.0"),t(", "), t("output_gain:"),i(7, "0.0"),t(", "), t("azimuth:"),i(8, "0.0"),t(", "), t("elevation:"),i(9, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2Mono2.ar", name = "HOABeamHCardio2Mono2.ar", dscr = "Snippet for HOABeamHCardio2Mono2.ar, auto generated by SCNvim" }, {t("HOABeamHCardio2Mono2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("int_float:"),i(10, "0.0"),t(", "), t("order:"),i(11, "0.0"),t(", "), t("output_gain:"),i(12, "0.0"),t(", "), t("azimuth:"),i(13, "0.0"),t(", "), t("elevation:"),i(14, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2Mono2.kr", name = "HOABeamHCardio2Mono2.kr", dscr = "Snippet for HOABeamHCardio2Mono2.kr, auto generated by SCNvim" }, {t("HOABeamHCardio2Mono2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("int_float:"),i(10, "0.0"),t(", "), t("order:"),i(11, "0.0"),t(", "), t("output_gain:"),i(12, "0.0"),t(", "), t("azimuth:"),i(13, "0.0"),t(", "), t("elevation:"),i(14, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2Mono3.ar", name = "HOABeamHCardio2Mono3.ar", dscr = "Snippet for HOABeamHCardio2Mono3.ar, auto generated by SCNvim" }, {t("HOABeamHCardio2Mono3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("int_float:"),i(17, "0.0"),t(", "), t("order:"),i(18, "0.0"),t(", "), t("output_gain:"),i(19, "0.0"),t(", "), t("azimuth:"),i(20, "0.0"),t(", "), t("elevation:"),i(21, "0.0"), t(")"),}),
s( {trig = "HOABeamHCardio2Mono3.kr", name = "HOABeamHCardio2Mono3.kr", dscr = "Snippet for HOABeamHCardio2Mono3.kr, auto generated by SCNvim" }, {t("HOABeamHCardio2Mono3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("int_float:"),i(17, "0.0"),t(", "), t("order:"),i(18, "0.0"),t(", "), t("output_gain:"),i(19, "0.0"),t(", "), t("azimuth:"),i(20, "0.0"),t(", "), t("elevation:"),i(21, "0.0"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d1.ar", name = "HOAConverterAcnN3d2AcnSn3d1.ar", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d1.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d1.kr", name = "HOAConverterAcnN3d2AcnSn3d1.kr", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d1.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d10.ar", name = "HOAConverterAcnN3d2AcnSn3d10.ar", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d10.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d10.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("in101:"),i(101, "nil"),t(", "), t("in102:"),i(102, "nil"),t(", "), t("in103:"),i(103, "nil"),t(", "), t("in104:"),i(104, "nil"),t(", "), t("in105:"),i(105, "nil"),t(", "), t("in106:"),i(106, "nil"),t(", "), t("in107:"),i(107, "nil"),t(", "), t("in108:"),i(108, "nil"),t(", "), t("in109:"),i(109, "nil"),t(", "), t("in110:"),i(110, "nil"),t(", "), t("in111:"),i(111, "nil"),t(", "), t("in112:"),i(112, "nil"),t(", "), t("in113:"),i(113, "nil"),t(", "), t("in114:"),i(114, "nil"),t(", "), t("in115:"),i(115, "nil"),t(", "), t("in116:"),i(116, "nil"),t(", "), t("in117:"),i(117, "nil"),t(", "), t("in118:"),i(118, "nil"),t(", "), t("in119:"),i(119, "nil"),t(", "), t("in120:"),i(120, "nil"),t(", "), t("in121:"),i(121, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d10.kr", name = "HOAConverterAcnN3d2AcnSn3d10.kr", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d10.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d10.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("in101:"),i(101, "nil"),t(", "), t("in102:"),i(102, "nil"),t(", "), t("in103:"),i(103, "nil"),t(", "), t("in104:"),i(104, "nil"),t(", "), t("in105:"),i(105, "nil"),t(", "), t("in106:"),i(106, "nil"),t(", "), t("in107:"),i(107, "nil"),t(", "), t("in108:"),i(108, "nil"),t(", "), t("in109:"),i(109, "nil"),t(", "), t("in110:"),i(110, "nil"),t(", "), t("in111:"),i(111, "nil"),t(", "), t("in112:"),i(112, "nil"),t(", "), t("in113:"),i(113, "nil"),t(", "), t("in114:"),i(114, "nil"),t(", "), t("in115:"),i(115, "nil"),t(", "), t("in116:"),i(116, "nil"),t(", "), t("in117:"),i(117, "nil"),t(", "), t("in118:"),i(118, "nil"),t(", "), t("in119:"),i(119, "nil"),t(", "), t("in120:"),i(120, "nil"),t(", "), t("in121:"),i(121, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d2.ar", name = "HOAConverterAcnN3d2AcnSn3d2.ar", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d2.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d2.kr", name = "HOAConverterAcnN3d2AcnSn3d2.kr", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d2.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d3.ar", name = "HOAConverterAcnN3d2AcnSn3d3.ar", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d3.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d3.kr", name = "HOAConverterAcnN3d2AcnSn3d3.kr", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d3.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d4.ar", name = "HOAConverterAcnN3d2AcnSn3d4.ar", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d4.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d4.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d4.kr", name = "HOAConverterAcnN3d2AcnSn3d4.kr", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d4.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d4.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d5.ar", name = "HOAConverterAcnN3d2AcnSn3d5.ar", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d5.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d5.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d5.kr", name = "HOAConverterAcnN3d2AcnSn3d5.kr", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d5.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d5.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d6.ar", name = "HOAConverterAcnN3d2AcnSn3d6.ar", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d6.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d6.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d6.kr", name = "HOAConverterAcnN3d2AcnSn3d6.kr", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d6.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d6.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d7.ar", name = "HOAConverterAcnN3d2AcnSn3d7.ar", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d7.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d7.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d7.kr", name = "HOAConverterAcnN3d2AcnSn3d7.kr", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d7.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d7.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d8.ar", name = "HOAConverterAcnN3d2AcnSn3d8.ar", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d8.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d8.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d8.kr", name = "HOAConverterAcnN3d2AcnSn3d8.kr", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d8.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d8.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d9.ar", name = "HOAConverterAcnN3d2AcnSn3d9.ar", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d9.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d9.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2AcnSn3d9.kr", name = "HOAConverterAcnN3d2AcnSn3d9.kr", dscr = "Snippet for HOAConverterAcnN3d2AcnSn3d9.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2AcnSn3d9.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2FuMa1.ar", name = "HOAConverterAcnN3d2FuMa1.ar", dscr = "Snippet for HOAConverterAcnN3d2FuMa1.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2FuMa1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2FuMa1.kr", name = "HOAConverterAcnN3d2FuMa1.kr", dscr = "Snippet for HOAConverterAcnN3d2FuMa1.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2FuMa1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2FuMa2.ar", name = "HOAConverterAcnN3d2FuMa2.ar", dscr = "Snippet for HOAConverterAcnN3d2FuMa2.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2FuMa2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2FuMa2.kr", name = "HOAConverterAcnN3d2FuMa2.kr", dscr = "Snippet for HOAConverterAcnN3d2FuMa2.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2FuMa2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2FuMa3.ar", name = "HOAConverterAcnN3d2FuMa3.ar", dscr = "Snippet for HOAConverterAcnN3d2FuMa3.ar, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2FuMa3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnN3d2FuMa3.kr", name = "HOAConverterAcnN3d2FuMa3.kr", dscr = "Snippet for HOAConverterAcnN3d2FuMa3.kr, auto generated by SCNvim" }, {t("HOAConverterAcnN3d2FuMa3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnSn3d2FuMa1.ar", name = "HOAConverterAcnSn3d2FuMa1.ar", dscr = "Snippet for HOAConverterAcnSn3d2FuMa1.ar, auto generated by SCNvim" }, {t("HOAConverterAcnSn3d2FuMa1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnSn3d2FuMa1.kr", name = "HOAConverterAcnSn3d2FuMa1.kr", dscr = "Snippet for HOAConverterAcnSn3d2FuMa1.kr, auto generated by SCNvim" }, {t("HOAConverterAcnSn3d2FuMa1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnSn3d2FuMa2.ar", name = "HOAConverterAcnSn3d2FuMa2.ar", dscr = "Snippet for HOAConverterAcnSn3d2FuMa2.ar, auto generated by SCNvim" }, {t("HOAConverterAcnSn3d2FuMa2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnSn3d2FuMa2.kr", name = "HOAConverterAcnSn3d2FuMa2.kr", dscr = "Snippet for HOAConverterAcnSn3d2FuMa2.kr, auto generated by SCNvim" }, {t("HOAConverterAcnSn3d2FuMa2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnSn3d2FuMa3.ar", name = "HOAConverterAcnSn3d2FuMa3.ar", dscr = "Snippet for HOAConverterAcnSn3d2FuMa3.ar, auto generated by SCNvim" }, {t("HOAConverterAcnSn3d2FuMa3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"), t(")"),}),
s( {trig = "HOAConverterAcnSn3d2FuMa3.kr", name = "HOAConverterAcnSn3d2FuMa3.kr", dscr = "Snippet for HOAConverterAcnSn3d2FuMa3.kr, auto generated by SCNvim" }, {t("HOAConverterAcnSn3d2FuMa3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnN3d1.ar", name = "HOAConverterFuma2AcnN3d1.ar", dscr = "Snippet for HOAConverterFuma2AcnN3d1.ar, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnN3d1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnN3d1.kr", name = "HOAConverterFuma2AcnN3d1.kr", dscr = "Snippet for HOAConverterFuma2AcnN3d1.kr, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnN3d1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnN3d2.ar", name = "HOAConverterFuma2AcnN3d2.ar", dscr = "Snippet for HOAConverterFuma2AcnN3d2.ar, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnN3d2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnN3d2.kr", name = "HOAConverterFuma2AcnN3d2.kr", dscr = "Snippet for HOAConverterFuma2AcnN3d2.kr, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnN3d2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnN3d3.ar", name = "HOAConverterFuma2AcnN3d3.ar", dscr = "Snippet for HOAConverterFuma2AcnN3d3.ar, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnN3d3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnN3d3.kr", name = "HOAConverterFuma2AcnN3d3.kr", dscr = "Snippet for HOAConverterFuma2AcnN3d3.kr, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnN3d3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnSn3d1.ar", name = "HOAConverterFuma2AcnSn3d1.ar", dscr = "Snippet for HOAConverterFuma2AcnSn3d1.ar, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnSn3d1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnSn3d1.kr", name = "HOAConverterFuma2AcnSn3d1.kr", dscr = "Snippet for HOAConverterFuma2AcnSn3d1.kr, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnSn3d1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnSn3d2.ar", name = "HOAConverterFuma2AcnSn3d2.ar", dscr = "Snippet for HOAConverterFuma2AcnSn3d2.ar, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnSn3d2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnSn3d2.kr", name = "HOAConverterFuma2AcnSn3d2.kr", dscr = "Snippet for HOAConverterFuma2AcnSn3d2.kr, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnSn3d2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnSn3d3.ar", name = "HOAConverterFuma2AcnSn3d3.ar", dscr = "Snippet for HOAConverterFuma2AcnSn3d3.ar, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnSn3d3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"), t(")"),}),
s( {trig = "HOAConverterFuma2AcnSn3d3.kr", name = "HOAConverterFuma2AcnSn3d3.kr", dscr = "Snippet for HOAConverterFuma2AcnSn3d3.kr, auto generated by SCNvim" }, {t("HOAConverterFuma2AcnSn3d3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"), t(")"),}),
s( {trig = "HOADecBinaural1.ar", name = "HOADecBinaural1.ar", dscr = "Snippet for HOADecBinaural1.ar, auto generated by SCNvim" }, {t("HOADecBinaural1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("inputs_gain:"),i(5, "0.0"),t(", "), t("outputs_gain:"),i(6, "0.0"), t(")"),}),
s( {trig = "HOADecBinaural1.kr", name = "HOADecBinaural1.kr", dscr = "Snippet for HOADecBinaural1.kr, auto generated by SCNvim" }, {t("HOADecBinaural1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("inputs_gain:"),i(5, "0.0"),t(", "), t("outputs_gain:"),i(6, "0.0"), t(")"),}),
s( {trig = "HOADecBinaural2.ar", name = "HOADecBinaural2.ar", dscr = "Snippet for HOADecBinaural2.ar, auto generated by SCNvim" }, {t("HOADecBinaural2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("inputs_gain:"),i(10, "0.0"),t(", "), t("outputs_gain:"),i(11, "0.0"), t(")"),}),
s( {trig = "HOADecBinaural2.kr", name = "HOADecBinaural2.kr", dscr = "Snippet for HOADecBinaural2.kr, auto generated by SCNvim" }, {t("HOADecBinaural2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("inputs_gain:"),i(10, "0.0"),t(", "), t("outputs_gain:"),i(11, "0.0"), t(")"),}),
s( {trig = "HOADecLebedev061.ar", name = "HOADecLebedev061.ar", dscr = "Snippet for HOADecLebedev061.ar, auto generated by SCNvim" }, {t("HOADecLebedev061.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("inputs_gain:"),i(5, "0.0"),t(", "), t("outputs_gain:"),i(6, "0.0"),t(", "), t("yes:"),i(7, "0.0"),t(", "), t("speakers_radius:"),i(8, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev061.kr", name = "HOADecLebedev061.kr", dscr = "Snippet for HOADecLebedev061.kr, auto generated by SCNvim" }, {t("HOADecLebedev061.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("inputs_gain:"),i(5, "0.0"),t(", "), t("outputs_gain:"),i(6, "0.0"),t(", "), t("yes:"),i(7, "0.0"),t(", "), t("speakers_radius:"),i(8, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev261.ar", name = "HOADecLebedev261.ar", dscr = "Snippet for HOADecLebedev261.ar, auto generated by SCNvim" }, {t("HOADecLebedev261.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("inputs_gain:"),i(5, "0.0"),t(", "), t("outputs_gain:"),i(6, "0.0"),t(", "), t("yes:"),i(7, "0.0"),t(", "), t("speakers_radius:"),i(8, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev261.kr", name = "HOADecLebedev261.kr", dscr = "Snippet for HOADecLebedev261.kr, auto generated by SCNvim" }, {t("HOADecLebedev261.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("inputs_gain:"),i(5, "0.0"),t(", "), t("outputs_gain:"),i(6, "0.0"),t(", "), t("yes:"),i(7, "0.0"),t(", "), t("speakers_radius:"),i(8, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev262.ar", name = "HOADecLebedev262.ar", dscr = "Snippet for HOADecLebedev262.ar, auto generated by SCNvim" }, {t("HOADecLebedev262.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("inputs_gain:"),i(10, "0.0"),t(", "), t("outputs_gain:"),i(11, "0.0"),t(", "), t("yes:"),i(12, "0.0"),t(", "), t("speakers_radius:"),i(13, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev262.kr", name = "HOADecLebedev262.kr", dscr = "Snippet for HOADecLebedev262.kr, auto generated by SCNvim" }, {t("HOADecLebedev262.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("inputs_gain:"),i(10, "0.0"),t(", "), t("outputs_gain:"),i(11, "0.0"),t(", "), t("yes:"),i(12, "0.0"),t(", "), t("speakers_radius:"),i(13, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev263.ar", name = "HOADecLebedev263.ar", dscr = "Snippet for HOADecLebedev263.ar, auto generated by SCNvim" }, {t("HOADecLebedev263.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("inputs_gain:"),i(17, "0.0"),t(", "), t("outputs_gain:"),i(18, "0.0"),t(", "), t("yes:"),i(19, "0.0"),t(", "), t("speakers_radius:"),i(20, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev263.kr", name = "HOADecLebedev263.kr", dscr = "Snippet for HOADecLebedev263.kr, auto generated by SCNvim" }, {t("HOADecLebedev263.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("inputs_gain:"),i(17, "0.0"),t(", "), t("outputs_gain:"),i(18, "0.0"),t(", "), t("yes:"),i(19, "0.0"),t(", "), t("speakers_radius:"),i(20, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev501.ar", name = "HOADecLebedev501.ar", dscr = "Snippet for HOADecLebedev501.ar, auto generated by SCNvim" }, {t("HOADecLebedev501.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("inputs_gain:"),i(5, "0.0"),t(", "), t("outputs_gain:"),i(6, "0.0"),t(", "), t("yes:"),i(7, "0.0"),t(", "), t("speakers_radius:"),i(8, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev501.kr", name = "HOADecLebedev501.kr", dscr = "Snippet for HOADecLebedev501.kr, auto generated by SCNvim" }, {t("HOADecLebedev501.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("inputs_gain:"),i(5, "0.0"),t(", "), t("outputs_gain:"),i(6, "0.0"),t(", "), t("yes:"),i(7, "0.0"),t(", "), t("speakers_radius:"),i(8, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev502.ar", name = "HOADecLebedev502.ar", dscr = "Snippet for HOADecLebedev502.ar, auto generated by SCNvim" }, {t("HOADecLebedev502.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("inputs_gain:"),i(10, "0.0"),t(", "), t("outputs_gain:"),i(11, "0.0"),t(", "), t("yes:"),i(12, "0.0"),t(", "), t("speakers_radius:"),i(13, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev502.kr", name = "HOADecLebedev502.kr", dscr = "Snippet for HOADecLebedev502.kr, auto generated by SCNvim" }, {t("HOADecLebedev502.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("inputs_gain:"),i(10, "0.0"),t(", "), t("outputs_gain:"),i(11, "0.0"),t(", "), t("yes:"),i(12, "0.0"),t(", "), t("speakers_radius:"),i(13, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev503.ar", name = "HOADecLebedev503.ar", dscr = "Snippet for HOADecLebedev503.ar, auto generated by SCNvim" }, {t("HOADecLebedev503.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("inputs_gain:"),i(17, "0.0"),t(", "), t("outputs_gain:"),i(18, "0.0"),t(", "), t("yes:"),i(19, "0.0"),t(", "), t("speakers_radius:"),i(20, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev503.kr", name = "HOADecLebedev503.kr", dscr = "Snippet for HOADecLebedev503.kr, auto generated by SCNvim" }, {t("HOADecLebedev503.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("inputs_gain:"),i(17, "0.0"),t(", "), t("outputs_gain:"),i(18, "0.0"),t(", "), t("yes:"),i(19, "0.0"),t(", "), t("speakers_radius:"),i(20, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev504.ar", name = "HOADecLebedev504.ar", dscr = "Snippet for HOADecLebedev504.ar, auto generated by SCNvim" }, {t("HOADecLebedev504.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("inputs_gain:"),i(26, "0.0"),t(", "), t("outputs_gain:"),i(27, "0.0"),t(", "), t("yes:"),i(28, "0.0"),t(", "), t("speakers_radius:"),i(29, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev504.kr", name = "HOADecLebedev504.kr", dscr = "Snippet for HOADecLebedev504.kr, auto generated by SCNvim" }, {t("HOADecLebedev504.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("inputs_gain:"),i(26, "0.0"),t(", "), t("outputs_gain:"),i(27, "0.0"),t(", "), t("yes:"),i(28, "0.0"),t(", "), t("speakers_radius:"),i(29, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev505.ar", name = "HOADecLebedev505.ar", dscr = "Snippet for HOADecLebedev505.ar, auto generated by SCNvim" }, {t("HOADecLebedev505.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("inputs_gain:"),i(37, "0.0"),t(", "), t("outputs_gain:"),i(38, "0.0"),t(", "), t("yes:"),i(39, "0.0"),t(", "), t("speakers_radius:"),i(40, "1.07"), t(")"),}),
s( {trig = "HOADecLebedev505.kr", name = "HOADecLebedev505.kr", dscr = "Snippet for HOADecLebedev505.kr, auto generated by SCNvim" }, {t("HOADecLebedev505.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("inputs_gain:"),i(37, "0.0"),t(", "), t("outputs_gain:"),i(38, "0.0"),t(", "), t("yes:"),i(39, "0.0"),t(", "), t("speakers_radius:"),i(40, "1.07"), t(")"),}),
s( {trig = "HOAEncEigenMike1.ar", name = "HOAEncEigenMike1.ar", dscr = "Snippet for HOAEncEigenMike1.ar, auto generated by SCNvim" }, {t("HOAEncEigenMike1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("gain:"),i(27, "0.0"), t(")"),}),
s( {trig = "HOAEncEigenMike1.kr", name = "HOAEncEigenMike1.kr", dscr = "Snippet for HOAEncEigenMike1.kr, auto generated by SCNvim" }, {t("HOAEncEigenMike1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("gain:"),i(27, "0.0"), t(")"),}),
s( {trig = "HOAEncEigenMike2.ar", name = "HOAEncEigenMike2.ar", dscr = "Snippet for HOAEncEigenMike2.ar, auto generated by SCNvim" }, {t("HOAEncEigenMike2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("gain:"),i(27, "0.0"), t(")"),}),
s( {trig = "HOAEncEigenMike2.kr", name = "HOAEncEigenMike2.kr", dscr = "Snippet for HOAEncEigenMike2.kr, auto generated by SCNvim" }, {t("HOAEncEigenMike2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("gain:"),i(27, "0.0"), t(")"),}),
s( {trig = "HOAEncEigenMike3.ar", name = "HOAEncEigenMike3.ar", dscr = "Snippet for HOAEncEigenMike3.ar, auto generated by SCNvim" }, {t("HOAEncEigenMike3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("gain:"),i(27, "0.0"), t(")"),}),
s( {trig = "HOAEncEigenMike3.kr", name = "HOAEncEigenMike3.kr", dscr = "Snippet for HOAEncEigenMike3.kr, auto generated by SCNvim" }, {t("HOAEncEigenMike3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("gain:"),i(27, "0.0"), t(")"),}),
s( {trig = "HOAEncEigenMike4.ar", name = "HOAEncEigenMike4.ar", dscr = "Snippet for HOAEncEigenMike4.ar, auto generated by SCNvim" }, {t("HOAEncEigenMike4.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("gain:"),i(33, "0.0"), t(")"),}),
s( {trig = "HOAEncEigenMike4.kr", name = "HOAEncEigenMike4.kr", dscr = "Snippet for HOAEncEigenMike4.kr, auto generated by SCNvim" }, {t("HOAEncEigenMike4.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("gain:"),i(33, "0.0"), t(")"),}),
s( {trig = "HOAEncLebedev501.ar", name = "HOAEncLebedev501.ar", dscr = "Snippet for HOAEncLebedev501.ar, auto generated by SCNvim" }, {t("HOAEncLebedev501.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("gain:"),i(51, "0.0"), t(")"),}),
s( {trig = "HOAEncLebedev501.kr", name = "HOAEncLebedev501.kr", dscr = "Snippet for HOAEncLebedev501.kr, auto generated by SCNvim" }, {t("HOAEncLebedev501.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("gain:"),i(51, "0.0"), t(")"),}),
s( {trig = "HOAEncLebedev502.ar", name = "HOAEncLebedev502.ar", dscr = "Snippet for HOAEncLebedev502.ar, auto generated by SCNvim" }, {t("HOAEncLebedev502.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("gain:"),i(51, "0.0"), t(")"),}),
s( {trig = "HOAEncLebedev502.kr", name = "HOAEncLebedev502.kr", dscr = "Snippet for HOAEncLebedev502.kr, auto generated by SCNvim" }, {t("HOAEncLebedev502.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("gain:"),i(51, "0.0"), t(")"),}),
s( {trig = "HOAEncLebedev503.ar", name = "HOAEncLebedev503.ar", dscr = "Snippet for HOAEncLebedev503.ar, auto generated by SCNvim" }, {t("HOAEncLebedev503.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("gain:"),i(51, "0.0"), t(")"),}),
s( {trig = "HOAEncLebedev503.kr", name = "HOAEncLebedev503.kr", dscr = "Snippet for HOAEncLebedev503.kr, auto generated by SCNvim" }, {t("HOAEncLebedev503.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("gain:"),i(51, "0.0"), t(")"),}),
s( {trig = "HOAEncLebedev504.ar", name = "HOAEncLebedev504.ar", dscr = "Snippet for HOAEncLebedev504.ar, auto generated by SCNvim" }, {t("HOAEncLebedev504.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("gain:"),i(51, "0.0"), t(")"),}),
s( {trig = "HOAEncLebedev504.kr", name = "HOAEncLebedev504.kr", dscr = "Snippet for HOAEncLebedev504.kr, auto generated by SCNvim" }, {t("HOAEncLebedev504.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("gain:"),i(51, "0.0"), t(")"),}),
s( {trig = "HOAEncLebedev505.ar", name = "HOAEncLebedev505.ar", dscr = "Snippet for HOAEncLebedev505.ar, auto generated by SCNvim" }, {t("HOAEncLebedev505.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("gain:"),i(51, "0.0"), t(")"),}),
s( {trig = "HOAEncLebedev505.kr", name = "HOAEncLebedev505.kr", dscr = "Snippet for HOAEncLebedev505.kr, auto generated by SCNvim" }, {t("HOAEncLebedev505.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("gain:"),i(51, "0.0"), t(")"),}),
s( {trig = "HOAEncoder1.ar", name = "HOAEncoder1.ar", dscr = "Snippet for HOAEncoder1.ar, auto generated by SCNvim" }, {t("HOAEncoder1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("speaker_radius_0:"),i(7, "1.07"), t(")"),}),
s( {trig = "HOAEncoder1.kr", name = "HOAEncoder1.kr", dscr = "Snippet for HOAEncoder1.kr, auto generated by SCNvim" }, {t("HOAEncoder1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("speaker_radius_0:"),i(7, "1.07"), t(")"),}),
s( {trig = "HOAEncoder2.ar", name = "HOAEncoder2.ar", dscr = "Snippet for HOAEncoder2.ar, auto generated by SCNvim" }, {t("HOAEncoder2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("speaker_radius_0:"),i(7, "1.07"), t(")"),}),
s( {trig = "HOAEncoder2.kr", name = "HOAEncoder2.kr", dscr = "Snippet for HOAEncoder2.kr, auto generated by SCNvim" }, {t("HOAEncoder2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("speaker_radius_0:"),i(7, "1.07"), t(")"),}),
s( {trig = "HOAEncoder3.ar", name = "HOAEncoder3.ar", dscr = "Snippet for HOAEncoder3.ar, auto generated by SCNvim" }, {t("HOAEncoder3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("speaker_radius_0:"),i(7, "1.07"), t(")"),}),
s( {trig = "HOAEncoder3.kr", name = "HOAEncoder3.kr", dscr = "Snippet for HOAEncoder3.kr, auto generated by SCNvim" }, {t("HOAEncoder3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("speaker_radius_0:"),i(7, "1.07"), t(")"),}),
s( {trig = "HOAEncoder4.ar", name = "HOAEncoder4.ar", dscr = "Snippet for HOAEncoder4.ar, auto generated by SCNvim" }, {t("HOAEncoder4.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("speaker_radius_0:"),i(7, "1.07"), t(")"),}),
s( {trig = "HOAEncoder4.kr", name = "HOAEncoder4.kr", dscr = "Snippet for HOAEncoder4.kr, auto generated by SCNvim" }, {t("HOAEncoder4.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("speaker_radius_0:"),i(7, "1.07"), t(")"),}),
s( {trig = "HOAEncoder5.ar", name = "HOAEncoder5.ar", dscr = "Snippet for HOAEncoder5.ar, auto generated by SCNvim" }, {t("HOAEncoder5.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("speaker_radius_0:"),i(7, "1.07"), t(")"),}),
s( {trig = "HOAEncoder5.kr", name = "HOAEncoder5.kr", dscr = "Snippet for HOAEncoder5.kr, auto generated by SCNvim" }, {t("HOAEncoder5.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("speaker_radius_0:"),i(7, "1.07"), t(")"),}),
s( {trig = "HOAMirror1.ar", name = "HOAMirror1.ar", dscr = "Snippet for HOAMirror1.ar, auto generated by SCNvim" }, {t("HOAMirror1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("front_back:"),i(5, "0.0"),t(", "), t("left_right:"),i(6, "0.0"),t(", "), t("up_down:"),i(7, "0.0"), t(")"),}),
s( {trig = "HOAMirror1.kr", name = "HOAMirror1.kr", dscr = "Snippet for HOAMirror1.kr, auto generated by SCNvim" }, {t("HOAMirror1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("front_back:"),i(5, "0.0"),t(", "), t("left_right:"),i(6, "0.0"),t(", "), t("up_down:"),i(7, "0.0"), t(")"),}),
s( {trig = "HOAMirror10.ar", name = "HOAMirror10.ar", dscr = "Snippet for HOAMirror10.ar, auto generated by SCNvim" }, {t("HOAMirror10.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("in101:"),i(101, "nil"),t(", "), t("in102:"),i(102, "nil"),t(", "), t("in103:"),i(103, "nil"),t(", "), t("in104:"),i(104, "nil"),t(", "), t("in105:"),i(105, "nil"),t(", "), t("in106:"),i(106, "nil"),t(", "), t("in107:"),i(107, "nil"),t(", "), t("in108:"),i(108, "nil"),t(", "), t("in109:"),i(109, "nil"),t(", "), t("in110:"),i(110, "nil"),t(", "), t("in111:"),i(111, "nil"),t(", "), t("in112:"),i(112, "nil"),t(", "), t("in113:"),i(113, "nil"),t(", "), t("in114:"),i(114, "nil"),t(", "), t("in115:"),i(115, "nil"),t(", "), t("in116:"),i(116, "nil"),t(", "), t("in117:"),i(117, "nil"),t(", "), t("in118:"),i(118, "nil"),t(", "), t("in119:"),i(119, "nil"),t(", "), t("in120:"),i(120, "nil"),t(", "), t("in121:"),i(121, "nil"),t(", "), t("front_back:"),i(122, "0.0"),t(", "), t("left_right:"),i(123, "0.0"),t(", "), t("up_down:"),i(124, "0.0"), t(")"),}),
s( {trig = "HOAMirror10.kr", name = "HOAMirror10.kr", dscr = "Snippet for HOAMirror10.kr, auto generated by SCNvim" }, {t("HOAMirror10.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("in101:"),i(101, "nil"),t(", "), t("in102:"),i(102, "nil"),t(", "), t("in103:"),i(103, "nil"),t(", "), t("in104:"),i(104, "nil"),t(", "), t("in105:"),i(105, "nil"),t(", "), t("in106:"),i(106, "nil"),t(", "), t("in107:"),i(107, "nil"),t(", "), t("in108:"),i(108, "nil"),t(", "), t("in109:"),i(109, "nil"),t(", "), t("in110:"),i(110, "nil"),t(", "), t("in111:"),i(111, "nil"),t(", "), t("in112:"),i(112, "nil"),t(", "), t("in113:"),i(113, "nil"),t(", "), t("in114:"),i(114, "nil"),t(", "), t("in115:"),i(115, "nil"),t(", "), t("in116:"),i(116, "nil"),t(", "), t("in117:"),i(117, "nil"),t(", "), t("in118:"),i(118, "nil"),t(", "), t("in119:"),i(119, "nil"),t(", "), t("in120:"),i(120, "nil"),t(", "), t("in121:"),i(121, "nil"),t(", "), t("front_back:"),i(122, "0.0"),t(", "), t("left_right:"),i(123, "0.0"),t(", "), t("up_down:"),i(124, "0.0"), t(")"),}),
s( {trig = "HOAMirror2.ar", name = "HOAMirror2.ar", dscr = "Snippet for HOAMirror2.ar, auto generated by SCNvim" }, {t("HOAMirror2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("front_back:"),i(10, "0.0"),t(", "), t("left_right:"),i(11, "0.0"),t(", "), t("up_down:"),i(12, "0.0"), t(")"),}),
s( {trig = "HOAMirror2.kr", name = "HOAMirror2.kr", dscr = "Snippet for HOAMirror2.kr, auto generated by SCNvim" }, {t("HOAMirror2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("front_back:"),i(10, "0.0"),t(", "), t("left_right:"),i(11, "0.0"),t(", "), t("up_down:"),i(12, "0.0"), t(")"),}),
s( {trig = "HOAMirror3.ar", name = "HOAMirror3.ar", dscr = "Snippet for HOAMirror3.ar, auto generated by SCNvim" }, {t("HOAMirror3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("front_back:"),i(17, "0.0"),t(", "), t("left_right:"),i(18, "0.0"),t(", "), t("up_down:"),i(19, "0.0"), t(")"),}),
s( {trig = "HOAMirror3.kr", name = "HOAMirror3.kr", dscr = "Snippet for HOAMirror3.kr, auto generated by SCNvim" }, {t("HOAMirror3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("front_back:"),i(17, "0.0"),t(", "), t("left_right:"),i(18, "0.0"),t(", "), t("up_down:"),i(19, "0.0"), t(")"),}),
s( {trig = "HOAMirror4.ar", name = "HOAMirror4.ar", dscr = "Snippet for HOAMirror4.ar, auto generated by SCNvim" }, {t("HOAMirror4.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("front_back:"),i(26, "0.0"),t(", "), t("left_right:"),i(27, "0.0"),t(", "), t("up_down:"),i(28, "0.0"), t(")"),}),
s( {trig = "HOAMirror4.kr", name = "HOAMirror4.kr", dscr = "Snippet for HOAMirror4.kr, auto generated by SCNvim" }, {t("HOAMirror4.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("front_back:"),i(26, "0.0"),t(", "), t("left_right:"),i(27, "0.0"),t(", "), t("up_down:"),i(28, "0.0"), t(")"),}),
s( {trig = "HOAMirror5.ar", name = "HOAMirror5.ar", dscr = "Snippet for HOAMirror5.ar, auto generated by SCNvim" }, {t("HOAMirror5.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("front_back:"),i(37, "0.0"),t(", "), t("left_right:"),i(38, "0.0"),t(", "), t("up_down:"),i(39, "0.0"), t(")"),}),
s( {trig = "HOAMirror5.kr", name = "HOAMirror5.kr", dscr = "Snippet for HOAMirror5.kr, auto generated by SCNvim" }, {t("HOAMirror5.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("front_back:"),i(37, "0.0"),t(", "), t("left_right:"),i(38, "0.0"),t(", "), t("up_down:"),i(39, "0.0"), t(")"),}),
s( {trig = "HOAMirror6.ar", name = "HOAMirror6.ar", dscr = "Snippet for HOAMirror6.ar, auto generated by SCNvim" }, {t("HOAMirror6.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("front_back:"),i(50, "0.0"),t(", "), t("left_right:"),i(51, "0.0"),t(", "), t("up_down:"),i(52, "0.0"), t(")"),}),
s( {trig = "HOAMirror6.kr", name = "HOAMirror6.kr", dscr = "Snippet for HOAMirror6.kr, auto generated by SCNvim" }, {t("HOAMirror6.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("front_back:"),i(50, "0.0"),t(", "), t("left_right:"),i(51, "0.0"),t(", "), t("up_down:"),i(52, "0.0"), t(")"),}),
s( {trig = "HOAMirror7.ar", name = "HOAMirror7.ar", dscr = "Snippet for HOAMirror7.ar, auto generated by SCNvim" }, {t("HOAMirror7.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("front_back:"),i(65, "0.0"),t(", "), t("left_right:"),i(66, "0.0"),t(", "), t("up_down:"),i(67, "0.0"), t(")"),}),
s( {trig = "HOAMirror7.kr", name = "HOAMirror7.kr", dscr = "Snippet for HOAMirror7.kr, auto generated by SCNvim" }, {t("HOAMirror7.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("front_back:"),i(65, "0.0"),t(", "), t("left_right:"),i(66, "0.0"),t(", "), t("up_down:"),i(67, "0.0"), t(")"),}),
s( {trig = "HOAMirror8.ar", name = "HOAMirror8.ar", dscr = "Snippet for HOAMirror8.ar, auto generated by SCNvim" }, {t("HOAMirror8.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("front_back:"),i(82, "0.0"),t(", "), t("left_right:"),i(83, "0.0"),t(", "), t("up_down:"),i(84, "0.0"), t(")"),}),
s( {trig = "HOAMirror8.kr", name = "HOAMirror8.kr", dscr = "Snippet for HOAMirror8.kr, auto generated by SCNvim" }, {t("HOAMirror8.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("front_back:"),i(82, "0.0"),t(", "), t("left_right:"),i(83, "0.0"),t(", "), t("up_down:"),i(84, "0.0"), t(")"),}),
s( {trig = "HOAMirror9.ar", name = "HOAMirror9.ar", dscr = "Snippet for HOAMirror9.ar, auto generated by SCNvim" }, {t("HOAMirror9.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("front_back:"),i(101, "0.0"),t(", "), t("left_right:"),i(102, "0.0"),t(", "), t("up_down:"),i(103, "0.0"), t(")"),}),
s( {trig = "HOAMirror9.kr", name = "HOAMirror9.kr", dscr = "Snippet for HOAMirror9.kr, auto generated by SCNvim" }, {t("HOAMirror9.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("in26:"),i(26, "nil"),t(", "), t("in27:"),i(27, "nil"),t(", "), t("in28:"),i(28, "nil"),t(", "), t("in29:"),i(29, "nil"),t(", "), t("in30:"),i(30, "nil"),t(", "), t("in31:"),i(31, "nil"),t(", "), t("in32:"),i(32, "nil"),t(", "), t("in33:"),i(33, "nil"),t(", "), t("in34:"),i(34, "nil"),t(", "), t("in35:"),i(35, "nil"),t(", "), t("in36:"),i(36, "nil"),t(", "), t("in37:"),i(37, "nil"),t(", "), t("in38:"),i(38, "nil"),t(", "), t("in39:"),i(39, "nil"),t(", "), t("in40:"),i(40, "nil"),t(", "), t("in41:"),i(41, "nil"),t(", "), t("in42:"),i(42, "nil"),t(", "), t("in43:"),i(43, "nil"),t(", "), t("in44:"),i(44, "nil"),t(", "), t("in45:"),i(45, "nil"),t(", "), t("in46:"),i(46, "nil"),t(", "), t("in47:"),i(47, "nil"),t(", "), t("in48:"),i(48, "nil"),t(", "), t("in49:"),i(49, "nil"),t(", "), t("in50:"),i(50, "nil"),t(", "), t("in51:"),i(51, "nil"),t(", "), t("in52:"),i(52, "nil"),t(", "), t("in53:"),i(53, "nil"),t(", "), t("in54:"),i(54, "nil"),t(", "), t("in55:"),i(55, "nil"),t(", "), t("in56:"),i(56, "nil"),t(", "), t("in57:"),i(57, "nil"),t(", "), t("in58:"),i(58, "nil"),t(", "), t("in59:"),i(59, "nil"),t(", "), t("in60:"),i(60, "nil"),t(", "), t("in61:"),i(61, "nil"),t(", "), t("in62:"),i(62, "nil"),t(", "), t("in63:"),i(63, "nil"),t(", "), t("in64:"),i(64, "nil"),t(", "), t("in65:"),i(65, "nil"),t(", "), t("in66:"),i(66, "nil"),t(", "), t("in67:"),i(67, "nil"),t(", "), t("in68:"),i(68, "nil"),t(", "), t("in69:"),i(69, "nil"),t(", "), t("in70:"),i(70, "nil"),t(", "), t("in71:"),i(71, "nil"),t(", "), t("in72:"),i(72, "nil"),t(", "), t("in73:"),i(73, "nil"),t(", "), t("in74:"),i(74, "nil"),t(", "), t("in75:"),i(75, "nil"),t(", "), t("in76:"),i(76, "nil"),t(", "), t("in77:"),i(77, "nil"),t(", "), t("in78:"),i(78, "nil"),t(", "), t("in79:"),i(79, "nil"),t(", "), t("in80:"),i(80, "nil"),t(", "), t("in81:"),i(81, "nil"),t(", "), t("in82:"),i(82, "nil"),t(", "), t("in83:"),i(83, "nil"),t(", "), t("in84:"),i(84, "nil"),t(", "), t("in85:"),i(85, "nil"),t(", "), t("in86:"),i(86, "nil"),t(", "), t("in87:"),i(87, "nil"),t(", "), t("in88:"),i(88, "nil"),t(", "), t("in89:"),i(89, "nil"),t(", "), t("in90:"),i(90, "nil"),t(", "), t("in91:"),i(91, "nil"),t(", "), t("in92:"),i(92, "nil"),t(", "), t("in93:"),i(93, "nil"),t(", "), t("in94:"),i(94, "nil"),t(", "), t("in95:"),i(95, "nil"),t(", "), t("in96:"),i(96, "nil"),t(", "), t("in97:"),i(97, "nil"),t(", "), t("in98:"),i(98, "nil"),t(", "), t("in99:"),i(99, "nil"),t(", "), t("in100:"),i(100, "nil"),t(", "), t("front_back:"),i(101, "0.0"),t(", "), t("left_right:"),i(102, "0.0"),t(", "), t("up_down:"),i(103, "0.0"), t(")"),}),
s( {trig = "HOAPanLebedev061.ar", name = "HOAPanLebedev061.ar", dscr = "Snippet for HOAPanLebedev061.ar, auto generated by SCNvim" }, {t("HOAPanLebedev061.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("speaker_radius:"),i(9, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev061.kr", name = "HOAPanLebedev061.kr", dscr = "Snippet for HOAPanLebedev061.kr, auto generated by SCNvim" }, {t("HOAPanLebedev061.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("speaker_radius:"),i(9, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev261.ar", name = "HOAPanLebedev261.ar", dscr = "Snippet for HOAPanLebedev261.ar, auto generated by SCNvim" }, {t("HOAPanLebedev261.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("speaker_radius:"),i(9, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev261.kr", name = "HOAPanLebedev261.kr", dscr = "Snippet for HOAPanLebedev261.kr, auto generated by SCNvim" }, {t("HOAPanLebedev261.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("speaker_radius:"),i(9, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev262.ar", name = "HOAPanLebedev262.ar", dscr = "Snippet for HOAPanLebedev262.ar, auto generated by SCNvim" }, {t("HOAPanLebedev262.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("speaker_radius:"),i(10, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev262.kr", name = "HOAPanLebedev262.kr", dscr = "Snippet for HOAPanLebedev262.kr, auto generated by SCNvim" }, {t("HOAPanLebedev262.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("speaker_radius:"),i(10, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev263.ar", name = "HOAPanLebedev263.ar", dscr = "Snippet for HOAPanLebedev263.ar, auto generated by SCNvim" }, {t("HOAPanLebedev263.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("checkbox_3:"),i(10, "0.0"),t(", "), t("speaker_radius:"),i(11, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev263.kr", name = "HOAPanLebedev263.kr", dscr = "Snippet for HOAPanLebedev263.kr, auto generated by SCNvim" }, {t("HOAPanLebedev263.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("checkbox_3:"),i(10, "0.0"),t(", "), t("speaker_radius:"),i(11, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev501.ar", name = "HOAPanLebedev501.ar", dscr = "Snippet for HOAPanLebedev501.ar, auto generated by SCNvim" }, {t("HOAPanLebedev501.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("speaker_radius:"),i(9, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev501.kr", name = "HOAPanLebedev501.kr", dscr = "Snippet for HOAPanLebedev501.kr, auto generated by SCNvim" }, {t("HOAPanLebedev501.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("speaker_radius:"),i(9, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev502.ar", name = "HOAPanLebedev502.ar", dscr = "Snippet for HOAPanLebedev502.ar, auto generated by SCNvim" }, {t("HOAPanLebedev502.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("speaker_radius:"),i(10, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev502.kr", name = "HOAPanLebedev502.kr", dscr = "Snippet for HOAPanLebedev502.kr, auto generated by SCNvim" }, {t("HOAPanLebedev502.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("speaker_radius:"),i(10, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev503.ar", name = "HOAPanLebedev503.ar", dscr = "Snippet for HOAPanLebedev503.ar, auto generated by SCNvim" }, {t("HOAPanLebedev503.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("checkbox_3:"),i(10, "0.0"),t(", "), t("speaker_radius:"),i(11, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev503.kr", name = "HOAPanLebedev503.kr", dscr = "Snippet for HOAPanLebedev503.kr, auto generated by SCNvim" }, {t("HOAPanLebedev503.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("checkbox_3:"),i(10, "0.0"),t(", "), t("speaker_radius:"),i(11, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev504.ar", name = "HOAPanLebedev504.ar", dscr = "Snippet for HOAPanLebedev504.ar, auto generated by SCNvim" }, {t("HOAPanLebedev504.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("checkbox_3:"),i(10, "0.0"),t(", "), t("checkbox_4:"),i(11, "0.0"),t(", "), t("speaker_radius:"),i(12, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev504.kr", name = "HOAPanLebedev504.kr", dscr = "Snippet for HOAPanLebedev504.kr, auto generated by SCNvim" }, {t("HOAPanLebedev504.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("checkbox_3:"),i(10, "0.0"),t(", "), t("checkbox_4:"),i(11, "0.0"),t(", "), t("speaker_radius:"),i(12, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev505.ar", name = "HOAPanLebedev505.ar", dscr = "Snippet for HOAPanLebedev505.ar, auto generated by SCNvim" }, {t("HOAPanLebedev505.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("checkbox_3:"),i(10, "0.0"),t(", "), t("checkbox_4:"),i(11, "0.0"),t(", "), t("checkbox_5:"),i(12, "0.0"),t(", "), t("speaker_radius:"),i(13, "1.07"), t(")"),}),
s( {trig = "HOAPanLebedev505.kr", name = "HOAPanLebedev505.kr", dscr = "Snippet for HOAPanLebedev505.kr, auto generated by SCNvim" }, {t("HOAPanLebedev505.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("gain_0:"),i(2, "0.0"),t(", "), t("radius_0:"),i(3, "2.0"),t(", "), t("azimuth_0:"),i(4, "0.0"),t(", "), t("elevation_0:"),i(5, "0.0"),t(", "), t("yes:"),i(6, "0.0"),t(", "), t("checkbox_0:"),i(7, "0.0"),t(", "), t("checkbox_1:"),i(8, "0.0"),t(", "), t("checkbox_2:"),i(9, "0.0"),t(", "), t("checkbox_3:"),i(10, "0.0"),t(", "), t("checkbox_4:"),i(11, "0.0"),t(", "), t("checkbox_5:"),i(12, "0.0"),t(", "), t("speaker_radius:"),i(13, "1.07"), t(")"),}),
s( {trig = "HOARotator1.ar", name = "HOARotator1.ar", dscr = "Snippet for HOARotator1.ar, auto generated by SCNvim" }, {t("HOARotator1.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("pitch:"),i(5, "0.0"),t(", "), t("roll:"),i(6, "0.0"),t(", "), t("yaw:"),i(7, "0.0"), t(")"),}),
s( {trig = "HOARotator1.kr", name = "HOARotator1.kr", dscr = "Snippet for HOARotator1.kr, auto generated by SCNvim" }, {t("HOARotator1.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("pitch:"),i(5, "0.0"),t(", "), t("roll:"),i(6, "0.0"),t(", "), t("yaw:"),i(7, "0.0"), t(")"),}),
s( {trig = "HOARotator2.ar", name = "HOARotator2.ar", dscr = "Snippet for HOARotator2.ar, auto generated by SCNvim" }, {t("HOARotator2.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("pitch:"),i(10, "0.0"),t(", "), t("roll:"),i(11, "0.0"),t(", "), t("yaw:"),i(12, "0.0"), t(")"),}),
s( {trig = "HOARotator2.kr", name = "HOARotator2.kr", dscr = "Snippet for HOARotator2.kr, auto generated by SCNvim" }, {t("HOARotator2.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("pitch:"),i(10, "0.0"),t(", "), t("roll:"),i(11, "0.0"),t(", "), t("yaw:"),i(12, "0.0"), t(")"),}),
s( {trig = "HOARotator3.ar", name = "HOARotator3.ar", dscr = "Snippet for HOARotator3.ar, auto generated by SCNvim" }, {t("HOARotator3.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("pitch:"),i(17, "0.0"),t(", "), t("roll:"),i(18, "0.0"),t(", "), t("yaw:"),i(19, "0.0"), t(")"),}),
s( {trig = "HOARotator3.kr", name = "HOARotator3.kr", dscr = "Snippet for HOARotator3.kr, auto generated by SCNvim" }, {t("HOARotator3.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("pitch:"),i(17, "0.0"),t(", "), t("roll:"),i(18, "0.0"),t(", "), t("yaw:"),i(19, "0.0"), t(")"),}),
s( {trig = "HOARotator4.ar", name = "HOARotator4.ar", dscr = "Snippet for HOARotator4.ar, auto generated by SCNvim" }, {t("HOARotator4.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("pitch:"),i(26, "0.0"),t(", "), t("roll:"),i(27, "0.0"),t(", "), t("yaw:"),i(28, "0.0"), t(")"),}),
s( {trig = "HOARotator4.kr", name = "HOARotator4.kr", dscr = "Snippet for HOARotator4.kr, auto generated by SCNvim" }, {t("HOARotator4.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("in3:"),i(3, "nil"),t(", "), t("in4:"),i(4, "nil"),t(", "), t("in5:"),i(5, "nil"),t(", "), t("in6:"),i(6, "nil"),t(", "), t("in7:"),i(7, "nil"),t(", "), t("in8:"),i(8, "nil"),t(", "), t("in9:"),i(9, "nil"),t(", "), t("in10:"),i(10, "nil"),t(", "), t("in11:"),i(11, "nil"),t(", "), t("in12:"),i(12, "nil"),t(", "), t("in13:"),i(13, "nil"),t(", "), t("in14:"),i(14, "nil"),t(", "), t("in15:"),i(15, "nil"),t(", "), t("in16:"),i(16, "nil"),t(", "), t("in17:"),i(17, "nil"),t(", "), t("in18:"),i(18, "nil"),t(", "), t("in19:"),i(19, "nil"),t(", "), t("in20:"),i(20, "nil"),t(", "), t("in21:"),i(21, "nil"),t(", "), t("in22:"),i(22, "nil"),t(", "), t("in23:"),i(23, "nil"),t(", "), t("in24:"),i(24, "nil"),t(", "), t("in25:"),i(25, "nil"),t(", "), t("pitch:"),i(26, "0.0"),t(", "), t("roll:"),i(27, "0.0"),t(", "), t("yaw:"),i(28, "0.0"), t(")"),}),
s( {trig = "HairCell.ar", name = "HairCell.ar", dscr = "Snippet for HairCell.ar, auto generated by SCNvim" }, {t("HairCell.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("spontaneousrate:"),i(2, "0.0"),t(", "), t("boostrate:"),i(3, "200.0"),t(", "), t("restorerate:"),i(4, "1000.0"),t(", "), t("loss:"),i(5, "0.99"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "HairCell.kr", name = "HairCell.kr", dscr = "Snippet for HairCell.kr, auto generated by SCNvim" }, {t("HairCell.kr"),t("("),t("input:"),i(1, "nil"),t(", "), t("spontaneousrate:"),i(2, "0.0"),t(", "), t("boostrate:"),i(3, "200.0"),t(", "), t("restorerate:"),i(4, "1000.0"),t(", "), t("loss:"),i(5, "0.99"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "Harmonics.new", name = "Harmonics.new", dscr = "Snippet for Harmonics.new, auto generated by SCNvim" }, {t("Harmonics.new"),t("("),t("size:"),i(1, "32"), t(")"),}),
s( {trig = "Hasher.ar", name = "Hasher.ar", dscr = "Snippet for Hasher.ar, auto generated by SCNvim" }, {t("Hasher.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Hasher.kr", name = "Hasher.kr", dscr = "Snippet for Hasher.kr, auto generated by SCNvim" }, {t("Hasher.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Help.gui", name = "Help.gui", dscr = "Snippet for Help.gui, auto generated by SCNvim" }, {t("Help.gui"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Help.dir", name = "Help.dir", dscr = "Snippet for Help.dir, auto generated by SCNvim" }, {t("Help.dir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Help.methodArgs", name = "Help.methodArgs", dscr = "Snippet for Help.methodArgs, auto generated by SCNvim" }, {t("Help.methodArgs"),t("("),t("string:"),i(1, "nil"), t(")"),}),
s( {trig = "HelpBrowser.initClass", name = "HelpBrowser.initClass", dscr = "Snippet for HelpBrowser.initClass, auto generated by SCNvim" }, {t("HelpBrowser.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HelpBrowser.instance", name = "HelpBrowser.instance", dscr = "Snippet for HelpBrowser.instance, auto generated by SCNvim" }, {t("HelpBrowser.instance"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HelpBrowser.new", name = "HelpBrowser.new", dscr = "Snippet for HelpBrowser.new, auto generated by SCNvim" }, {t("HelpBrowser.new"),t("("),t("aHomeUrl:"),i(1, "nil"),t(", "), t("newWin:"),i(2, "nil"), t(")"),}),
s( {trig = "HelpBrowser.goTo", name = "HelpBrowser.goTo", dscr = "Snippet for HelpBrowser.goTo, auto generated by SCNvim" }, {t("HelpBrowser.goTo"),t("("),t("url:"),i(1, "nil"), t(")"),}),
s( {trig = "HelpBrowser.front", name = "HelpBrowser.front", dscr = "Snippet for HelpBrowser.front, auto generated by SCNvim" }, {t("HelpBrowser.front"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HelpBrowser.goHome", name = "HelpBrowser.goHome", dscr = "Snippet for HelpBrowser.goHome, auto generated by SCNvim" }, {t("HelpBrowser.goHome"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HelpBrowser.openBrowsePage", name = "HelpBrowser.openBrowsePage", dscr = "Snippet for HelpBrowser.openBrowsePage, auto generated by SCNvim" }, {t("HelpBrowser.openBrowsePage"),t("("),t("category:"),i(1, "nil"), t(")"),}),
s( {trig = "HelpBrowser.openSearchPage", name = "HelpBrowser.openSearchPage", dscr = "Snippet for HelpBrowser.openSearchPage, auto generated by SCNvim" }, {t("HelpBrowser.openSearchPage"),t("("),t("text:"),i(1, "nil"), t(")"),}),
s( {trig = "HelpBrowser.openHelpFor", name = "HelpBrowser.openHelpFor", dscr = "Snippet for HelpBrowser.openHelpFor, auto generated by SCNvim" }, {t("HelpBrowser.openHelpFor"),t("("),t("text:"),i(1, "nil"), t(")"),}),
s( {trig = "HelpBrowser.openHelpForMethod", name = "HelpBrowser.openHelpForMethod", dscr = "Snippet for HelpBrowser.openHelpForMethod, auto generated by SCNvim" }, {t("HelpBrowser.openHelpForMethod"),t("("),t("method:"),i(1, "nil"), t(")"),}),
s( {trig = "Henon2DN.ar", name = "Henon2DN.ar", dscr = "Snippet for Henon2DN.ar, auto generated by SCNvim" }, {t("Henon2DN.ar"),t("("),t("minfreq:"),i(1, "11025"),t(", "), t("maxfreq:"),i(2, "22050"),t(", "), t("a:"),i(3, "1.4"),t(", "), t("b:"),i(4, "0.3"),t(", "), t("x0:"),i(5, "0.30501993062401"),t(", "), t("y0:"),i(6, "0.20938865431933"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "Henon2DN.kr", name = "Henon2DN.kr", dscr = "Snippet for Henon2DN.kr, auto generated by SCNvim" }, {t("Henon2DN.kr"),t("("),t("minfreq:"),i(1, "40"),t(", "), t("maxfreq:"),i(2, "100"),t(", "), t("a:"),i(3, "1.4"),t(", "), t("b:"),i(4, "0.3"),t(", "), t("x0:"),i(5, "0.30501993062401"),t(", "), t("y0:"),i(6, "0.20938865431933"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "HenonN.ar", name = "HenonN.ar", dscr = "Snippet for HenonN.ar, auto generated by SCNvim" }, {t("HenonN.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a:"),i(2, "1.4"),t(", "), t("b:"),i(3, "0.3"),t(", "), t("x0:"),i(4, "0"),t(", "), t("x1:"),i(5, "0"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "HenonTrig.ar", name = "HenonTrig.ar", dscr = "Snippet for HenonTrig.ar, auto generated by SCNvim" }, {t("HenonTrig.ar"),t("("),t("minfreq:"),i(1, "5"),t(", "), t("maxfreq:"),i(2, "10"),t(", "), t("a:"),i(3, "1.4"),t(", "), t("b:"),i(4, "0.3"),t(", "), t("x0:"),i(5, "0.30501993062401"),t(", "), t("y0:"),i(6, "0.20938865431933"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "HenonTrig.kr", name = "HenonTrig.kr", dscr = "Snippet for HenonTrig.kr, auto generated by SCNvim" }, {t("HenonTrig.kr"),t("("),t("minfreq:"),i(1, "5"),t(", "), t("maxfreq:"),i(2, "10"),t(", "), t("a:"),i(3, "1.4"),t(", "), t("b:"),i(4, "0.3"),t(", "), t("x0:"),i(5, "0.30501993062401"),t(", "), t("y0:"),i(6, "0.20938865431933"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "HighShelf.ar", name = "HighShelf.ar", dscr = "Snippet for HighShelf.ar, auto generated by SCNvim" }, {t("HighShelf.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440"),t(", "), t("shelfslope:"),i(3, "1"),t(", "), t("dbgain:"),i(4, "0"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "Hilbert.ar", name = "Hilbert.ar", dscr = "Snippet for Hilbert.ar, auto generated by SCNvim" }, {t("Hilbert.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("mul:"),i(2, "1"),t(", "), t("add:"),i(3, "0"), t(")"),}),
s( {trig = "HilbertFIR.ar", name = "HilbertFIR.ar", dscr = "Snippet for HilbertFIR.ar, auto generated by SCNvim" }, {t("HilbertFIR.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("buffer:"),i(2, "nil"), t(")"),}),
s( {trig = "HiliteGradient.new", name = "HiliteGradient.new", dscr = "Snippet for HiliteGradient.new, auto generated by SCNvim" }, {t("HiliteGradient.new"),t("("),t("color1:"),i(1, "nil"),t(", "), t("color2:"),i(2, "nil"),t(", "), t("direction:"),i(3, "v"),t(", "), t("steps:"),i(4, "64"),t(", "), t("frac:"),i(5, "0.33"), t(")"),}),
s( {trig = "History.timeStamp", name = "History.timeStamp", dscr = "Snippet for History.timeStamp, auto generated by SCNvim" }, {t("History.timeStamp"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.dateString", name = "History.dateString", dscr = "Snippet for History.dateString, auto generated by SCNvim" }, {t("History.dateString"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.initClass", name = "History.initClass", dscr = "Snippet for History.initClass, auto generated by SCNvim" }, {t("History.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.start", name = "History.start", dscr = "Snippet for History.start, auto generated by SCNvim" }, {t("History.start"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.end", name = "History.end", dscr = "Snippet for History.end, auto generated by SCNvim" }, {t("History.end"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.hasMovedOn_", name = "History.hasMovedOn_", dscr = "Snippet for History.hasMovedOn_, auto generated by SCNvim" }, {t("History.hasMovedOn_"),t("("),t("flag:"),i(1, "true"), t(")"),}),
s( {trig = "History.hasMovedOn", name = "History.hasMovedOn", dscr = "Snippet for History.hasMovedOn, auto generated by SCNvim" }, {t("History.hasMovedOn"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.play", name = "History.play", dscr = "Snippet for History.play, auto generated by SCNvim" }, {t("History.play"),t("("),t("start:"),i(1, "0"),t(", "), t("end:"),i(2, "nil"),t(", "), t("verbose:"),i(3, "true"), t(")"),}),
s( {trig = "History.stop", name = "History.stop", dscr = "Snippet for History.stop, auto generated by SCNvim" }, {t("History.stop"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.enter", name = "History.enter", dscr = "Snippet for History.enter, auto generated by SCNvim" }, {t("History.enter"),t("("),t("lineStr:"),i(1, "nil"),t(", "), t("id:"),i(2, "me"), t(")"),}),
s( {trig = "History.lines", name = "History.lines", dscr = "Snippet for History.lines, auto generated by SCNvim" }, {t("History.lines"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.lineShorts", name = "History.lineShorts", dscr = "Snippet for History.lineShorts, auto generated by SCNvim" }, {t("History.lineShorts"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.removeAt", name = "History.removeAt", dscr = "Snippet for History.removeAt, auto generated by SCNvim" }, {t("History.removeAt"),t("("),t("index:"),i(1, "nil"), t(")"),}),
s( {trig = "History.removeLast", name = "History.removeLast", dscr = "Snippet for History.removeLast, auto generated by SCNvim" }, {t("History.removeLast"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.keep", name = "History.keep", dscr = "Snippet for History.keep, auto generated by SCNvim" }, {t("History.keep"),t("("),t("num:"),i(1, "nil"), t(")"),}),
s( {trig = "History.drop", name = "History.drop", dscr = "Snippet for History.drop, auto generated by SCNvim" }, {t("History.drop"),t("("),t("num:"),i(1, "nil"), t(")"),}),
s( {trig = "History.clear", name = "History.clear", dscr = "Snippet for History.clear, auto generated by SCNvim" }, {t("History.clear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.new", name = "History.new", dscr = "Snippet for History.new, auto generated by SCNvim" }, {t("History.new"),t("("),t("lines:"),i(1, "nil"), t(")"),}),
s( {trig = "History.saveCS", name = "History.saveCS", dscr = "Snippet for History.saveCS, auto generated by SCNvim" }, {t("History.saveCS"),t("("),t("path:"),i(1, "nil"),t(", "), t("forward:"),i(2, "false"), t(")"),}),
s( {trig = "History.loadCS", name = "History.loadCS", dscr = "Snippet for History.loadCS, auto generated by SCNvim" }, {t("History.loadCS"),t("("),t("path:"),i(1, "nil"),t(", "), t("forward:"),i(2, "false"), t(")"),}),
s( {trig = "History.localOn", name = "History.localOn", dscr = "Snippet for History.localOn, auto generated by SCNvim" }, {t("History.localOn"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.localOff", name = "History.localOff", dscr = "Snippet for History.localOff, auto generated by SCNvim" }, {t("History.localOff"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.saveStory", name = "History.saveStory", dscr = "Snippet for History.saveStory, auto generated by SCNvim" }, {t("History.saveStory"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "History.formatTime", name = "History.formatTime", dscr = "Snippet for History.formatTime, auto generated by SCNvim" }, {t("History.formatTime"),t("("),t("val:"),i(1, "nil"), t(")"),}),
s( {trig = "History.unformatTime", name = "History.unformatTime", dscr = "Snippet for History.unformatTime, auto generated by SCNvim" }, {t("History.unformatTime"),t("("),t("str:"),i(1, "nil"), t(")"),}),
s( {trig = "History.prettyString", name = "History.prettyString", dscr = "Snippet for History.prettyString, auto generated by SCNvim" }, {t("History.prettyString"),t("("),t("str:"),i(1, "nil"), t(")"),}),
s( {trig = "History.shorten", name = "History.shorten", dscr = "Snippet for History.shorten, auto generated by SCNvim" }, {t("History.shorten"),t("("),t("line:"),i(1, "nil"),t(", "), t("maxLength:"),i(2, "nil"), t(")"),}),
s( {trig = "History.getTimeFromString", name = "History.getTimeFromString", dscr = "Snippet for History.getTimeFromString, auto generated by SCNvim" }, {t("History.getTimeFromString"),t("("),t("str:"),i(1, "nil"), t(")"),}),
s( {trig = "History.asLines", name = "History.asLines", dscr = "Snippet for History.asLines, auto generated by SCNvim" }, {t("History.asLines"),t("("),t("str:"),i(1, "nil"), t(")"),}),
s( {trig = "History.evalLineAt", name = "History.evalLineAt", dscr = "Snippet for History.evalLineAt, auto generated by SCNvim" }, {t("History.evalLineAt"),t("("),t("index:"),i(1, "nil"), t(")"),}),
s( {trig = "History.eval", name = "History.eval", dscr = "Snippet for History.eval, auto generated by SCNvim" }, {t("History.eval"),t("("),t("codeString:"),i(1, "nil"),t(", "), t("ignoreError:"),i(2, "nil"), t(")"),}),
s( {trig = "History.cmdPeriod", name = "History.cmdPeriod", dscr = "Snippet for History.cmdPeriod, auto generated by SCNvim" }, {t("History.cmdPeriod"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.playCmdPeriod", name = "History.playCmdPeriod", dscr = "Snippet for History.playCmdPeriod, auto generated by SCNvim" }, {t("History.playCmdPeriod"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.makeLogFolder", name = "History.makeLogFolder", dscr = "Snippet for History.makeLogFolder, auto generated by SCNvim" }, {t("History.makeLogFolder"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.showLogFolder", name = "History.showLogFolder", dscr = "Snippet for History.showLogFolder, auto generated by SCNvim" }, {t("History.showLogFolder"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.checkLogStarted", name = "History.checkLogStarted", dscr = "Snippet for History.checkLogStarted, auto generated by SCNvim" }, {t("History.checkLogStarted"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.startLog", name = "History.startLog", dscr = "Snippet for History.startLog, auto generated by SCNvim" }, {t("History.startLog"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.addToLog", name = "History.addToLog", dscr = "Snippet for History.addToLog, auto generated by SCNvim" }, {t("History.addToLog"),t("("),t("line:"),i(1, "nil"), t(")"),}),
s( {trig = "History.endLog", name = "History.endLog", dscr = "Snippet for History.endLog, auto generated by SCNvim" }, {t("History.endLog"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.showLogFile", name = "History.showLogFile", dscr = "Snippet for History.showLogFile, auto generated by SCNvim" }, {t("History.showLogFile"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "History.readFromDoc", name = "History.readFromDoc", dscr = "Snippet for History.readFromDoc, auto generated by SCNvim" }, {t("History.readFromDoc"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "History.checkPath", name = "History.checkPath", dscr = "Snippet for History.checkPath, auto generated by SCNvim" }, {t("History.checkPath"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "History.loadStory", name = "History.loadStory", dscr = "Snippet for History.loadStory, auto generated by SCNvim" }, {t("History.loadStory"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "History.rewrite", name = "History.rewrite", dscr = "Snippet for History.rewrite, auto generated by SCNvim" }, {t("History.rewrite"),t("("),t("path:"),i(1, "nil"),t(", "), t("open:"),i(2, "true"), t(")"),}),
s( {trig = "History.makeWin", name = "History.makeWin", dscr = "Snippet for History.makeWin, auto generated by SCNvim" }, {t("History.makeWin"),t("("),t("where:"),i(1, "nil"),t(", "), t("numItems:"),i(2, "8"), t(")"),}),
s( {trig = "History.document", name = "History.document", dscr = "Snippet for History.document, auto generated by SCNvim" }, {t("History.document"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "HistoryGui.new", name = "HistoryGui.new", dscr = "Snippet for HistoryGui.new, auto generated by SCNvim" }, {t("HistoryGui.new"),t("("),t("object:"),i(1, "nil"),t(", "), t("numItems:"),i(2, "8"),t(", "), t("parent:"),i(3, "nil"),t(", "), t("bounds:"),i(4, "nil"),t(", "), t("makeSkip:"),i(5, "true"),t(", "), t("options:"),i(6, "[]"), t(")"),}),
s( {trig = "ICepstrum.new", name = "ICepstrum.new", dscr = "Snippet for ICepstrum.new, auto generated by SCNvim" }, {t("ICepstrum.new"),t("("),t("cepchain:"),i(1, "nil"),t(", "), t("fftbuf:"),i(2, "nil"), t(")"),}),
s( {trig = "IEnvGen.ar", name = "IEnvGen.ar", dscr = "Snippet for IEnvGen.ar, auto generated by SCNvim" }, {t("IEnvGen.ar"),t("("),t("envelope:"),i(1, "nil"),t(", "), t("index:"),i(2, "nil"),t(", "), t("mul:"),i(3, "1"),t(", "), t("add:"),i(4, "0"), t(")"),}),
s( {trig = "IEnvGen.kr", name = "IEnvGen.kr", dscr = "Snippet for IEnvGen.kr, auto generated by SCNvim" }, {t("IEnvGen.kr"),t("("),t("envelope:"),i(1, "nil"),t(", "), t("index:"),i(2, "nil"),t(", "), t("mul:"),i(3, "1"),t(", "), t("add:"),i(4, "0"), t(")"),}),
s( {trig = "IEnvGen.convertEnv", name = "IEnvGen.convertEnv", dscr = "Snippet for IEnvGen.convertEnv, auto generated by SCNvim" }, {t("IEnvGen.convertEnv"),t("("),t("env:"),i(1, "nil"), t(")"),}),
s( {trig = "IEnvGen.new1", name = "IEnvGen.new1", dscr = "Snippet for IEnvGen.new1, auto generated by SCNvim" }, {t("IEnvGen.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("index:"),i(2, "nil"),t(", "), t("envArray:"),i(3, "nil"), t(")"),}),
s( {trig = "IFFT.new", name = "IFFT.new", dscr = "Snippet for IFFT.new, auto generated by SCNvim" }, {t("IFFT.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("wintype:"),i(2, "0"),t(", "), t("winsize:"),i(3, "0"), t(")"),}),
s( {trig = "IFFT.ar", name = "IFFT.ar", dscr = "Snippet for IFFT.ar, auto generated by SCNvim" }, {t("IFFT.ar"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("wintype:"),i(2, "0"),t(", "), t("winsize:"),i(3, "0"), t(")"),}),
s( {trig = "IFFT.kr", name = "IFFT.kr", dscr = "Snippet for IFFT.kr, auto generated by SCNvim" }, {t("IFFT.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("wintype:"),i(2, "0"),t(", "), t("winsize:"),i(3, "0"), t(")"),}),
s( {trig = "IIRFilter.ar", name = "IIRFilter.ar", dscr = "Snippet for IIRFilter.ar, auto generated by SCNvim" }, {t("IIRFilter.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "IODesc.new", name = "IODesc.new", dscr = "Snippet for IODesc.new, auto generated by SCNvim" }, {t("IODesc.new"),t("("),t("rate:"),i(1, "nil"),t(", "), t("numberOfChannels:"),i(2, "nil"),t(", "), t("startingChannel:"),i(3, "?"),t(", "), t("type:"),i(4, "nil"), t(")"),}),
s( {trig = "IRand.new", name = "IRand.new", dscr = "Snippet for IRand.new, auto generated by SCNvim" }, {t("IRand.new"),t("("),t("lo:"),i(1, "0"),t(", "), t("hi:"),i(2, "127"), t(")"),}),
s( {trig = "IdentityDictionary.new", name = "IdentityDictionary.new", dscr = "Snippet for IdentityDictionary.new, auto generated by SCNvim" }, {t("IdentityDictionary.new"),t("("),t("n:"),i(1, "8"),t(", "), t("proto:"),i(2, "nil"),t(", "), t("parent:"),i(3, "nil"),t(", "), t("know:"),i(4, "false"), t(")"),}),
s( {trig = "Image.initClass", name = "Image.initClass", dscr = "Snippet for Image.initClass, auto generated by SCNvim" }, {t("Image.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Image.new", name = "Image.new", dscr = "Snippet for Image.new, auto generated by SCNvim" }, {t("Image.new"),t("("),t("multiple:"),i(1, "nil"),t(", "), t("height:"),i(2, "nil"), t(")"),}),
s( {trig = "Image.openSVG", name = "Image.openSVG", dscr = "Snippet for Image.openSVG, auto generated by SCNvim" }, {t("Image.openSVG"),t("("),t("path:"),i(1, "nil"),t(", "), t("size:"),i(2, "nil"), t(")"),}),
s( {trig = "Image.newEmpty", name = "Image.newEmpty", dscr = "Snippet for Image.newEmpty, auto generated by SCNvim" }, {t("Image.newEmpty"),t("("),t("width:"),i(1, "nil"),t(", "), t("height:"),i(2, "nil"), t(")"),}),
s( {trig = "Image.color", name = "Image.color", dscr = "Snippet for Image.color, auto generated by SCNvim" }, {t("Image.color"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "Image.open", name = "Image.open", dscr = "Snippet for Image.open, auto generated by SCNvim" }, {t("Image.open"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "Image.openURL", name = "Image.openURL", dscr = "Snippet for Image.openURL, auto generated by SCNvim" }, {t("Image.openURL"),t("("),t("url:"),i(1, "nil"),t(", "), t("timeout:"),i(2, "60"), t(")"),}),
s( {trig = "Image.fromImage", name = "Image.fromImage", dscr = "Snippet for Image.fromImage, auto generated by SCNvim" }, {t("Image.fromImage"),t("("),t("image:"),i(1, "nil"), t(")"),}),
s( {trig = "Image.fromWindow", name = "Image.fromWindow", dscr = "Snippet for Image.fromWindow, auto generated by SCNvim" }, {t("Image.fromWindow"),t("("),t("window:"),i(1, "nil"),t(", "), t("rect:"),i(2, "nil"), t(")"),}),
s( {trig = "Image.formats", name = "Image.formats", dscr = "Snippet for Image.formats, auto generated by SCNvim" }, {t("Image.formats"),t("("),t("rw:"),i(1, "r"), t(")"),}),
s( {trig = "Image.interpolations", name = "Image.interpolations", dscr = "Snippet for Image.interpolations, auto generated by SCNvim" }, {t("Image.interpolations"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Image.colorToPixel", name = "Image.colorToPixel", dscr = "Snippet for Image.colorToPixel, auto generated by SCNvim" }, {t("Image.colorToPixel"),t("("),t("color:"),i(1, "nil"), t(")"),}),
s( {trig = "Image.pixelToColor", name = "Image.pixelToColor", dscr = "Snippet for Image.pixelToColor, auto generated by SCNvim" }, {t("Image.pixelToColor"),t("("),t("pixel:"),i(1, "nil"), t(")"),}),
s( {trig = "Image.closeAllPlotWindows", name = "Image.closeAllPlotWindows", dscr = "Snippet for Image.closeAllPlotWindows, auto generated by SCNvim" }, {t("Image.closeAllPlotWindows"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Image.prFormats", name = "Image.prFormats", dscr = "Snippet for Image.prFormats, auto generated by SCNvim" }, {t("Image.prFormats"),t("("),t("rw:"),i(1, "nil"), t(")"),}),
s( {trig = "ImmutableError.new", name = "ImmutableError.new", dscr = "Snippet for ImmutableError.new, auto generated by SCNvim" }, {t("ImmutableError.new"),t("("),t("receiver:"),i(1, "nil"),t(", "), t("value:"),i(2, "nil"), t(")"),}),
s( {trig = "Impulse.ar", name = "Impulse.ar", dscr = "Snippet for Impulse.ar, auto generated by SCNvim" }, {t("Impulse.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("phase:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Impulse.kr", name = "Impulse.kr", dscr = "Snippet for Impulse.kr, auto generated by SCNvim" }, {t("Impulse.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("phase:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "In.ar", name = "In.ar", dscr = "Snippet for In.ar, auto generated by SCNvim" }, {t("In.ar"),t("("),t("bus:"),i(1, "0"),t(", "), t("numChannels:"),i(2, "1"), t(")"),}),
s( {trig = "In.kr", name = "In.kr", dscr = "Snippet for In.kr, auto generated by SCNvim" }, {t("In.kr"),t("("),t("bus:"),i(1, "0"),t(", "), t("numChannels:"),i(2, "1"), t(")"),}),
s( {trig = "InBus.ar", name = "InBus.ar", dscr = "Snippet for InBus.ar, auto generated by SCNvim" }, {t("InBus.ar"),t("("),t("bus:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "nil"),t(", "), t("offset:"),i(3, "0"),t(", "), t("clip:"),i(4, "nil"), t(")"),}),
s( {trig = "InBus.kr", name = "InBus.kr", dscr = "Snippet for InBus.kr, auto generated by SCNvim" }, {t("InBus.kr"),t("("),t("bus:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "nil"),t(", "), t("offset:"),i(3, "0"),t(", "), t("clip:"),i(4, "nil"), t(")"),}),
s( {trig = "InBus.new1", name = "InBus.new1", dscr = "Snippet for InBus.new1, auto generated by SCNvim" }, {t("InBus.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("bus:"),i(2, "nil"),t(", "), t("numChannels:"),i(3, "nil"),t(", "), t("offset:"),i(4, "nil"),t(", "), t("clip:"),i(5, "nil"), t(")"),}),
s( {trig = "InFeedback.ar", name = "InFeedback.ar", dscr = "Snippet for InFeedback.ar, auto generated by SCNvim" }, {t("InFeedback.ar"),t("("),t("bus:"),i(1, "0"),t(", "), t("numChannels:"),i(2, "1"), t(")"),}),
s( {trig = "InGrain.ar", name = "InGrain.ar", dscr = "Snippet for InGrain.ar, auto generated by SCNvim" }, {t("InGrain.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("in:"),i(3, "nil"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "InGrainB.ar", name = "InGrainB.ar", dscr = "Snippet for InGrainB.ar, auto generated by SCNvim" }, {t("InGrainB.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("in:"),i(3, "nil"),t(", "), t("envbuf:"),i(4, "nil"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "InGrainBBF.ar", name = "InGrainBBF.ar", dscr = "Snippet for InGrainBBF.ar, auto generated by SCNvim" }, {t("InGrainBBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("in:"),i(3, "nil"),t(", "), t("envbuf:"),i(4, "nil"),t(", "), t("azimuth:"),i(5, "0"),t(", "), t("elevation:"),i(6, "0"),t(", "), t("rho:"),i(7, "1"),t(", "), t("wComp:"),i(8, "0"),t(", "), t("mul:"),i(9, "1"),t(", "), t("add:"),i(10, "0"), t(")"),}),
s( {trig = "InGrainBF.ar", name = "InGrainBF.ar", dscr = "Snippet for InGrainBF.ar, auto generated by SCNvim" }, {t("InGrainBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("in:"),i(3, "nil"),t(", "), t("azimuth:"),i(4, "0"),t(", "), t("elevation:"),i(5, "0"),t(", "), t("rho:"),i(6, "1"),t(", "), t("wComp:"),i(7, "0"),t(", "), t("mul:"),i(8, "1"),t(", "), t("add:"),i(9, "0"), t(")"),}),
s( {trig = "InGrainI.ar", name = "InGrainI.ar", dscr = "Snippet for InGrainI.ar, auto generated by SCNvim" }, {t("InGrainI.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("in:"),i(3, "nil"),t(", "), t("envbuf1:"),i(4, "nil"),t(", "), t("envbuf2:"),i(5, "nil"),t(", "), t("ifac:"),i(6, "0.5"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0"), t(")"),}),
s( {trig = "InGrainIBF.ar", name = "InGrainIBF.ar", dscr = "Snippet for InGrainIBF.ar, auto generated by SCNvim" }, {t("InGrainIBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("in:"),i(3, "nil"),t(", "), t("envbuf1:"),i(4, "nil"),t(", "), t("envbuf2:"),i(5, "nil"),t(", "), t("ifac:"),i(6, "0.5"),t(", "), t("azimuth:"),i(7, "0"),t(", "), t("elevation:"),i(8, "0"),t(", "), t("rho:"),i(9, "1"),t(", "), t("wComp:"),i(10, "0"),t(", "), t("mul:"),i(11, "1"),t(", "), t("add:"),i(12, "0"), t(")"),}),
s( {trig = "InRange.ar", name = "InRange.ar", dscr = "Snippet for InRange.ar, auto generated by SCNvim" }, {t("InRange.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("lo:"),i(2, "0.0"),t(", "), t("hi:"),i(3, "1.0"), t(")"),}),
s( {trig = "InRange.kr", name = "InRange.kr", dscr = "Snippet for InRange.kr, auto generated by SCNvim" }, {t("InRange.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("lo:"),i(2, "0.0"),t(", "), t("hi:"),i(3, "1.0"), t(")"),}),
s( {trig = "InRange.ir", name = "InRange.ir", dscr = "Snippet for InRange.ir, auto generated by SCNvim" }, {t("InRange.ir"),t("("),t("in:"),i(1, "0.0"),t(", "), t("lo:"),i(2, "0.0"),t(", "), t("hi:"),i(3, "1.0"), t(")"),}),
s( {trig = "InRect.ar", name = "InRect.ar", dscr = "Snippet for InRect.ar, auto generated by SCNvim" }, {t("InRect.ar"),t("("),t("x:"),i(1, "0.0"),t(", "), t("y:"),i(2, "0.0"),t(", "), t("rect:"),i(3, "nil"), t(")"),}),
s( {trig = "InRect.kr", name = "InRect.kr", dscr = "Snippet for InRect.kr, auto generated by SCNvim" }, {t("InRect.kr"),t("("),t("x:"),i(1, "0.0"),t(", "), t("y:"),i(2, "0.0"),t(", "), t("rect:"),i(3, "nil"), t(")"),}),
s( {trig = "InTrig.kr", name = "InTrig.kr", dscr = "Snippet for InTrig.kr, auto generated by SCNvim" }, {t("InTrig.kr"),t("("),t("bus:"),i(1, "0"),t(", "), t("numChannels:"),i(2, "1"), t(")"),}),
s( {trig = "Index.ar", name = "Index.ar", dscr = "Snippet for Index.ar, auto generated by SCNvim" }, {t("Index.ar"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("in:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Index.kr", name = "Index.kr", dscr = "Snippet for Index.kr, auto generated by SCNvim" }, {t("Index.kr"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("in:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "InfoUGenBase.ir", name = "InfoUGenBase.ir", dscr = "Snippet for InfoUGenBase.ir, auto generated by SCNvim" }, {t("InfoUGenBase.ir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "InsideOut.ar", name = "InsideOut.ar", dscr = "Snippet for InsideOut.ar, auto generated by SCNvim" }, {t("InsideOut.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "InsideOut.kr", name = "InsideOut.kr", dscr = "Snippet for InsideOut.kr, auto generated by SCNvim" }, {t("InsideOut.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "InsideOut.categories", name = "InsideOut.categories", dscr = "Snippet for InsideOut.categories, auto generated by SCNvim" }, {t("InsideOut.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Inspector.new", name = "Inspector.new", dscr = "Snippet for Inspector.new, auto generated by SCNvim" }, {t("Inspector.new"),t("("),t("object:"),i(1, "nil"), t(")"),}),
s( {trig = "Inspector.initClass", name = "Inspector.initClass", dscr = "Snippet for Inspector.initClass, auto generated by SCNvim" }, {t("Inspector.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Inspector.inspectorFor", name = "Inspector.inspectorFor", dscr = "Snippet for Inspector.inspectorFor, auto generated by SCNvim" }, {t("Inspector.inspectorFor"),t("("),t("object:"),i(1, "nil"), t(")"),}),
s( {trig = "Instruction.ar", name = "Instruction.ar", dscr = "Snippet for Instruction.ar, auto generated by SCNvim" }, {t("Instruction.ar"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Integrator.ar", name = "Integrator.ar", dscr = "Snippet for Integrator.ar, auto generated by SCNvim" }, {t("Integrator.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("coef:"),i(2, "1.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Integrator.kr", name = "Integrator.kr", dscr = "Snippet for Integrator.kr, auto generated by SCNvim" }, {t("Integrator.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("coef:"),i(2, "1.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Interpreter.new", name = "Interpreter.new", dscr = "Snippet for Interpreter.new, auto generated by SCNvim" }, {t("Interpreter.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Interval.new", name = "Interval.new", dscr = "Snippet for Interval.new, auto generated by SCNvim" }, {t("Interval.new"),t("("),t("start:"),i(1, "nil"),t(", "), t("end:"),i(2, "nil"),t(", "), t("step:"),i(3, "1"), t(")"),}),
s( {trig = "JITGui.initClass", name = "JITGui.initClass", dscr = "Snippet for JITGui.initClass, auto generated by SCNvim" }, {t("JITGui.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "JITGui.new", name = "JITGui.new", dscr = "Snippet for JITGui.new, auto generated by SCNvim" }, {t("JITGui.new"),t("("),t("object:"),i(1, "nil"),t(", "), t("numItems:"),i(2, "0"),t(", "), t("parent:"),i(3, "nil"),t(", "), t("bounds:"),i(4, "nil"),t(", "), t("makeSkip:"),i(5, "true"),t(", "), t("options:"),i(6, "[]"), t(")"),}),
s( {trig = "JPverb.ar", name = "JPverb.ar", dscr = "Snippet for JPverb.ar, auto generated by SCNvim" }, {t("JPverb.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("t60:"),i(2, "1.0"),t(", "), t("damp:"),i(3, "0.0"),t(", "), t("size:"),i(4, "1.0"),t(", "), t("earlyDiff:"),i(5, "0.707"),t(", "), t("modDepth:"),i(6, "0.1"),t(", "), t("modFreq:"),i(7, "2.0"),t(", "), t("low:"),i(8, "1.0"),t(", "), t("mid:"),i(9, "1.0"),t(", "), t("high:"),i(10, "1.0"),t(", "), t("lowcut:"),i(11, "500.0"),t(", "), t("highcut:"),i(12, "2000.0"), t(")"),}),
s( {trig = "JPverbRaw.ar", name = "JPverbRaw.ar", dscr = "Snippet for JPverbRaw.ar, auto generated by SCNvim" }, {t("JPverbRaw.ar"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("damp:"),i(3, "0.0"),t(", "), t("earlydiff:"),i(4, "0.707"),t(", "), t("highband:"),i(5, "2000.0"),t(", "), t("highx:"),i(6, "1.0"),t(", "), t("lowband:"),i(7, "500.0"),t(", "), t("lowx:"),i(8, "1.0"),t(", "), t("mdepth:"),i(9, "0.1"),t(", "), t("mfreq:"),i(10, "2.0"),t(", "), t("midx:"),i(11, "1.0"),t(", "), t("size:"),i(12, "1.0"),t(", "), t("t60:"),i(13, "1.0"), t(")"),}),
s( {trig = "JPverbRaw.kr", name = "JPverbRaw.kr", dscr = "Snippet for JPverbRaw.kr, auto generated by SCNvim" }, {t("JPverbRaw.kr"),t("("),t("in1:"),i(1, "nil"),t(", "), t("in2:"),i(2, "nil"),t(", "), t("damp:"),i(3, "0.0"),t(", "), t("earlydiff:"),i(4, "0.707"),t(", "), t("highband:"),i(5, "2000.0"),t(", "), t("highx:"),i(6, "1.0"),t(", "), t("lowband:"),i(7, "500.0"),t(", "), t("lowx:"),i(8, "1.0"),t(", "), t("mdepth:"),i(9, "0.1"),t(", "), t("mfreq:"),i(10, "2.0"),t(", "), t("midx:"),i(11, "1.0"),t(", "), t("size:"),i(12, "1.0"),t(", "), t("t60:"),i(13, "1.0"), t(")"),}),
s( {trig = "JoshGrain.categories", name = "JoshGrain.categories", dscr = "Snippet for JoshGrain.categories, auto generated by SCNvim" }, {t("JoshGrain.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "JoshMultiChannelGrain.categories", name = "JoshMultiChannelGrain.categories", dscr = "Snippet for JoshMultiChannelGrain.categories, auto generated by SCNvim" }, {t("JoshMultiChannelGrain.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "JoshMultiOutGrain.categories", name = "JoshMultiOutGrain.categories", dscr = "Snippet for JoshMultiOutGrain.categories, auto generated by SCNvim" }, {t("JoshMultiOutGrain.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "K2A.ar", name = "K2A.ar", dscr = "Snippet for K2A.ar, auto generated by SCNvim" }, {t("K2A.ar"),t("("),t("in:"),i(1, "0.0"), t(")"),}),
s( {trig = "KMeansRT.kr", name = "KMeansRT.kr", dscr = "Snippet for KMeansRT.kr, auto generated by SCNvim" }, {t("KMeansRT.kr"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("inputdata:"),i(2, "nil"),t(", "), t("k:"),i(3, "5"),t(", "), t("gate:"),i(4, "1"),t(", "), t("reset:"),i(5, "0"),t(", "), t("learn:"),i(6, "1"), t(")"),}),
s( {trig = "KMeansRT.getCentroid", name = "KMeansRT.getCentroid", dscr = "Snippet for KMeansRT.getCentroid, auto generated by SCNvim" }, {t("KMeansRT.getCentroid"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("classif:"),i(2, "nil"),t(", "), t("ndims:"),i(3, "nil"), t(")"),}),
s( {trig = "KeyClarity.kr", name = "KeyClarity.kr", dscr = "Snippet for KeyClarity.kr, auto generated by SCNvim" }, {t("KeyClarity.kr"),t("("),t("chain:"),i(1, "nil"),t(", "), t("keydecay:"),i(2, "2.0"),t(", "), t("chromaleak:"),i(3, "0.5"), t(")"),}),
s( {trig = "KeyMode.kr", name = "KeyMode.kr", dscr = "Snippet for KeyMode.kr, auto generated by SCNvim" }, {t("KeyMode.kr"),t("("),t("chain:"),i(1, "nil"),t(", "), t("keydecay:"),i(2, "2.0"),t(", "), t("chromaleak:"),i(3, "0.5"), t(")"),}),
s( {trig = "KeyState.kr", name = "KeyState.kr", dscr = "Snippet for KeyState.kr, auto generated by SCNvim" }, {t("KeyState.kr"),t("("),t("keycode:"),i(1, "0"),t(", "), t("minval:"),i(2, "0"),t(", "), t("maxval:"),i(3, "1"),t(", "), t("lag:"),i(4, "0.2"), t(")"),}),
s( {trig = "KeyTrack.kr", name = "KeyTrack.kr", dscr = "Snippet for KeyTrack.kr, auto generated by SCNvim" }, {t("KeyTrack.kr"),t("("),t("chain:"),i(1, "nil"),t(", "), t("keydecay:"),i(2, "2.0"),t(", "), t("chromaleak:"),i(3, "0.5"), t(")"),}),
s( {trig = "Klang.ar", name = "Klang.ar", dscr = "Snippet for Klang.ar, auto generated by SCNvim" }, {t("Klang.ar"),t("("),t("specificationsArrayRef:"),i(1, "nil"),t(", "), t("freqscale:"),i(2, "1.0"),t(", "), t("freqoffset:"),i(3, "0.0"), t(")"),}),
s( {trig = "Klang.new1", name = "Klang.new1", dscr = "Snippet for Klang.new1, auto generated by SCNvim" }, {t("Klang.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("freqscale:"),i(2, "nil"),t(", "), t("freqoffset:"),i(3, "nil"),t(", "), t("arrayRef:"),i(4, "nil"), t(")"),}),
s( {trig = "Klank.ar", name = "Klank.ar", dscr = "Snippet for Klank.ar, auto generated by SCNvim" }, {t("Klank.ar"),t("("),t("specificationsArrayRef:"),i(1, "nil"),t(", "), t("input:"),i(2, "nil"),t(", "), t("freqscale:"),i(3, "1.0"),t(", "), t("freqoffset:"),i(4, "0.0"),t(", "), t("decayscale:"),i(5, "1.0"), t(")"),}),
s( {trig = "Klank.new1", name = "Klank.new1", dscr = "Snippet for Klank.new1, auto generated by SCNvim" }, {t("Klank.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("input:"),i(2, "nil"),t(", "), t("freqscale:"),i(3, "nil"),t(", "), t("freqoffset:"),i(4, "nil"),t(", "), t("decayscale:"),i(5, "nil"),t(", "), t("arrayRef:"),i(6, "nil"), t(")"),}),
s( {trig = "KmeansToBPSet1.ar", name = "KmeansToBPSet1.ar", dscr = "Snippet for KmeansToBPSet1.ar, auto generated by SCNvim" }, {t("KmeansToBPSet1.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("numdatapoints:"),i(2, "20"),t(", "), t("maxnummeans:"),i(3, "4"),t(", "), t("nummeans:"),i(4, "4"),t(", "), t("tnewdata:"),i(5, "1"),t(", "), t("tnewmeans:"),i(6, "1"),t(", "), t("soft:"),i(7, "1.0"),t(", "), t("bufnum:"),i(8, "nil"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "Knob.qtClass", name = "Knob.qtClass", dscr = "Snippet for Knob.qtClass, auto generated by SCNvim" }, {t("Knob.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Knob.new", name = "Knob.new", dscr = "Snippet for Knob.new, auto generated by SCNvim" }, {t("Knob.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "LADSPA.ar", name = "LADSPA.ar", dscr = "Snippet for LADSPA.ar, auto generated by SCNvim" }, {t("LADSPA.ar"),t("("),t("nChans:"),i(1, "nil"),t(", "), t("id:"),i(2, "nil"),t(", "), t("args:"),i(3, "[]"), t(")"),}),
s( {trig = "LADSPA.initClass", name = "LADSPA.initClass", dscr = "Snippet for LADSPA.initClass, auto generated by SCNvim" }, {t("LADSPA.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LADSPA.listPlugins", name = "LADSPA.listPlugins", dscr = "Snippet for LADSPA.listPlugins, auto generated by SCNvim" }, {t("LADSPA.listPlugins"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LFBrownNoise0.ar", name = "LFBrownNoise0.ar", dscr = "Snippet for LFBrownNoise0.ar, auto generated by SCNvim" }, {t("LFBrownNoise0.ar"),t("("),t("freq:"),i(1, "20"),t(", "), t("dev:"),i(2, "1.0"),t(", "), t("dist:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "LFBrownNoise0.kr", name = "LFBrownNoise0.kr", dscr = "Snippet for LFBrownNoise0.kr, auto generated by SCNvim" }, {t("LFBrownNoise0.kr"),t("("),t("freq:"),i(1, "20"),t(", "), t("dev:"),i(2, "1.0"),t(", "), t("dist:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "LFGauss.ar", name = "LFGauss.ar", dscr = "Snippet for LFGauss.ar, auto generated by SCNvim" }, {t("LFGauss.ar"),t("("),t("duration:"),i(1, "1"),t(", "), t("width:"),i(2, "0.1"),t(", "), t("iphase:"),i(3, "0.0"),t(", "), t("loop:"),i(4, "1"),t(", "), t("doneAction:"),i(5, "0"), t(")"),}),
s( {trig = "LFGauss.kr", name = "LFGauss.kr", dscr = "Snippet for LFGauss.kr, auto generated by SCNvim" }, {t("LFGauss.kr"),t("("),t("duration:"),i(1, "1"),t(", "), t("width:"),i(2, "0.1"),t(", "), t("iphase:"),i(3, "0.0"),t(", "), t("loop:"),i(4, "1"),t(", "), t("doneAction:"),i(5, "0"), t(")"),}),
s( {trig = "LFNoise0.ar", name = "LFNoise0.ar", dscr = "Snippet for LFNoise0.ar, auto generated by SCNvim" }, {t("LFNoise0.ar"),t("("),t("freq:"),i(1, "500.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "LFNoise0.kr", name = "LFNoise0.kr", dscr = "Snippet for LFNoise0.kr, auto generated by SCNvim" }, {t("LFNoise0.kr"),t("("),t("freq:"),i(1, "500.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "LFPulse.ar", name = "LFPulse.ar", dscr = "Snippet for LFPulse.ar, auto generated by SCNvim" }, {t("LFPulse.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("iphase:"),i(2, "0.0"),t(", "), t("width:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "LFPulse.kr", name = "LFPulse.kr", dscr = "Snippet for LFPulse.kr, auto generated by SCNvim" }, {t("LFPulse.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("iphase:"),i(2, "0.0"),t(", "), t("width:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "LFSaw.ar", name = "LFSaw.ar", dscr = "Snippet for LFSaw.ar, auto generated by SCNvim" }, {t("LFSaw.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("iphase:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "LFSaw.kr", name = "LFSaw.kr", dscr = "Snippet for LFSaw.kr, auto generated by SCNvim" }, {t("LFSaw.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("iphase:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "LID.running", name = "LID.running", dscr = "Snippet for LID.running, auto generated by SCNvim" }, {t("LID.running"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LID.initClass", name = "LID.initClass", dscr = "Snippet for LID.initClass, auto generated by SCNvim" }, {t("LID.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LID.initializeLID", name = "LID.initializeLID", dscr = "Snippet for LID.initializeLID, auto generated by SCNvim" }, {t("LID.initializeLID"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LID.findAvailable", name = "LID.findAvailable", dscr = "Snippet for LID.findAvailable, auto generated by SCNvim" }, {t("LID.findAvailable"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "LID.postAvailable", name = "LID.postAvailable", dscr = "Snippet for LID.postAvailable, auto generated by SCNvim" }, {t("LID.postAvailable"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LID.register", name = "LID.register", dscr = "Snippet for LID.register, auto generated by SCNvim" }, {t("LID.register"),t("("),t("name:"),i(1, "nil"),t(", "), t("spec:"),i(2, "nil"), t(")"),}),
s( {trig = "LID.mouseDeviceSpec", name = "LID.mouseDeviceSpec", dscr = "Snippet for LID.mouseDeviceSpec, auto generated by SCNvim" }, {t("LID.mouseDeviceSpec"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LID.keyboardDeviceSpec", name = "LID.keyboardDeviceSpec", dscr = "Snippet for LID.keyboardDeviceSpec, auto generated by SCNvim" }, {t("LID.keyboardDeviceSpec"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LID.openDevices", name = "LID.openDevices", dscr = "Snippet for LID.openDevices, auto generated by SCNvim" }, {t("LID.openDevices"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LID.closeAll", name = "LID.closeAll", dscr = "Snippet for LID.closeAll, auto generated by SCNvim" }, {t("LID.closeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LID.openAt", name = "LID.openAt", dscr = "Snippet for LID.openAt, auto generated by SCNvim" }, {t("LID.openAt"),t("("),t("index:"),i(1, "nil"), t(")"),}),
s( {trig = "LID.findBy", name = "LID.findBy", dscr = "Snippet for LID.findBy, auto generated by SCNvim" }, {t("LID.findBy"),t("("),t("vendorID:"),i(1, "nil"),t(", "), t("productID:"),i(2, "nil"),t(", "), t("path:"),i(3, "nil"),t(", "), t("version:"),i(4, "nil"),t(", "), t("physical:"),i(5, "nil"),t(", "), t("unique:"),i(6, "nil"), t(")"),}),
s( {trig = "LID.open", name = "LID.open", dscr = "Snippet for LID.open, auto generated by SCNvim" }, {t("LID.open"),t("("),t("vendorID:"),i(1, "nil"),t(", "), t("productID:"),i(2, "nil"),t(", "), t("path:"),i(3, "nil"),t(", "), t("version:"),i(4, "nil"),t(", "), t("physical:"),i(5, "nil"),t(", "), t("unique:"),i(6, "nil"), t(")"),}),
s( {trig = "LID.openPath", name = "LID.openPath", dscr = "Snippet for LID.openPath, auto generated by SCNvim" }, {t("LID.openPath"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "LID.new", name = "LID.new", dscr = "Snippet for LID.new, auto generated by SCNvim" }, {t("LID.new"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "LID.debug_", name = "LID.debug_", dscr = "Snippet for LID.debug_, auto generated by SCNvim" }, {t("LID.debug_"),t("("),t("onoff:"),i(1, "true"), t(")"),}),
s( {trig = "LID.debug", name = "LID.debug", dscr = "Snippet for LID.debug, auto generated by SCNvim" }, {t("LID.debug"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LID.addRecvFunc", name = "LID.addRecvFunc", dscr = "Snippet for LID.addRecvFunc, auto generated by SCNvim" }, {t("LID.addRecvFunc"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "LID.removeRecvFunc", name = "LID.removeRecvFunc", dscr = "Snippet for LID.removeRecvFunc, auto generated by SCNvim" }, {t("LID.removeRecvFunc"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "LID.action_", name = "LID.action_", dscr = "Snippet for LID.action_, auto generated by SCNvim" }, {t("LID.action_"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "LID.prStartEventLoop", name = "LID.prStartEventLoop", dscr = "Snippet for LID.prStartEventLoop, auto generated by SCNvim" }, {t("LID.prStartEventLoop"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LID.prStopEventLoop", name = "LID.prStopEventLoop", dscr = "Snippet for LID.prStopEventLoop, auto generated by SCNvim" }, {t("LID.prStopEventLoop"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LIDGui.new", name = "LIDGui.new", dscr = "Snippet for LIDGui.new, auto generated by SCNvim" }, {t("LIDGui.new"),t("("),t("device:"),i(1, "nil"), t(")"),}),
s( {trig = "LIDSlot.initClass", name = "LIDSlot.initClass", dscr = "Snippet for LIDSlot.initClass, auto generated by SCNvim" }, {t("LIDSlot.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LIDSlot.new", name = "LIDSlot.new", dscr = "Snippet for LIDSlot.new, auto generated by SCNvim" }, {t("LIDSlot.new"),t("("),t("device:"),i(1, "nil"),t(", "), t("evtType:"),i(2, "nil"),t(", "), t("evtCode:"),i(3, "nil"), t(")"),}),
s( {trig = "LPCAnalyzer.ar", name = "LPCAnalyzer.ar", dscr = "Snippet for LPCAnalyzer.ar, auto generated by SCNvim" }, {t("LPCAnalyzer.ar"),t("("),t("input:"),i(1, "0"),t(", "), t("source:"),i(2, "0.01"),t(", "), t("n:"),i(3, "256"),t(", "), t("p:"),i(4, "10"),t(", "), t("testE:"),i(5, "0"),t(", "), t("delta:"),i(6, "0.999"),t(", "), t("windowtype:"),i(7, "0"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "LPCError.ar", name = "LPCError.ar", dscr = "Snippet for LPCError.ar, auto generated by SCNvim" }, {t("LPCError.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("p:"),i(2, "10"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "LPCSynth.ar", name = "LPCSynth.ar", dscr = "Snippet for LPCSynth.ar, auto generated by SCNvim" }, {t("LPCSynth.ar"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("signal:"),i(2, "nil"),t(", "), t("pointer:"),i(3, "nil"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "LPCVals.kr", name = "LPCVals.kr", dscr = "Snippet for LPCVals.kr, auto generated by SCNvim" }, {t("LPCVals.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("pointer:"),i(2, "nil"), t(")"),}),
s( {trig = "LPCVals.ar", name = "LPCVals.ar", dscr = "Snippet for LPCVals.ar, auto generated by SCNvim" }, {t("LPCVals.ar"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("pointer:"),i(2, "nil"), t(")"),}),
s( {trig = "LPF.ar", name = "LPF.ar", dscr = "Snippet for LPF.ar, auto generated by SCNvim" }, {t("LPF.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "LPF.kr", name = "LPF.kr", dscr = "Snippet for LPF.kr, auto generated by SCNvim" }, {t("LPF.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "LPF1.ar", name = "LPF1.ar", dscr = "Snippet for LPF1.ar, auto generated by SCNvim" }, {t("LPF1.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1000"), t(")"),}),
s( {trig = "LPF1.kr", name = "LPF1.kr", dscr = "Snippet for LPF1.kr, auto generated by SCNvim" }, {t("LPF1.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1000"), t(")"),}),
s( {trig = "LPF18.ar", name = "LPF18.ar", dscr = "Snippet for LPF18.ar, auto generated by SCNvim" }, {t("LPF18.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "100"),t(", "), t("res:"),i(3, "1"),t(", "), t("dist:"),i(4, "0.4"), t(")"),}),
s( {trig = "LPFVS6.ar", name = "LPFVS6.ar", dscr = "Snippet for LPFVS6.ar, auto generated by SCNvim" }, {t("LPFVS6.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1000"),t(", "), t("slope:"),i(3, "0.5"), t(")"),}),
s( {trig = "LPFVS6.kr", name = "LPFVS6.kr", dscr = "Snippet for LPFVS6.kr, auto generated by SCNvim" }, {t("LPFVS6.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1000"),t(", "), t("slope:"),i(3, "0.5"), t(")"),}),
s( {trig = "LPZ1.ar", name = "LPZ1.ar", dscr = "Snippet for LPZ1.ar, auto generated by SCNvim" }, {t("LPZ1.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "LPZ1.kr", name = "LPZ1.kr", dscr = "Snippet for LPZ1.kr, auto generated by SCNvim" }, {t("LPZ1.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "LPZ2.ar", name = "LPZ2.ar", dscr = "Snippet for LPZ2.ar, auto generated by SCNvim" }, {t("LPZ2.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "LPZ2.kr", name = "LPZ2.kr", dscr = "Snippet for LPZ2.kr, auto generated by SCNvim" }, {t("LPZ2.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "LRHPF.ar", name = "LRHPF.ar", dscr = "Snippet for LRHPF.ar, auto generated by SCNvim" }, {t("LRHPF.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("order:"),i(2, "4"),t(", "), t("freq:"),i(3, "440"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "LRLPF.ar", name = "LRLPF.ar", dscr = "Snippet for LRLPF.ar, auto generated by SCNvim" }, {t("LRLPF.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("order:"),i(2, "4"),t(", "), t("freq:"),i(3, "440"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "LRUNumberAllocator.new", name = "LRUNumberAllocator.new", dscr = "Snippet for LRUNumberAllocator.new, auto generated by SCNvim" }, {t("LRUNumberAllocator.new"),t("("),t("lo:"),i(1, "nil"),t(", "), t("hi:"),i(2, "nil"), t(")"),}),
s( {trig = "LTI.ar", name = "LTI.ar", dscr = "Snippet for LTI.ar, auto generated by SCNvim" }, {t("LTI.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("bufnuma:"),i(2, "0"),t(", "), t("bufnumb:"),i(3, "1"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "LaTeX.lineEnd", name = "LaTeX.lineEnd", dscr = "Snippet for LaTeX.lineEnd, auto generated by SCNvim" }, {t("LaTeX.lineEnd"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LaTeX.hline", name = "LaTeX.hline", dscr = "Snippet for LaTeX.hline, auto generated by SCNvim" }, {t("LaTeX.hline"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LaTeX.cline", name = "LaTeX.cline", dscr = "Snippet for LaTeX.cline, auto generated by SCNvim" }, {t("LaTeX.cline"),t("("),t("which:"),i(1, "nil"), t(")"),}),
s( {trig = "LaTeX.tabletab", name = "LaTeX.tabletab", dscr = "Snippet for LaTeX.tabletab, auto generated by SCNvim" }, {t("LaTeX.tabletab"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LaTeX.math", name = "LaTeX.math", dscr = "Snippet for LaTeX.math, auto generated by SCNvim" }, {t("LaTeX.math"),t("("),t("str:"),i(1, "nil"),t(", "), t("flag:"),i(2, "true"), t(")"),}),
s( {trig = "LaTeX.row", name = "LaTeX.row", dscr = "Snippet for LaTeX.row, auto generated by SCNvim" }, {t("LaTeX.row"),t("("),t("obj:"),i(1, "nil"),t(", "), t("align:"),i(2, "l"),t(", "), t("n:"),i(3, "1"), t(")"),}),
s( {trig = "LaTeX.asTable", name = "LaTeX.asTable", dscr = "Snippet for LaTeX.asTable, auto generated by SCNvim" }, {t("LaTeX.asTable"),t("("),t("dict:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "LaTeX.tabularFooter", name = "LaTeX.tabularFooter", dscr = "Snippet for LaTeX.tabularFooter, auto generated by SCNvim" }, {t("LaTeX.tabularFooter"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LaTeX.tableHeader", name = "LaTeX.tableHeader", dscr = "Snippet for LaTeX.tableHeader, auto generated by SCNvim" }, {t("LaTeX.tableHeader"),t("("),t("n:"),i(1, "nil"),t(", "), t("align:"),i(2, "l"),t(", "), t("separator:"),i(3, ""), t(")"),}),
s( {trig = "LaTeX.tableDict", name = "LaTeX.tableDict", dscr = "Snippet for LaTeX.tableDict, auto generated by SCNvim" }, {t("LaTeX.tableDict"),t("("),t("dict:"),i(1, "nil"),t(", "), t("hlines:"),i(2, "[]"),t(", "), t("align:"),i(3, "l"),t(", "), t("separator:"),i(4, ""),t(", "), t("math:"),i(5, "true"), t(")"),}),
s( {trig = "LaTeX.numericalDict", name = "LaTeX.numericalDict", dscr = "Snippet for LaTeX.numericalDict, auto generated by SCNvim" }, {t("LaTeX.numericalDict"),t("("),t("dict:"),i(1, "nil"),t(", "), t("keyName:"),i(2, "nil"),t(", "), t("valName:"),i(3, "nil"),t(", "), t("math:"),i(4, "true"), t(")"),}),
s( {trig = "LaTeX.barChart", name = "LaTeX.barChart", dscr = "Snippet for LaTeX.barChart, auto generated by SCNvim" }, {t("LaTeX.barChart"),t("("),t("vals:"),i(1, "nil"),t(", "), t("min:"),i(2, "0"),t(", "), t("max:"),i(3, "nil"),t(", "), t("interval:"),i(4, "nil"),t(", "), t("shades:"),i(5, "false"),t(", "), t("precision:"),i(6, "nil"),t(", "), t("extras:"),i(7, "nil"), t(")"),}),
s( {trig = "Lag.ar", name = "Lag.ar", dscr = "Snippet for Lag.ar, auto generated by SCNvim" }, {t("Lag.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("lagTime:"),i(2, "0.1"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Lag.kr", name = "Lag.kr", dscr = "Snippet for Lag.kr, auto generated by SCNvim" }, {t("Lag.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("lagTime:"),i(2, "0.1"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "LagControl.kr", name = "LagControl.kr", dscr = "Snippet for LagControl.kr, auto generated by SCNvim" }, {t("LagControl.kr"),t("("),t("values:"),i(1, "nil"),t(", "), t("lags:"),i(2, "nil"), t(")"),}),
s( {trig = "LagControl.ar", name = "LagControl.ar", dscr = "Snippet for LagControl.ar, auto generated by SCNvim" }, {t("LagControl.ar"),t("("),t("values:"),i(1, "nil"),t(", "), t("lags:"),i(2, "nil"), t(")"),}),
s( {trig = "LagControl.ir", name = "LagControl.ir", dscr = "Snippet for LagControl.ir, auto generated by SCNvim" }, {t("LagControl.ir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LagIn.kr", name = "LagIn.kr", dscr = "Snippet for LagIn.kr, auto generated by SCNvim" }, {t("LagIn.kr"),t("("),t("bus:"),i(1, "0"),t(", "), t("numChannels:"),i(2, "1"),t(", "), t("lag:"),i(3, "0.1"), t(")"),}),
s( {trig = "LagUD.ar", name = "LagUD.ar", dscr = "Snippet for LagUD.ar, auto generated by SCNvim" }, {t("LagUD.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("lagTimeU:"),i(2, "0.1"),t(", "), t("lagTimeD:"),i(3, "0.1"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "LagUD.kr", name = "LagUD.kr", dscr = "Snippet for LagUD.kr, auto generated by SCNvim" }, {t("LagUD.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("lagTimeU:"),i(2, "0.1"),t(", "), t("lagTimeD:"),i(3, "0.1"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "LanguageConfig.store", name = "LanguageConfig.store", dscr = "Snippet for LanguageConfig.store, auto generated by SCNvim" }, {t("LanguageConfig.store"),t("("),t("file:"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.currentPath", name = "LanguageConfig.currentPath", dscr = "Snippet for LanguageConfig.currentPath, auto generated by SCNvim" }, {t("LanguageConfig.currentPath"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.includePaths", name = "LanguageConfig.includePaths", dscr = "Snippet for LanguageConfig.includePaths, auto generated by SCNvim" }, {t("LanguageConfig.includePaths"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.addIncludePath", name = "LanguageConfig.addIncludePath", dscr = "Snippet for LanguageConfig.addIncludePath, auto generated by SCNvim" }, {t("LanguageConfig.addIncludePath"),t("("),t("aPath:"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.removeIncludePath", name = "LanguageConfig.removeIncludePath", dscr = "Snippet for LanguageConfig.removeIncludePath, auto generated by SCNvim" }, {t("LanguageConfig.removeIncludePath"),t("("),t("aPath:"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.excludePaths", name = "LanguageConfig.excludePaths", dscr = "Snippet for LanguageConfig.excludePaths, auto generated by SCNvim" }, {t("LanguageConfig.excludePaths"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.addExcludePath", name = "LanguageConfig.addExcludePath", dscr = "Snippet for LanguageConfig.addExcludePath, auto generated by SCNvim" }, {t("LanguageConfig.addExcludePath"),t("("),t("aPath:"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.removeExcludePath", name = "LanguageConfig.removeExcludePath", dscr = "Snippet for LanguageConfig.removeExcludePath, auto generated by SCNvim" }, {t("LanguageConfig.removeExcludePath"),t("("),t("aPath:"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.postInlineWarnings", name = "LanguageConfig.postInlineWarnings", dscr = "Snippet for LanguageConfig.postInlineWarnings, auto generated by SCNvim" }, {t("LanguageConfig.postInlineWarnings"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.postInlineWarnings_", name = "LanguageConfig.postInlineWarnings_", dscr = "Snippet for LanguageConfig.postInlineWarnings_, auto generated by SCNvim" }, {t("LanguageConfig.postInlineWarnings_"),t("("),t("aBoolean:"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.excludeDefaultPaths", name = "LanguageConfig.excludeDefaultPaths", dscr = "Snippet for LanguageConfig.excludeDefaultPaths, auto generated by SCNvim" }, {t("LanguageConfig.excludeDefaultPaths"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LanguageConfig.excludeDefaultPaths_", name = "LanguageConfig.excludeDefaultPaths_", dscr = "Snippet for LanguageConfig.excludeDefaultPaths_, auto generated by SCNvim" }, {t("LanguageConfig.excludeDefaultPaths_"),t("("),t("aBoolean:"),i(1, "nil"), t(")"),}),
s( {trig = "LastValue.ar", name = "LastValue.ar", dscr = "Snippet for LastValue.ar, auto generated by SCNvim" }, {t("LastValue.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("diff:"),i(2, "0.01"), t(")"),}),
s( {trig = "LastValue.kr", name = "LastValue.kr", dscr = "Snippet for LastValue.kr, auto generated by SCNvim" }, {t("LastValue.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("diff:"),i(2, "0.01"), t(")"),}),
s( {trig = "Latch.ar", name = "Latch.ar", dscr = "Snippet for Latch.ar, auto generated by SCNvim" }, {t("Latch.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trig:"),i(2, "0.0"), t(")"),}),
s( {trig = "Latch.kr", name = "Latch.kr", dscr = "Snippet for Latch.kr, auto generated by SCNvim" }, {t("Latch.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trig:"),i(2, "0.0"), t(")"),}),
s( {trig = "Latoocarfian2DN.ar", name = "Latoocarfian2DN.ar", dscr = "Snippet for Latoocarfian2DN.ar, auto generated by SCNvim" }, {t("Latoocarfian2DN.ar"),t("("),t("minfreq:"),i(1, "11025"),t(", "), t("maxfreq:"),i(2, "22050"),t(", "), t("a:"),i(3, "1"),t(", "), t("b:"),i(4, "3"),t(", "), t("c:"),i(5, "0.5"),t(", "), t("d:"),i(6, "0.5"),t(", "), t("x0:"),i(7, "0.34082301375036"),t(", "), t("y0:"),i(8, "-0.38270086971332"),t(", "), t("mul:"),i(9, "1"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "Latoocarfian2DN.kr", name = "Latoocarfian2DN.kr", dscr = "Snippet for Latoocarfian2DN.kr, auto generated by SCNvim" }, {t("Latoocarfian2DN.kr"),t("("),t("minfreq:"),i(1, "40"),t(", "), t("maxfreq:"),i(2, "100"),t(", "), t("a:"),i(3, "1"),t(", "), t("b:"),i(4, "3"),t(", "), t("c:"),i(5, "0.5"),t(", "), t("d:"),i(6, "0.5"),t(", "), t("x0:"),i(7, "0.34082301375036"),t(", "), t("y0:"),i(8, "-0.38270086971332"),t(", "), t("mul:"),i(9, "1"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "LatoocarfianN.ar", name = "LatoocarfianN.ar", dscr = "Snippet for LatoocarfianN.ar, auto generated by SCNvim" }, {t("LatoocarfianN.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a:"),i(2, "1"),t(", "), t("b:"),i(3, "3"),t(", "), t("c:"),i(4, "0.5"),t(", "), t("d:"),i(5, "0.5"),t(", "), t("xi:"),i(6, "0.5"),t(", "), t("yi:"),i(7, "0.5"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "LatoocarfianTrig.ar", name = "LatoocarfianTrig.ar", dscr = "Snippet for LatoocarfianTrig.ar, auto generated by SCNvim" }, {t("LatoocarfianTrig.ar"),t("("),t("minfreq:"),i(1, "5"),t(", "), t("maxfreq:"),i(2, "10"),t(", "), t("a:"),i(3, "1"),t(", "), t("b:"),i(4, "3"),t(", "), t("c:"),i(5, "0.5"),t(", "), t("d:"),i(6, "0.5"),t(", "), t("x0:"),i(7, "0.34082301375036"),t(", "), t("y0:"),i(8, "-0.38270086971332"),t(", "), t("mul:"),i(9, "1"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "LatoocarfianTrig.kr", name = "LatoocarfianTrig.kr", dscr = "Snippet for LatoocarfianTrig.kr, auto generated by SCNvim" }, {t("LatoocarfianTrig.kr"),t("("),t("minfreq:"),i(1, "5"),t(", "), t("maxfreq:"),i(2, "10"),t(", "), t("a:"),i(3, "1"),t(", "), t("b:"),i(4, "3"),t(", "), t("c:"),i(5, "0.5"),t(", "), t("d:"),i(6, "0.5"),t(", "), t("x0:"),i(7, "0.34082301375036"),t(", "), t("y0:"),i(8, "-0.38270086971332"),t(", "), t("mul:"),i(9, "1"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "LeakDC.ar", name = "LeakDC.ar", dscr = "Snippet for LeakDC.ar, auto generated by SCNvim" }, {t("LeakDC.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("coef:"),i(2, "0.995"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "LeakDC.kr", name = "LeakDC.kr", dscr = "Snippet for LeakDC.kr, auto generated by SCNvim" }, {t("LeakDC.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("coef:"),i(2, "0.9"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "LevelIndicator.qtClass", name = "LevelIndicator.qtClass", dscr = "Snippet for LevelIndicator.qtClass, auto generated by SCNvim" }, {t("LevelIndicator.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LevelIndicator.meterServer", name = "LevelIndicator.meterServer", dscr = "Snippet for LevelIndicator.meterServer, auto generated by SCNvim" }, {t("LevelIndicator.meterServer"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "Library.global", name = "Library.global", dscr = "Snippet for Library.global, auto generated by SCNvim" }, {t("Library.global"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Library.global_", name = "Library.global_", dscr = "Snippet for Library.global_, auto generated by SCNvim" }, {t("Library.global_"),t("("),t("obj:"),i(1, "nil"), t(")"),}),
s( {trig = "Library.initClass", name = "Library.initClass", dscr = "Snippet for Library.initClass, auto generated by SCNvim" }, {t("Library.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LibraryBase.global", name = "LibraryBase.global", dscr = "Snippet for LibraryBase.global, auto generated by SCNvim" }, {t("LibraryBase.global"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LibraryBase.global_", name = "LibraryBase.global_", dscr = "Snippet for LibraryBase.global_, auto generated by SCNvim" }, {t("LibraryBase.global_"),t("("),t("obj:"),i(1, "nil"), t(")"),}),
s( {trig = "LibraryBase.clear", name = "LibraryBase.clear", dscr = "Snippet for LibraryBase.clear, auto generated by SCNvim" }, {t("LibraryBase.clear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LibraryBase.at", name = "LibraryBase.at", dscr = "Snippet for LibraryBase.at, auto generated by SCNvim" }, {t("LibraryBase.at"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "LibraryBase.atList", name = "LibraryBase.atList", dscr = "Snippet for LibraryBase.atList, auto generated by SCNvim" }, {t("LibraryBase.atList"),t("("),t("args:"),i(1, "nil"), t(")"),}),
s( {trig = "LibraryBase.putList", name = "LibraryBase.putList", dscr = "Snippet for LibraryBase.putList, auto generated by SCNvim" }, {t("LibraryBase.putList"),t("("),t("args:"),i(1, "nil"), t(")"),}),
s( {trig = "LibraryBase.put", name = "LibraryBase.put", dscr = "Snippet for LibraryBase.put, auto generated by SCNvim" }, {t("LibraryBase.put"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "LibraryBase.create", name = "LibraryBase.create", dscr = "Snippet for LibraryBase.create, auto generated by SCNvim" }, {t("LibraryBase.create"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "LibraryBase.postTree", name = "LibraryBase.postTree", dscr = "Snippet for LibraryBase.postTree, auto generated by SCNvim" }, {t("LibraryBase.postTree"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LinCongN.ar", name = "LinCongN.ar", dscr = "Snippet for LinCongN.ar, auto generated by SCNvim" }, {t("LinCongN.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a:"),i(2, "1.1"),t(", "), t("c:"),i(3, "0.13"),t(", "), t("m:"),i(4, "1.0"),t(", "), t("xi:"),i(5, "0"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "LinExp.ar", name = "LinExp.ar", dscr = "Snippet for LinExp.ar, auto generated by SCNvim" }, {t("LinExp.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("srclo:"),i(2, "0.0"),t(", "), t("srchi:"),i(3, "1.0"),t(", "), t("dstlo:"),i(4, "1.0"),t(", "), t("dsthi:"),i(5, "2.0"), t(")"),}),
s( {trig = "LinExp.kr", name = "LinExp.kr", dscr = "Snippet for LinExp.kr, auto generated by SCNvim" }, {t("LinExp.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("srclo:"),i(2, "0.0"),t(", "), t("srchi:"),i(3, "1.0"),t(", "), t("dstlo:"),i(4, "1.0"),t(", "), t("dsthi:"),i(5, "2.0"), t(")"),}),
s( {trig = "LinLin.ar", name = "LinLin.ar", dscr = "Snippet for LinLin.ar, auto generated by SCNvim" }, {t("LinLin.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("srclo:"),i(2, "0.0"),t(", "), t("srchi:"),i(3, "1.0"),t(", "), t("dstlo:"),i(4, "1.0"),t(", "), t("dsthi:"),i(5, "2.0"), t(")"),}),
s( {trig = "LinLin.kr", name = "LinLin.kr", dscr = "Snippet for LinLin.kr, auto generated by SCNvim" }, {t("LinLin.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("srclo:"),i(2, "0.0"),t(", "), t("srchi:"),i(3, "1.0"),t(", "), t("dstlo:"),i(4, "1.0"),t(", "), t("dsthi:"),i(5, "2.0"), t(")"),}),
s( {trig = "LinRand.new", name = "LinRand.new", dscr = "Snippet for LinRand.new, auto generated by SCNvim" }, {t("LinRand.new"),t("("),t("lo:"),i(1, "0.0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("minmax:"),i(3, "0"), t(")"),}),
s( {trig = "LinSelectX.crossfadeClass", name = "LinSelectX.crossfadeClass", dscr = "Snippet for LinSelectX.crossfadeClass, auto generated by SCNvim" }, {t("LinSelectX.crossfadeClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LinXFade2.ar", name = "LinXFade2.ar", dscr = "Snippet for LinXFade2.ar, auto generated by SCNvim" }, {t("LinXFade2.ar"),t("("),t("inA:"),i(1, "nil"),t(", "), t("inB:"),i(2, "0.0"),t(", "), t("pan:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"), t(")"),}),
s( {trig = "LinXFade2.kr", name = "LinXFade2.kr", dscr = "Snippet for LinXFade2.kr, auto generated by SCNvim" }, {t("LinXFade2.kr"),t("("),t("inA:"),i(1, "nil"),t(", "), t("inB:"),i(2, "0.0"),t(", "), t("pan:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"), t(")"),}),
s( {trig = "Line.ar", name = "Line.ar", dscr = "Snippet for Line.ar, auto generated by SCNvim" }, {t("Line.ar"),t("("),t("start:"),i(1, "0.0"),t(", "), t("end:"),i(2, "1.0"),t(", "), t("dur:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"),t(", "), t("doneAction:"),i(6, "0"), t(")"),}),
s( {trig = "Line.kr", name = "Line.kr", dscr = "Snippet for Line.kr, auto generated by SCNvim" }, {t("Line.kr"),t("("),t("start:"),i(1, "0.0"),t(", "), t("end:"),i(2, "1.0"),t(", "), t("dur:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"),t(", "), t("doneAction:"),i(6, "0"), t(")"),}),
s( {trig = "LineLayout.new", name = "LineLayout.new", dscr = "Snippet for LineLayout.new, auto generated by SCNvim" }, {t("LineLayout.new"),t("("),t("items:"),i(1, "[]"), t(")"),}),
s( {trig = "LineLayout.parse", name = "LineLayout.parse", dscr = "Snippet for LineLayout.parse, auto generated by SCNvim" }, {t("LineLayout.parse"),t("("),t("in:"),i(1, "nil"), t(")"),}),
s( {trig = "Linen.kr", name = "Linen.kr", dscr = "Snippet for Linen.kr, auto generated by SCNvim" }, {t("Linen.kr"),t("("),t("gate:"),i(1, "1.0"),t(", "), t("attackTime:"),i(2, "0.01"),t(", "), t("susLevel:"),i(3, "1.0"),t(", "), t("releaseTime:"),i(4, "1.0"),t(", "), t("doneAction:"),i(5, "0"), t(")"),}),
s( {trig = "LinkClock.newFromTempoClock", name = "LinkClock.newFromTempoClock", dscr = "Snippet for LinkClock.newFromTempoClock, auto generated by SCNvim" }, {t("LinkClock.newFromTempoClock"),t("("),t("clock:"),i(1, "nil"), t(")"),}),
s( {trig = "LinkedListNode.new", name = "LinkedListNode.new", dscr = "Snippet for LinkedListNode.new, auto generated by SCNvim" }, {t("LinkedListNode.new"),t("("),t("item:"),i(1, "nil"), t(")"),}),
s( {trig = "LinuxPlatform.getTerminalEmulatorCmd", name = "LinuxPlatform.getTerminalEmulatorCmd", dscr = "Snippet for LinuxPlatform.getTerminalEmulatorCmd, auto generated by SCNvim" }, {t("LinuxPlatform.getTerminalEmulatorCmd"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "List.new", name = "List.new", dscr = "Snippet for List.new, auto generated by SCNvim" }, {t("List.new"),t("("),t("size:"),i(1, "8"), t(")"),}),
s( {trig = "List.newClear", name = "List.newClear", dscr = "Snippet for List.newClear, auto generated by SCNvim" }, {t("List.newClear"),t("("),t("size:"),i(1, "0"), t(")"),}),
s( {trig = "List.copyInstance", name = "List.copyInstance", dscr = "Snippet for List.copyInstance, auto generated by SCNvim" }, {t("List.copyInstance"),t("("),t("aList:"),i(1, "nil"), t(")"),}),
s( {trig = "List.newUsing", name = "List.newUsing", dscr = "Snippet for List.newUsing, auto generated by SCNvim" }, {t("List.newUsing"),t("("),t("anArray:"),i(1, "nil"), t(")"),}),
s( {trig = "ListDUGen.new", name = "ListDUGen.new", dscr = "Snippet for ListDUGen.new, auto generated by SCNvim" }, {t("ListDUGen.new"),t("("),t("list:"),i(1, "nil"),t(", "), t("repeats:"),i(2, "1"), t(")"),}),
s( {trig = "ListPattern.new", name = "ListPattern.new", dscr = "Snippet for ListPattern.new, auto generated by SCNvim" }, {t("ListPattern.new"),t("("),t("list:"),i(1, "nil"),t(", "), t("repeats:"),i(2, "1"), t(")"),}),
s( {trig = "ListTrig.kr", name = "ListTrig.kr", dscr = "Snippet for ListTrig.kr, auto generated by SCNvim" }, {t("ListTrig.kr"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("reset:"),i(2, "0"),t(", "), t("offset:"),i(3, "0"),t(", "), t("numframes:"),i(4, "nil"), t(")"),}),
s( {trig = "ListTrig.categories", name = "ListTrig.categories", dscr = "Snippet for ListTrig.categories, auto generated by SCNvim" }, {t("ListTrig.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ListTrig2.kr", name = "ListTrig2.kr", dscr = "Snippet for ListTrig2.kr, auto generated by SCNvim" }, {t("ListTrig2.kr"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("reset:"),i(2, "0"),t(", "), t("numframes:"),i(3, "nil"), t(")"),}),
s( {trig = "ListTrig2.categories", name = "ListTrig2.categories", dscr = "Snippet for ListTrig2.categories, auto generated by SCNvim" }, {t("ListTrig2.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ListView.qtClass", name = "ListView.qtClass", dscr = "Snippet for ListView.qtClass, auto generated by SCNvim" }, {t("ListView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ListView.new", name = "ListView.new", dscr = "Snippet for ListView.new, auto generated by SCNvim" }, {t("ListView.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "LocalBuf.new", name = "LocalBuf.new", dscr = "Snippet for LocalBuf.new, auto generated by SCNvim" }, {t("LocalBuf.new"),t("("),t("numFrames:"),i(1, "1"),t(", "), t("numChannels:"),i(2, "1"), t(")"),}),
s( {trig = "LocalBuf.new1", name = "LocalBuf.new1", dscr = "Snippet for LocalBuf.new1, auto generated by SCNvim" }, {t("LocalBuf.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("args:"),i(2, "[]"), t(")"),}),
s( {trig = "LocalBuf.newFrom", name = "LocalBuf.newFrom", dscr = "Snippet for LocalBuf.newFrom, auto generated by SCNvim" }, {t("LocalBuf.newFrom"),t("("),t("list:"),i(1, "nil"), t(")"),}),
s( {trig = "LocalIn.ar", name = "LocalIn.ar", dscr = "Snippet for LocalIn.ar, auto generated by SCNvim" }, {t("LocalIn.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("default:"),i(2, "0.0"), t(")"),}),
s( {trig = "LocalIn.kr", name = "LocalIn.kr", dscr = "Snippet for LocalIn.kr, auto generated by SCNvim" }, {t("LocalIn.kr"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("default:"),i(2, "0.0"), t(")"),}),
s( {trig = "LocalOut.ar", name = "LocalOut.ar", dscr = "Snippet for LocalOut.ar, auto generated by SCNvim" }, {t("LocalOut.ar"),t("("),t("channelsArray:"),i(1, "nil"), t(")"),}),
s( {trig = "LocalOut.kr", name = "LocalOut.kr", dscr = "Snippet for LocalOut.kr, auto generated by SCNvim" }, {t("LocalOut.kr"),t("("),t("channelsArray:"),i(1, "nil"), t(")"),}),
s( {trig = "LocalOut.numFixedArgs", name = "LocalOut.numFixedArgs", dscr = "Snippet for LocalOut.numFixedArgs, auto generated by SCNvim" }, {t("LocalOut.numFixedArgs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Logger.kr", name = "Logger.kr", dscr = "Snippet for Logger.kr, auto generated by SCNvim" }, {t("Logger.kr"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("trig:"),i(2, "0.0"),t(", "), t("bufnum:"),i(3, "0"),t(", "), t("reset:"),i(4, "0.0"), t(")"),}),
s( {trig = "Logger.categories", name = "Logger.categories", dscr = "Snippet for Logger.categories, auto generated by SCNvim" }, {t("Logger.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Logistic.ar", name = "Logistic.ar", dscr = "Snippet for Logistic.ar, auto generated by SCNvim" }, {t("Logistic.ar"),t("("),t("chaosParam:"),i(1, "3.0"),t(", "), t("freq:"),i(2, "1000.0"),t(", "), t("init:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Logistic.kr", name = "Logistic.kr", dscr = "Snippet for Logistic.kr, auto generated by SCNvim" }, {t("Logistic.kr"),t("("),t("chaosParam:"),i(1, "3.0"),t(", "), t("freq:"),i(2, "1000.0"),t(", "), t("init:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "LoopBuf.ar", name = "LoopBuf.ar", dscr = "Snippet for LoopBuf.ar, auto generated by SCNvim" }, {t("LoopBuf.ar"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("rate:"),i(3, "1.0"),t(", "), t("gate:"),i(4, "1.0"),t(", "), t("startPos:"),i(5, "0.0"),t(", "), t("startLoop:"),i(6, "nil"),t(", "), t("endLoop:"),i(7, "nil"),t(", "), t("interpolation:"),i(8, "2"), t(")"),}),
s( {trig = "Lorenz2DN.ar", name = "Lorenz2DN.ar", dscr = "Snippet for Lorenz2DN.ar, auto generated by SCNvim" }, {t("Lorenz2DN.ar"),t("("),t("minfreq:"),i(1, "11025"),t(", "), t("maxfreq:"),i(2, "22050"),t(", "), t("s:"),i(3, "10"),t(", "), t("r:"),i(4, "28"),t(", "), t("b:"),i(5, "2.6666667"),t(", "), t("h:"),i(6, "0.02"),t(", "), t("x0:"),i(7, "0.090879182417163"),t(", "), t("y0:"),i(8, "2.97077458055"),t(", "), t("z0:"),i(9, "24.282041054363"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "Lorenz2DN.kr", name = "Lorenz2DN.kr", dscr = "Snippet for Lorenz2DN.kr, auto generated by SCNvim" }, {t("Lorenz2DN.kr"),t("("),t("minfreq:"),i(1, "40"),t(", "), t("maxfreq:"),i(2, "100"),t(", "), t("s:"),i(3, "10"),t(", "), t("r:"),i(4, "28"),t(", "), t("b:"),i(5, "2.6666667"),t(", "), t("h:"),i(6, "0.02"),t(", "), t("x0:"),i(7, "0.090879182417163"),t(", "), t("y0:"),i(8, "2.97077458055"),t(", "), t("z0:"),i(9, "24.282041054363"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "LorenzL.ar", name = "LorenzL.ar", dscr = "Snippet for LorenzL.ar, auto generated by SCNvim" }, {t("LorenzL.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("s:"),i(2, "10"),t(", "), t("r:"),i(3, "28"),t(", "), t("b:"),i(4, "2.667"),t(", "), t("h:"),i(5, "0.05"),t(", "), t("xi:"),i(6, "0.1"),t(", "), t("yi:"),i(7, "0"),t(", "), t("zi:"),i(8, "0"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "LorenzTrig.ar", name = "LorenzTrig.ar", dscr = "Snippet for LorenzTrig.ar, auto generated by SCNvim" }, {t("LorenzTrig.ar"),t("("),t("minfreq:"),i(1, "11025"),t(", "), t("maxfreq:"),i(2, "22050"),t(", "), t("s:"),i(3, "10"),t(", "), t("r:"),i(4, "28"),t(", "), t("b:"),i(5, "2.6666667"),t(", "), t("h:"),i(6, "0.02"),t(", "), t("x0:"),i(7, "0.090879182417163"),t(", "), t("y0:"),i(8, "2.97077458055"),t(", "), t("z0:"),i(9, "24.282041054363"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "LorenzTrig.kr", name = "LorenzTrig.kr", dscr = "Snippet for LorenzTrig.kr, auto generated by SCNvim" }, {t("LorenzTrig.kr"),t("("),t("minfreq:"),i(1, "40"),t(", "), t("maxfreq:"),i(2, "100"),t(", "), t("s:"),i(3, "10"),t(", "), t("r:"),i(4, "28"),t(", "), t("b:"),i(5, "2.6666667"),t(", "), t("h:"),i(6, "0.02"),t(", "), t("x0:"),i(7, "0.090879182417163"),t(", "), t("y0:"),i(8, "2.97077458055"),t(", "), t("z0:"),i(9, "24.282041054363"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "LotkaVolterra.categories", name = "LotkaVolterra.categories", dscr = "Snippet for LotkaVolterra.categories, auto generated by SCNvim" }, {t("LotkaVolterra.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "LotkaVolterra.ar", name = "LotkaVolterra.ar", dscr = "Snippet for LotkaVolterra.ar, auto generated by SCNvim" }, {t("LotkaVolterra.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a:"),i(2, "1.5"),t(", "), t("b:"),i(3, "1.5"),t(", "), t("c:"),i(4, "0.5"),t(", "), t("d:"),i(5, "1.5"),t(", "), t("h:"),i(6, "0.05"),t(", "), t("xi:"),i(7, "1"),t(", "), t("yi:"),i(8, "0.2"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "Loudness.kr", name = "Loudness.kr", dscr = "Snippet for Loudness.kr, auto generated by SCNvim" }, {t("Loudness.kr"),t("("),t("chain:"),i(1, "nil"),t(", "), t("smask:"),i(2, "0.25"),t(", "), t("tmask:"),i(3, "1"), t(")"),}),
s( {trig = "LowShelf.ar", name = "LowShelf.ar", dscr = "Snippet for LowShelf.ar, auto generated by SCNvim" }, {t("LowShelf.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440"),t(", "), t("shelfslope:"),i(3, "1"),t(", "), t("dbgain:"),i(4, "0"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "MCLDChaosGen.categories", name = "MCLDChaosGen.categories", dscr = "Snippet for MCLDChaosGen.categories, auto generated by SCNvim" }, {t("MCLDChaosGen.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MFCC.kr", name = "MFCC.kr", dscr = "Snippet for MFCC.kr, auto generated by SCNvim" }, {t("MFCC.kr"),t("("),t("chain:"),i(1, "nil"),t(", "), t("numcoeff:"),i(2, "13"), t(")"),}),
s( {trig = "MIDIClient.init", name = "MIDIClient.init", dscr = "Snippet for MIDIClient.init, auto generated by SCNvim" }, {t("MIDIClient.init"),t("("),t("inports:"),i(1, "nil"),t(", "), t("outports:"),i(2, "nil"),t(", "), t("verbose:"),i(3, "true"), t(")"),}),
s( {trig = "MIDIClient.list", name = "MIDIClient.list", dscr = "Snippet for MIDIClient.list, auto generated by SCNvim" }, {t("MIDIClient.list"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIClient.prInit", name = "MIDIClient.prInit", dscr = "Snippet for MIDIClient.prInit, auto generated by SCNvim" }, {t("MIDIClient.prInit"),t("("),t("inports:"),i(1, "nil"),t(", "), t("outports:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIClient.prInitClient", name = "MIDIClient.prInitClient", dscr = "Snippet for MIDIClient.prInitClient, auto generated by SCNvim" }, {t("MIDIClient.prInitClient"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIClient.prList", name = "MIDIClient.prList", dscr = "Snippet for MIDIClient.prList, auto generated by SCNvim" }, {t("MIDIClient.prList"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIClient.disposeClient", name = "MIDIClient.disposeClient", dscr = "Snippet for MIDIClient.disposeClient, auto generated by SCNvim" }, {t("MIDIClient.disposeClient"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIClient.prDisposeClient", name = "MIDIClient.prDisposeClient", dscr = "Snippet for MIDIClient.prDisposeClient, auto generated by SCNvim" }, {t("MIDIClient.prDisposeClient"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIClient.restart", name = "MIDIClient.restart", dscr = "Snippet for MIDIClient.restart, auto generated by SCNvim" }, {t("MIDIClient.restart"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIClient.externalSources", name = "MIDIClient.externalSources", dscr = "Snippet for MIDIClient.externalSources, auto generated by SCNvim" }, {t("MIDIClient.externalSources"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIClient.externalDestinations", name = "MIDIClient.externalDestinations", dscr = "Snippet for MIDIClient.externalDestinations, auto generated by SCNvim" }, {t("MIDIClient.externalDestinations"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIClient.getClientID", name = "MIDIClient.getClientID", dscr = "Snippet for MIDIClient.getClientID, auto generated by SCNvim" }, {t("MIDIClient.getClientID"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIEndPoint.new", name = "MIDIEndPoint.new", dscr = "Snippet for MIDIEndPoint.new, auto generated by SCNvim" }, {t("MIDIEndPoint.new"),t("("),t("device:"),i(1, "nil"),t(", "), t("name:"),i(2, "nil"),t(", "), t("uid:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIEvent.new", name = "MIDIEvent.new", dscr = "Snippet for MIDIEvent.new, auto generated by SCNvim" }, {t("MIDIEvent.new"),t("("),t("status:"),i(1, "nil"),t(", "), t("port:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("b:"),i(4, "nil"),t(", "), t("c:"),i(5, "nil"),t(", "), t("thread:"),i(6, "nil"), t(")"),}),
s( {trig = "MIDIFunc.initClass", name = "MIDIFunc.initClass", dscr = "Snippet for MIDIFunc.initClass, auto generated by SCNvim" }, {t("MIDIFunc.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIFunc.trace", name = "MIDIFunc.trace", dscr = "Snippet for MIDIFunc.trace, auto generated by SCNvim" }, {t("MIDIFunc.trace"),t("("),t("bool:"),i(1, "true"), t(")"),}),
s( {trig = "MIDIFunc.cmdPeriod", name = "MIDIFunc.cmdPeriod", dscr = "Snippet for MIDIFunc.cmdPeriod, auto generated by SCNvim" }, {t("MIDIFunc.cmdPeriod"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIFunc.new", name = "MIDIFunc.new", dscr = "Snippet for MIDIFunc.new, auto generated by SCNvim" }, {t("MIDIFunc.new"),t("("),t("func:"),i(1, "nil"),t(", "), t("msgNum:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("msgType:"),i(4, "nil"),t(", "), t("srcID:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"),t(", "), t("dispatcher:"),i(7, "nil"), t(")"),}),
s( {trig = "MIDIFunc.cc", name = "MIDIFunc.cc", dscr = "Snippet for MIDIFunc.cc, auto generated by SCNvim" }, {t("MIDIFunc.cc"),t("("),t("func:"),i(1, "nil"),t(", "), t("ccNum:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("srcID:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("dispatcher:"),i(6, "nil"), t(")"),}),
s( {trig = "MIDIFunc.noteOn", name = "MIDIFunc.noteOn", dscr = "Snippet for MIDIFunc.noteOn, auto generated by SCNvim" }, {t("MIDIFunc.noteOn"),t("("),t("func:"),i(1, "nil"),t(", "), t("noteNum:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("srcID:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("dispatcher:"),i(6, "nil"), t(")"),}),
s( {trig = "MIDIFunc.noteOff", name = "MIDIFunc.noteOff", dscr = "Snippet for MIDIFunc.noteOff, auto generated by SCNvim" }, {t("MIDIFunc.noteOff"),t("("),t("func:"),i(1, "nil"),t(", "), t("noteNum:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("srcID:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("dispatcher:"),i(6, "nil"), t(")"),}),
s( {trig = "MIDIFunc.polytouch", name = "MIDIFunc.polytouch", dscr = "Snippet for MIDIFunc.polytouch, auto generated by SCNvim" }, {t("MIDIFunc.polytouch"),t("("),t("func:"),i(1, "nil"),t(", "), t("noteNum:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("srcID:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("dispatcher:"),i(6, "nil"), t(")"),}),
s( {trig = "MIDIFunc.touch", name = "MIDIFunc.touch", dscr = "Snippet for MIDIFunc.touch, auto generated by SCNvim" }, {t("MIDIFunc.touch"),t("("),t("func:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("argTemplate:"),i(4, "nil"),t(", "), t("dispatcher:"),i(5, "nil"), t(")"),}),
s( {trig = "MIDIFunc.bend", name = "MIDIFunc.bend", dscr = "Snippet for MIDIFunc.bend, auto generated by SCNvim" }, {t("MIDIFunc.bend"),t("("),t("func:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("argTemplate:"),i(4, "nil"),t(", "), t("dispatcher:"),i(5, "nil"), t(")"),}),
s( {trig = "MIDIFunc.program", name = "MIDIFunc.program", dscr = "Snippet for MIDIFunc.program, auto generated by SCNvim" }, {t("MIDIFunc.program"),t("("),t("func:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("argTemplate:"),i(4, "nil"),t(", "), t("dispatcher:"),i(5, "nil"), t(")"),}),
s( {trig = "MIDIFunc.sysex", name = "MIDIFunc.sysex", dscr = "Snippet for MIDIFunc.sysex, auto generated by SCNvim" }, {t("MIDIFunc.sysex"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("argTemplate:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIFunc.mtcQuarterFrame", name = "MIDIFunc.mtcQuarterFrame", dscr = "Snippet for MIDIFunc.mtcQuarterFrame, auto generated by SCNvim" }, {t("MIDIFunc.mtcQuarterFrame"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("argTemplate:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIFunc.smpte", name = "MIDIFunc.smpte", dscr = "Snippet for MIDIFunc.smpte, auto generated by SCNvim" }, {t("MIDIFunc.smpte"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("argTemplate:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIFunc.songPosition", name = "MIDIFunc.songPosition", dscr = "Snippet for MIDIFunc.songPosition, auto generated by SCNvim" }, {t("MIDIFunc.songPosition"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("argTemplate:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIFunc.songSelect", name = "MIDIFunc.songSelect", dscr = "Snippet for MIDIFunc.songSelect, auto generated by SCNvim" }, {t("MIDIFunc.songSelect"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("argTemplate:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIFunc.tuneRequest", name = "MIDIFunc.tuneRequest", dscr = "Snippet for MIDIFunc.tuneRequest, auto generated by SCNvim" }, {t("MIDIFunc.tuneRequest"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("dispatcher:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIFunc.midiClock", name = "MIDIFunc.midiClock", dscr = "Snippet for MIDIFunc.midiClock, auto generated by SCNvim" }, {t("MIDIFunc.midiClock"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("dispatcher:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIFunc.sysrt", name = "MIDIFunc.sysrt", dscr = "Snippet for MIDIFunc.sysrt, auto generated by SCNvim" }, {t("MIDIFunc.sysrt"),t("("),t("func:"),i(1, "nil"),t(", "), t("index:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("argTemplate:"),i(4, "nil"),t(", "), t("dispatcher:"),i(5, "nil"), t(")"),}),
s( {trig = "MIDIFunc.tick", name = "MIDIFunc.tick", dscr = "Snippet for MIDIFunc.tick, auto generated by SCNvim" }, {t("MIDIFunc.tick"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("dispatcher:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIFunc.start", name = "MIDIFunc.start", dscr = "Snippet for MIDIFunc.start, auto generated by SCNvim" }, {t("MIDIFunc.start"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("dispatcher:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIFunc.continue", name = "MIDIFunc.continue", dscr = "Snippet for MIDIFunc.continue, auto generated by SCNvim" }, {t("MIDIFunc.continue"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("dispatcher:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIFunc.stop", name = "MIDIFunc.stop", dscr = "Snippet for MIDIFunc.stop, auto generated by SCNvim" }, {t("MIDIFunc.stop"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("dispatcher:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIFunc.activeSense", name = "MIDIFunc.activeSense", dscr = "Snippet for MIDIFunc.activeSense, auto generated by SCNvim" }, {t("MIDIFunc.activeSense"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("dispatcher:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIFunc.reset", name = "MIDIFunc.reset", dscr = "Snippet for MIDIFunc.reset, auto generated by SCNvim" }, {t("MIDIFunc.reset"),t("("),t("func:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("dispatcher:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIFuncBothCAMessageMatcher.new", name = "MIDIFuncBothCAMessageMatcher.new", dscr = "Snippet for MIDIFuncBothCAMessageMatcher.new, auto generated by SCNvim" }, {t("MIDIFuncBothCAMessageMatcher.new"),t("("),t("chanArray:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("func:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIFuncBothMessageMatcher.new", name = "MIDIFuncBothMessageMatcher.new", dscr = "Snippet for MIDIFuncBothMessageMatcher.new, auto generated by SCNvim" }, {t("MIDIFuncBothMessageMatcher.new"),t("("),t("chan:"),i(1, "nil"),t(", "), t("srcID:"),i(2, "nil"),t(", "), t("func:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIFuncChanArrayMessageMatcher.new", name = "MIDIFuncChanArrayMessageMatcher.new", dscr = "Snippet for MIDIFuncChanArrayMessageMatcher.new, auto generated by SCNvim" }, {t("MIDIFuncChanArrayMessageMatcher.new"),t("("),t("chanArray:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIFuncChanMessageMatcher.new", name = "MIDIFuncChanMessageMatcher.new", dscr = "Snippet for MIDIFuncChanMessageMatcher.new, auto generated by SCNvim" }, {t("MIDIFuncChanMessageMatcher.new"),t("("),t("chan:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIFuncSrcMessageMatcher.new", name = "MIDIFuncSrcMessageMatcher.new", dscr = "Snippet for MIDIFuncSrcMessageMatcher.new, auto generated by SCNvim" }, {t("MIDIFuncSrcMessageMatcher.new"),t("("),t("srcID:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIIn.addFuncTo", name = "MIDIIn.addFuncTo", dscr = "Snippet for MIDIIn.addFuncTo, auto generated by SCNvim" }, {t("MIDIIn.addFuncTo"),t("("),t("what:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIIn.removeFuncFrom", name = "MIDIIn.removeFuncFrom", dscr = "Snippet for MIDIIn.removeFuncFrom, auto generated by SCNvim" }, {t("MIDIIn.removeFuncFrom"),t("("),t("what:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIIn.replaceFuncTo", name = "MIDIIn.replaceFuncTo", dscr = "Snippet for MIDIIn.replaceFuncTo, auto generated by SCNvim" }, {t("MIDIIn.replaceFuncTo"),t("("),t("what:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("newFunc:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIIn.waitNoteOn", name = "MIDIIn.waitNoteOn", dscr = "Snippet for MIDIIn.waitNoteOn, auto generated by SCNvim" }, {t("MIDIIn.waitNoteOn"),t("("),t("port:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("note:"),i(3, "nil"),t(", "), t("veloc:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIIn.waitNoteOff", name = "MIDIIn.waitNoteOff", dscr = "Snippet for MIDIIn.waitNoteOff, auto generated by SCNvim" }, {t("MIDIIn.waitNoteOff"),t("("),t("port:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("note:"),i(3, "nil"),t(", "), t("veloc:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIIn.waitPoly", name = "MIDIIn.waitPoly", dscr = "Snippet for MIDIIn.waitPoly, auto generated by SCNvim" }, {t("MIDIIn.waitPoly"),t("("),t("port:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("note:"),i(3, "nil"),t(", "), t("veloc:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIIn.waitTouch", name = "MIDIIn.waitTouch", dscr = "Snippet for MIDIIn.waitTouch, auto generated by SCNvim" }, {t("MIDIIn.waitTouch"),t("("),t("port:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("val:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIIn.waitControl", name = "MIDIIn.waitControl", dscr = "Snippet for MIDIIn.waitControl, auto generated by SCNvim" }, {t("MIDIIn.waitControl"),t("("),t("port:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("num:"),i(3, "nil"),t(", "), t("val:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIIn.waitBend", name = "MIDIIn.waitBend", dscr = "Snippet for MIDIIn.waitBend, auto generated by SCNvim" }, {t("MIDIIn.waitBend"),t("("),t("port:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("val:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIIn.waitProgram", name = "MIDIIn.waitProgram", dscr = "Snippet for MIDIIn.waitProgram, auto generated by SCNvim" }, {t("MIDIIn.waitProgram"),t("("),t("port:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("num:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIIn.doAction", name = "MIDIIn.doAction", dscr = "Snippet for MIDIIn.doAction, auto generated by SCNvim" }, {t("MIDIIn.doAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("status:"),i(2, "nil"),t(", "), t("a:"),i(3, "nil"),t(", "), t("b:"),i(4, "nil"),t(", "), t("c:"),i(5, "nil"), t(")"),}),
s( {trig = "MIDIIn.doNoteOnAction", name = "MIDIIn.doNoteOnAction", dscr = "Snippet for MIDIIn.doNoteOnAction, auto generated by SCNvim" }, {t("MIDIIn.doNoteOnAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("num:"),i(3, "nil"),t(", "), t("veloc:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIIn.doNoteOffAction", name = "MIDIIn.doNoteOffAction", dscr = "Snippet for MIDIIn.doNoteOffAction, auto generated by SCNvim" }, {t("MIDIIn.doNoteOffAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("num:"),i(3, "nil"),t(", "), t("veloc:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIIn.doPolyTouchAction", name = "MIDIIn.doPolyTouchAction", dscr = "Snippet for MIDIIn.doPolyTouchAction, auto generated by SCNvim" }, {t("MIDIIn.doPolyTouchAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("num:"),i(3, "nil"),t(", "), t("val:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIIn.doControlAction", name = "MIDIIn.doControlAction", dscr = "Snippet for MIDIIn.doControlAction, auto generated by SCNvim" }, {t("MIDIIn.doControlAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("num:"),i(3, "nil"),t(", "), t("val:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIIn.doProgramAction", name = "MIDIIn.doProgramAction", dscr = "Snippet for MIDIIn.doProgramAction, auto generated by SCNvim" }, {t("MIDIIn.doProgramAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("val:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIIn.doTouchAction", name = "MIDIIn.doTouchAction", dscr = "Snippet for MIDIIn.doTouchAction, auto generated by SCNvim" }, {t("MIDIIn.doTouchAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("val:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIIn.doBendAction", name = "MIDIIn.doBendAction", dscr = "Snippet for MIDIIn.doBendAction, auto generated by SCNvim" }, {t("MIDIIn.doBendAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("chan:"),i(2, "nil"),t(", "), t("val:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIIn.doSysexAction", name = "MIDIIn.doSysexAction", dscr = "Snippet for MIDIIn.doSysexAction, auto generated by SCNvim" }, {t("MIDIIn.doSysexAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("packet:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIIn.doInvalidSysexAction", name = "MIDIIn.doInvalidSysexAction", dscr = "Snippet for MIDIIn.doInvalidSysexAction, auto generated by SCNvim" }, {t("MIDIIn.doInvalidSysexAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("packet:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIIn.doSysrtAction", name = "MIDIIn.doSysrtAction", dscr = "Snippet for MIDIIn.doSysrtAction, auto generated by SCNvim" }, {t("MIDIIn.doSysrtAction"),t("("),t("src:"),i(1, "nil"),t(", "), t("index:"),i(2, "nil"),t(", "), t("val:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIIn.doSMPTEaction", name = "MIDIIn.doSMPTEaction", dscr = "Snippet for MIDIIn.doSMPTEaction, auto generated by SCNvim" }, {t("MIDIIn.doSMPTEaction"),t("("),t("src:"),i(1, "nil"),t(", "), t("frameRate:"),i(2, "nil"),t(", "), t("timecode:"),i(3, "nil"), t(")"),}),
s( {trig = "MIDIIn.findPort", name = "MIDIIn.findPort", dscr = "Snippet for MIDIIn.findPort, auto generated by SCNvim" }, {t("MIDIIn.findPort"),t("("),t("deviceName:"),i(1, "nil"),t(", "), t("portName:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIIn.disconnectAll", name = "MIDIIn.disconnectAll", dscr = "Snippet for MIDIIn.disconnectAll, auto generated by SCNvim" }, {t("MIDIIn.disconnectAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIIn.connectAll", name = "MIDIIn.connectAll", dscr = "Snippet for MIDIIn.connectAll, auto generated by SCNvim" }, {t("MIDIIn.connectAll"),t("("),t("verbose:"),i(1, "true"), t(")"),}),
s( {trig = "MIDIIn.connect", name = "MIDIIn.connect", dscr = "Snippet for MIDIIn.connect, auto generated by SCNvim" }, {t("MIDIIn.connect"),t("("),t("inport:"),i(1, "0"),t(", "), t("device:"),i(2, "0"), t(")"),}),
s( {trig = "MIDIIn.disconnect", name = "MIDIIn.disconnect", dscr = "Snippet for MIDIIn.disconnect, auto generated by SCNvim" }, {t("MIDIIn.disconnect"),t("("),t("inport:"),i(1, "0"),t(", "), t("device:"),i(2, "0"), t(")"),}),
s( {trig = "MIDIIn.connectByUID", name = "MIDIIn.connectByUID", dscr = "Snippet for MIDIIn.connectByUID, auto generated by SCNvim" }, {t("MIDIIn.connectByUID"),t("("),t("inport:"),i(1, "nil"),t(", "), t("uid:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIIn.disconnectByUID", name = "MIDIIn.disconnectByUID", dscr = "Snippet for MIDIIn.disconnectByUID, auto generated by SCNvim" }, {t("MIDIIn.disconnectByUID"),t("("),t("inport:"),i(1, "nil"),t(", "), t("uid:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIIn.prDispatchEvent", name = "MIDIIn.prDispatchEvent", dscr = "Snippet for MIDIIn.prDispatchEvent, auto generated by SCNvim" }, {t("MIDIIn.prDispatchEvent"),t("("),t("eventList:"),i(1, "nil"),t(", "), t("status:"),i(2, "nil"),t(", "), t("port:"),i(3, "nil"),t(", "), t("chan:"),i(4, "nil"),t(", "), t("b:"),i(5, "nil"),t(", "), t("c:"),i(6, "nil"), t(")"),}),
s( {trig = "MIDIMessageDispatcher.new", name = "MIDIMessageDispatcher.new", dscr = "Snippet for MIDIMessageDispatcher.new, auto generated by SCNvim" }, {t("MIDIMessageDispatcher.new"),t("("),t("messageType:"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIOut.new", name = "MIDIOut.new", dscr = "Snippet for MIDIOut.new, auto generated by SCNvim" }, {t("MIDIOut.new"),t("("),t("port:"),i(1, "nil"),t(", "), t("uid:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIOut.newByName", name = "MIDIOut.newByName", dscr = "Snippet for MIDIOut.newByName, auto generated by SCNvim" }, {t("MIDIOut.newByName"),t("("),t("deviceName:"),i(1, "nil"),t(", "), t("portName:"),i(2, "nil"),t(", "), t("dieIfNotFound:"),i(3, "true"), t(")"),}),
s( {trig = "MIDIOut.findPort", name = "MIDIOut.findPort", dscr = "Snippet for MIDIOut.findPort, auto generated by SCNvim" }, {t("MIDIOut.findPort"),t("("),t("deviceName:"),i(1, "nil"),t(", "), t("portName:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIOut.connect", name = "MIDIOut.connect", dscr = "Snippet for MIDIOut.connect, auto generated by SCNvim" }, {t("MIDIOut.connect"),t("("),t("outport:"),i(1, "0"),t(", "), t("device:"),i(2, "0"), t(")"),}),
s( {trig = "MIDIOut.disconnect", name = "MIDIOut.disconnect", dscr = "Snippet for MIDIOut.disconnect, auto generated by SCNvim" }, {t("MIDIOut.disconnect"),t("("),t("outport:"),i(1, "0"),t(", "), t("device:"),i(2, "0"), t(")"),}),
s( {trig = "MIDIOut.connectByUID", name = "MIDIOut.connectByUID", dscr = "Snippet for MIDIOut.connectByUID, auto generated by SCNvim" }, {t("MIDIOut.connectByUID"),t("("),t("outport:"),i(1, "nil"),t(", "), t("uid:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIOut.disconnectByUID", name = "MIDIOut.disconnectByUID", dscr = "Snippet for MIDIOut.disconnectByUID, auto generated by SCNvim" }, {t("MIDIOut.disconnectByUID"),t("("),t("outport:"),i(1, "nil"),t(", "), t("uid:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIResponder.removeAll", name = "MIDIResponder.removeAll", dscr = "Snippet for MIDIResponder.removeAll, auto generated by SCNvim" }, {t("MIDIResponder.removeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDISMPTEAssembler.new", name = "MIDISMPTEAssembler.new", dscr = "Snippet for MIDISMPTEAssembler.new, auto generated by SCNvim" }, {t("MIDISMPTEAssembler.new"),t("("),t("func:"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIValueMatcher.new", name = "MIDIValueMatcher.new", dscr = "Snippet for MIDIValueMatcher.new, auto generated by SCNvim" }, {t("MIDIValueMatcher.new"),t("("),t("argTemplate:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "MIDIdef.initClass", name = "MIDIdef.initClass", dscr = "Snippet for MIDIdef.initClass, auto generated by SCNvim" }, {t("MIDIdef.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MIDIdef.new", name = "MIDIdef.new", dscr = "Snippet for MIDIdef.new, auto generated by SCNvim" }, {t("MIDIdef.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("msgNum:"),i(3, "nil"),t(", "), t("chan:"),i(4, "nil"),t(", "), t("msgType:"),i(5, "nil"),t(", "), t("srcID:"),i(6, "nil"),t(", "), t("argTemplate:"),i(7, "nil"),t(", "), t("dispatcher:"),i(8, "nil"), t(")"),}),
s( {trig = "MIDIdef.cc", name = "MIDIdef.cc", dscr = "Snippet for MIDIdef.cc, auto generated by SCNvim" }, {t("MIDIdef.cc"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("ccNum:"),i(3, "nil"),t(", "), t("chan:"),i(4, "nil"),t(", "), t("srcID:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"),t(", "), t("dispatcher:"),i(7, "nil"), t(")"),}),
s( {trig = "MIDIdef.noteOn", name = "MIDIdef.noteOn", dscr = "Snippet for MIDIdef.noteOn, auto generated by SCNvim" }, {t("MIDIdef.noteOn"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("noteNum:"),i(3, "nil"),t(", "), t("chan:"),i(4, "nil"),t(", "), t("srcID:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"),t(", "), t("dispatcher:"),i(7, "nil"), t(")"),}),
s( {trig = "MIDIdef.noteOff", name = "MIDIdef.noteOff", dscr = "Snippet for MIDIdef.noteOff, auto generated by SCNvim" }, {t("MIDIdef.noteOff"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("noteNum:"),i(3, "nil"),t(", "), t("chan:"),i(4, "nil"),t(", "), t("srcID:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"),t(", "), t("dispatcher:"),i(7, "nil"), t(")"),}),
s( {trig = "MIDIdef.polytouch", name = "MIDIdef.polytouch", dscr = "Snippet for MIDIdef.polytouch, auto generated by SCNvim" }, {t("MIDIdef.polytouch"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("noteNum:"),i(3, "nil"),t(", "), t("chan:"),i(4, "nil"),t(", "), t("srcID:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"),t(", "), t("dispatcher:"),i(7, "nil"), t(")"),}),
s( {trig = "MIDIdef.touch", name = "MIDIdef.touch", dscr = "Snippet for MIDIdef.touch, auto generated by SCNvim" }, {t("MIDIdef.touch"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("srcID:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("dispatcher:"),i(6, "nil"), t(")"),}),
s( {trig = "MIDIdef.bend", name = "MIDIdef.bend", dscr = "Snippet for MIDIdef.bend, auto generated by SCNvim" }, {t("MIDIdef.bend"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("srcID:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("dispatcher:"),i(6, "nil"), t(")"),}),
s( {trig = "MIDIdef.program", name = "MIDIdef.program", dscr = "Snippet for MIDIdef.program, auto generated by SCNvim" }, {t("MIDIdef.program"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("srcID:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("dispatcher:"),i(6, "nil"), t(")"),}),
s( {trig = "MIDIdef.sysex", name = "MIDIdef.sysex", dscr = "Snippet for MIDIdef.sysex, auto generated by SCNvim" }, {t("MIDIdef.sysex"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("argTemplate:"),i(4, "nil"),t(", "), t("dispatcher:"),i(5, "nil"), t(")"),}),
s( {trig = "MIDIdef.mtcQuarterFrame", name = "MIDIdef.mtcQuarterFrame", dscr = "Snippet for MIDIdef.mtcQuarterFrame, auto generated by SCNvim" }, {t("MIDIdef.mtcQuarterFrame"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("argTemplate:"),i(4, "nil"),t(", "), t("dispatcher:"),i(5, "nil"), t(")"),}),
s( {trig = "MIDIdef.smpte", name = "MIDIdef.smpte", dscr = "Snippet for MIDIdef.smpte, auto generated by SCNvim" }, {t("MIDIdef.smpte"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("argTemplate:"),i(4, "nil"),t(", "), t("dispatcher:"),i(5, "nil"), t(")"),}),
s( {trig = "MIDIdef.songPosition", name = "MIDIdef.songPosition", dscr = "Snippet for MIDIdef.songPosition, auto generated by SCNvim" }, {t("MIDIdef.songPosition"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("argTemplate:"),i(4, "nil"),t(", "), t("dispatcher:"),i(5, "nil"), t(")"),}),
s( {trig = "MIDIdef.songSelect", name = "MIDIdef.songSelect", dscr = "Snippet for MIDIdef.songSelect, auto generated by SCNvim" }, {t("MIDIdef.songSelect"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("argTemplate:"),i(4, "nil"),t(", "), t("dispatcher:"),i(5, "nil"), t(")"),}),
s( {trig = "MIDIdef.tuneRequest", name = "MIDIdef.tuneRequest", dscr = "Snippet for MIDIdef.tuneRequest, auto generated by SCNvim" }, {t("MIDIdef.tuneRequest"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIdef.midiClock", name = "MIDIdef.midiClock", dscr = "Snippet for MIDIdef.midiClock, auto generated by SCNvim" }, {t("MIDIdef.midiClock"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIdef.sysrt", name = "MIDIdef.sysrt", dscr = "Snippet for MIDIdef.sysrt, auto generated by SCNvim" }, {t("MIDIdef.sysrt"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("index:"),i(3, "nil"),t(", "), t("srcID:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("dispatcher:"),i(6, "nil"), t(")"),}),
s( {trig = "MIDIdef.tick", name = "MIDIdef.tick", dscr = "Snippet for MIDIdef.tick, auto generated by SCNvim" }, {t("MIDIdef.tick"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIdef.start", name = "MIDIdef.start", dscr = "Snippet for MIDIdef.start, auto generated by SCNvim" }, {t("MIDIdef.start"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIdef.continue", name = "MIDIdef.continue", dscr = "Snippet for MIDIdef.continue, auto generated by SCNvim" }, {t("MIDIdef.continue"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIdef.stop", name = "MIDIdef.stop", dscr = "Snippet for MIDIdef.stop, auto generated by SCNvim" }, {t("MIDIdef.stop"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIdef.activeSense", name = "MIDIdef.activeSense", dscr = "Snippet for MIDIdef.activeSense, auto generated by SCNvim" }, {t("MIDIdef.activeSense"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIdef.reset", name = "MIDIdef.reset", dscr = "Snippet for MIDIdef.reset, auto generated by SCNvim" }, {t("MIDIdef.reset"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("dispatcher:"),i(4, "nil"), t(")"),}),
s( {trig = "MIDIdef.freeAll", name = "MIDIdef.freeAll", dscr = "Snippet for MIDIdef.freeAll, auto generated by SCNvim" }, {t("MIDIdef.freeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Main.version", name = "Main.version", dscr = "Snippet for Main.version, auto generated by SCNvim" }, {t("Main.version"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Main.scVersionMajor", name = "Main.scVersionMajor", dscr = "Snippet for Main.scVersionMajor, auto generated by SCNvim" }, {t("Main.scVersionMajor"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Main.scVersionMinor", name = "Main.scVersionMinor", dscr = "Snippet for Main.scVersionMinor, auto generated by SCNvim" }, {t("Main.scVersionMinor"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Main.scVersionPatch", name = "Main.scVersionPatch", dscr = "Snippet for Main.scVersionPatch, auto generated by SCNvim" }, {t("Main.scVersionPatch"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Main.scVersionTweak", name = "Main.scVersionTweak", dscr = "Snippet for Main.scVersionTweak, auto generated by SCNvim" }, {t("Main.scVersionTweak"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Main.versionAtLeast", name = "Main.versionAtLeast", dscr = "Snippet for Main.versionAtLeast, auto generated by SCNvim" }, {t("Main.versionAtLeast"),t("("),t("maj:"),i(1, "nil"),t(", "), t("min:"),i(2, "nil"),t(", "), t("patch:"),i(3, "nil"), t(")"),}),
s( {trig = "Main.versionAtMost", name = "Main.versionAtMost", dscr = "Snippet for Main.versionAtMost, auto generated by SCNvim" }, {t("Main.versionAtMost"),t("("),t("maj:"),i(1, "nil"),t(", "), t("min:"),i(2, "nil"),t(", "), t("patch:"),i(3, "nil"), t(")"),}),
s( {trig = "Main.overwriteMsg", name = "Main.overwriteMsg", dscr = "Snippet for Main.overwriteMsg, auto generated by SCNvim" }, {t("Main.overwriteMsg"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Main.packages", name = "Main.packages", dscr = "Snippet for Main.packages, auto generated by SCNvim" }, {t("Main.packages"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Main.scVersionPostfix", name = "Main.scVersionPostfix", dscr = "Snippet for Main.scVersionPostfix, auto generated by SCNvim" }, {t("Main.scVersionPostfix"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.initClass", name = "MainMenu.initClass", dscr = "Snippet for MainMenu.initClass, auto generated by SCNvim" }, {t("MainMenu.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.initBuiltInMenus", name = "MainMenu.initBuiltInMenus", dscr = "Snippet for MainMenu.initBuiltInMenus, auto generated by SCNvim" }, {t("MainMenu.initBuiltInMenus"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.register", name = "MainMenu.register", dscr = "Snippet for MainMenu.register, auto generated by SCNvim" }, {t("MainMenu.register"),t("("),t("action:"),i(1, "nil"),t(", "), t("menu:"),i(2, "nil"),t(", "), t("group:"),i(3, "none"), t(")"),}),
s( {trig = "MainMenu.unregister", name = "MainMenu.unregister", dscr = "Snippet for MainMenu.unregister, auto generated by SCNvim" }, {t("MainMenu.unregister"),t("("),t("removeAction:"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.registerQuarkMenu", name = "MainMenu.registerQuarkMenu", dscr = "Snippet for MainMenu.registerQuarkMenu, auto generated by SCNvim" }, {t("MainMenu.registerQuarkMenu"),t("("),t("quarkName:"),i(1, "nil"),t(", "), t("menu:"),i(2, "nil"), t(")"),}),
s( {trig = "MainMenu.unregisterQuarkMenu", name = "MainMenu.unregisterQuarkMenu", dscr = "Snippet for MainMenu.unregisterQuarkMenu, auto generated by SCNvim" }, {t("MainMenu.unregisterQuarkMenu"),t("("),t("quarkName:"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.clear", name = "MainMenu.clear", dscr = "Snippet for MainMenu.clear, auto generated by SCNvim" }, {t("MainMenu.clear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.add", name = "MainMenu.add", dscr = "Snippet for MainMenu.add, auto generated by SCNvim" }, {t("MainMenu.add"),t("("),t("menu:"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.remove", name = "MainMenu.remove", dscr = "Snippet for MainMenu.remove, auto generated by SCNvim" }, {t("MainMenu.remove"),t("("),t("menu:"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.insert", name = "MainMenu.insert", dscr = "Snippet for MainMenu.insert, auto generated by SCNvim" }, {t("MainMenu.insert"),t("("),t("index:"),i(1, "nil"),t(", "), t("menu:"),i(2, "nil"), t(")"),}),
s( {trig = "MainMenu.prGetMenu", name = "MainMenu.prGetMenu", dscr = "Snippet for MainMenu.prGetMenu, auto generated by SCNvim" }, {t("MainMenu.prGetMenu"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.prGetMenuGroup", name = "MainMenu.prGetMenuGroup", dscr = "Snippet for MainMenu.prGetMenuGroup, auto generated by SCNvim" }, {t("MainMenu.prGetMenuGroup"),t("("),t("menuName:"),i(1, "nil"),t(", "), t("groupName:"),i(2, "nil"), t(")"),}),
s( {trig = "MainMenu.prUpdateServersMenu", name = "MainMenu.prUpdateServersMenu", dscr = "Snippet for MainMenu.prUpdateServersMenu, auto generated by SCNvim" }, {t("MainMenu.prUpdateServersMenu"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.prBuildAppMenus", name = "MainMenu.prBuildAppMenus", dscr = "Snippet for MainMenu.prBuildAppMenus, auto generated by SCNvim" }, {t("MainMenu.prBuildAppMenus"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.prUpdate", name = "MainMenu.prUpdate", dscr = "Snippet for MainMenu.prUpdate, auto generated by SCNvim" }, {t("MainMenu.prUpdate"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MainMenu.prSetAppMenus", name = "MainMenu.prSetAppMenus", dscr = "Snippet for MainMenu.prSetAppMenus, auto generated by SCNvim" }, {t("MainMenu.prSetAppMenus"),t("("),t("menus:"),i(1, "nil"), t(")"),}),
s( {trig = "MantissaMask.ar", name = "MantissaMask.ar", dscr = "Snippet for MantissaMask.ar, auto generated by SCNvim" }, {t("MantissaMask.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("bits:"),i(2, "3"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "MantissaMask.kr", name = "MantissaMask.kr", dscr = "Snippet for MantissaMask.kr, auto generated by SCNvim" }, {t("MantissaMask.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("bits:"),i(2, "3"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "MarkovSet.new", name = "MarkovSet.new", dscr = "Snippet for MarkovSet.new, auto generated by SCNvim" }, {t("MarkovSet.new"),t("("),t("args:"),i(1, "nil"),t(", "), t("updateSeeds:"),i(2, "false"), t(")"),}),
s( {trig = "MarkovSet.fill", name = "MarkovSet.fill", dscr = "Snippet for MarkovSet.fill, auto generated by SCNvim" }, {t("MarkovSet.fill"),t("("),t("length:"),i(1, "nil"),t(", "), t("stream:"),i(2, "nil"), t(")"),}),
s( {trig = "MarkovSetN.new", name = "MarkovSetN.new", dscr = "Snippet for MarkovSetN.new, auto generated by SCNvim" }, {t("MarkovSetN.new"),t("("),t("args:"),i(1, "nil"),t(", "), t("order:"),i(2, "1"),t(", "), t("updateSeeds:"),i(3, "false"), t(")"),}),
s( {trig = "MarkovSetN.fill", name = "MarkovSetN.fill", dscr = "Snippet for MarkovSetN.fill, auto generated by SCNvim" }, {t("MarkovSetN.fill"),t("("),t("n:"),i(1, "nil"),t(", "), t("stream:"),i(2, "nil"),t(", "), t("order:"),i(3, "1"), t(")"),}),
s( {trig = "MarkovSynth.ar", name = "MarkovSynth.ar", dscr = "Snippet for MarkovSynth.ar, auto generated by SCNvim" }, {t("MarkovSynth.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("isRecording:"),i(2, "1"),t(", "), t("waitTime:"),i(3, "2"),t(", "), t("tableSize:"),i(4, "10"), t(")"),}),
s( {trig = "MatchingP.ar", name = "MatchingP.ar", dscr = "Snippet for MatchingP.ar, auto generated by SCNvim" }, {t("MatchingP.ar"),t("("),t("dict:"),i(1, "0"),t(", "), t("in:"),i(2, "0"),t(", "), t("dictsize:"),i(3, "1"),t(", "), t("ntofind:"),i(4, "1"),t(", "), t("hop:"),i(5, "1"),t(", "), t("method:"),i(6, "0"), t(")"),}),
s( {trig = "MatchingP.kr", name = "MatchingP.kr", dscr = "Snippet for MatchingP.kr, auto generated by SCNvim" }, {t("MatchingP.kr"),t("("),t("dict:"),i(1, "0"),t(", "), t("in:"),i(2, "0"),t(", "), t("dictsize:"),i(3, "1"),t(", "), t("ntofind:"),i(4, "1"),t(", "), t("hop:"),i(5, "1"),t(", "), t("method:"),i(6, "0"), t(")"),}),
s( {trig = "MatchingP.categories", name = "MatchingP.categories", dscr = "Snippet for MatchingP.categories, auto generated by SCNvim" }, {t("MatchingP.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MatchingPResynth.ar", name = "MatchingPResynth.ar", dscr = "Snippet for MatchingPResynth.ar, auto generated by SCNvim" }, {t("MatchingPResynth.ar"),t("("),t("dict:"),i(1, "nil"),t(", "), t("method:"),i(2, "0"),t(", "), t("trigger:"),i(3, "nil"),t(", "), t("residual:"),i(4, "0"),t(", "), t("activs:"),i(5, "[]"), t(")"),}),
s( {trig = "MatchingPResynth.kr", name = "MatchingPResynth.kr", dscr = "Snippet for MatchingPResynth.kr, auto generated by SCNvim" }, {t("MatchingPResynth.kr"),t("("),t("dict:"),i(1, "nil"),t(", "), t("method:"),i(2, "0"),t(", "), t("trigger:"),i(3, "nil"),t(", "), t("residual:"),i(4, "0"),t(", "), t("activs:"),i(5, "[]"), t(")"),}),
s( {trig = "MatchingPResynth.categories", name = "MatchingPResynth.categories", dscr = "Snippet for MatchingPResynth.categories, auto generated by SCNvim" }, {t("MatchingPResynth.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Matrix.newClear", name = "Matrix.newClear", dscr = "Snippet for Matrix.newClear, auto generated by SCNvim" }, {t("Matrix.newClear"),t("("),t("rows:"),i(1, "1"),t(", "), t("cols:"),i(2, "1"), t(")"),}),
s( {trig = "Matrix.with", name = "Matrix.with", dscr = "Snippet for Matrix.with, auto generated by SCNvim" }, {t("Matrix.with"),t("("),t("array:"),i(1, "nil"), t(")"),}),
s( {trig = "Matrix.withFlatArray", name = "Matrix.withFlatArray", dscr = "Snippet for Matrix.withFlatArray, auto generated by SCNvim" }, {t("Matrix.withFlatArray"),t("("),t("rows:"),i(1, "nil"),t(", "), t("cols:"),i(2, "nil"),t(", "), t("array:"),i(3, "nil"), t(")"),}),
s( {trig = "Matrix.newIdentity", name = "Matrix.newIdentity", dscr = "Snippet for Matrix.newIdentity, auto generated by SCNvim" }, {t("Matrix.newIdentity"),t("("),t("n:"),i(1, "nil"), t(")"),}),
s( {trig = "Matrix.fill", name = "Matrix.fill", dscr = "Snippet for Matrix.fill, auto generated by SCNvim" }, {t("Matrix.fill"),t("("),t("rows:"),i(1, "nil"),t(", "), t("cols:"),i(2, "nil"),t(", "), t("func:"),i(3, "nil"), t(")"),}),
s( {trig = "Matrix.newDiagonal", name = "Matrix.newDiagonal", dscr = "Snippet for Matrix.newDiagonal, auto generated by SCNvim" }, {t("Matrix.newDiagonal"),t("("),t("diagonal:"),i(1, "nil"), t(")"),}),
s( {trig = "Matrix.newDFT", name = "Matrix.newDFT", dscr = "Snippet for Matrix.newDFT, auto generated by SCNvim" }, {t("Matrix.newDFT"),t("("),t("n:"),i(1, "nil"), t(")"),}),
s( {trig = "Matrix.newIDFT", name = "Matrix.newIDFT", dscr = "Snippet for Matrix.newIDFT, auto generated by SCNvim" }, {t("Matrix.newIDFT"),t("("),t("n:"),i(1, "nil"), t(")"),}),
s( {trig = "Matrix.mul", name = "Matrix.mul", dscr = "Snippet for Matrix.mul, auto generated by SCNvim" }, {t("Matrix.mul"),t("("),t("m1:"),i(1, "0"),t(", "), t("m2:"),i(2, "0"), t(")"),}),
s( {trig = "Max.kr", name = "Max.kr", dscr = "Snippet for Max.kr, auto generated by SCNvim" }, {t("Max.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamp:"),i(2, "64"), t(")"),}),
s( {trig = "MaxLocalBufs.new", name = "MaxLocalBufs.new", dscr = "Snippet for MaxLocalBufs.new, auto generated by SCNvim" }, {t("MaxLocalBufs.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Maxamp.ar", name = "Maxamp.ar", dscr = "Snippet for Maxamp.ar, auto generated by SCNvim" }, {t("Maxamp.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("numSamps:"),i(2, "1000"), t(")"),}),
s( {trig = "MdaPiano.ar", name = "MdaPiano.ar", dscr = "Snippet for MdaPiano.ar, auto generated by SCNvim" }, {t("MdaPiano.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("gate:"),i(2, "1"),t(", "), t("vel:"),i(3, "100"),t(", "), t("decay:"),i(4, "0.8"),t(", "), t("release:"),i(5, "0.8"),t(", "), t("hard:"),i(6, "0.8"),t(", "), t("velhard:"),i(7, "0.8"),t(", "), t("muffle:"),i(8, "0.8"),t(", "), t("velmuff:"),i(9, "0.8"),t(", "), t("velcurve:"),i(10, "0.8"),t(", "), t("stereo:"),i(11, "0.2"),t(", "), t("tune:"),i(12, "0.5"),t(", "), t("random:"),i(13, "0.1"),t(", "), t("stretch:"),i(14, "0.1"),t(", "), t("sustain:"),i(15, "0"),t(", "), t("mul:"),i(16, "1"),t(", "), t("add:"),i(17, "0"), t(")"),}),
s( {trig = "MeanTriggered.ar", name = "MeanTriggered.ar", dscr = "Snippet for MeanTriggered.ar, auto generated by SCNvim" }, {t("MeanTriggered.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trig:"),i(2, "0.0"),t(", "), t("length:"),i(3, "10"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "MeanTriggered.kr", name = "MeanTriggered.kr", dscr = "Snippet for MeanTriggered.kr, auto generated by SCNvim" }, {t("MeanTriggered.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trig:"),i(2, "0.0"),t(", "), t("length:"),i(3, "10"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "MeanTriggered.categories", name = "MeanTriggered.categories", dscr = "Snippet for MeanTriggered.categories, auto generated by SCNvim" }, {t("MeanTriggered.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Meddis.ar", name = "Meddis.ar", dscr = "Snippet for Meddis.ar, auto generated by SCNvim" }, {t("Meddis.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Meddis.kr", name = "Meddis.kr", dscr = "Snippet for Meddis.kr, auto generated by SCNvim" }, {t("Meddis.kr"),t("("),t("input:"),i(1, "nil"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Median.ar", name = "Median.ar", dscr = "Snippet for Median.ar, auto generated by SCNvim" }, {t("Median.ar"),t("("),t("length:"),i(1, "3"),t(", "), t("in:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Median.kr", name = "Median.kr", dscr = "Snippet for Median.kr, auto generated by SCNvim" }, {t("Median.kr"),t("("),t("length:"),i(1, "3"),t(", "), t("in:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "MedianSeparation.new", name = "MedianSeparation.new", dscr = "Snippet for MedianSeparation.new, auto generated by SCNvim" }, {t("MedianSeparation.new"),t("("),t("fft:"),i(1, "nil"),t(", "), t("fftharmonic:"),i(2, "nil"),t(", "), t("fftpercussive:"),i(3, "nil"),t(", "), t("fftsize:"),i(4, "1024"),t(", "), t("mediansize:"),i(5, "17"),t(", "), t("hardorsoft:"),i(6, "0"),t(", "), t("p:"),i(7, "2"),t(", "), t("medianormax:"),i(8, "0"), t(")"),}),
s( {trig = "MedianTriggered.ar", name = "MedianTriggered.ar", dscr = "Snippet for MedianTriggered.ar, auto generated by SCNvim" }, {t("MedianTriggered.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trig:"),i(2, "0.0"),t(", "), t("length:"),i(3, "10"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "MedianTriggered.kr", name = "MedianTriggered.kr", dscr = "Snippet for MedianTriggered.kr, auto generated by SCNvim" }, {t("MedianTriggered.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trig:"),i(2, "0.0"),t(", "), t("length:"),i(3, "10"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "MedianTriggered.categories", name = "MedianTriggered.categories", dscr = "Snippet for MedianTriggered.categories, auto generated by SCNvim" }, {t("MedianTriggered.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MembraneCircle.ar", name = "MembraneCircle.ar", dscr = "Snippet for MembraneCircle.ar, auto generated by SCNvim" }, {t("MembraneCircle.ar"),t("("),t("excitation:"),i(1, "nil"),t(", "), t("tension:"),i(2, "0.05"),t(", "), t("loss:"),i(3, "0.99999"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "MembraneHexagon.ar", name = "MembraneHexagon.ar", dscr = "Snippet for MembraneHexagon.ar, auto generated by SCNvim" }, {t("MembraneHexagon.ar"),t("("),t("excitation:"),i(1, "nil"),t(", "), t("tension:"),i(2, "0.05"),t(", "), t("loss:"),i(3, "0.99999"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Menu.qtClass", name = "Menu.qtClass", dscr = "Snippet for Menu.qtClass, auto generated by SCNvim" }, {t("Menu.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Menu.new", name = "Menu.new", dscr = "Snippet for Menu.new, auto generated by SCNvim" }, {t("Menu.new"),t("("),t("actions:"),i(1, "[]"), t(")"),}),
s( {trig = "Menu.newFrom", name = "Menu.newFrom", dscr = "Snippet for Menu.newFrom, auto generated by SCNvim" }, {t("Menu.newFrom"),t("("),t("otherMenu:"),i(1, "nil"), t(")"),}),
s( {trig = "MenuAction.qtClass", name = "MenuAction.qtClass", dscr = "Snippet for MenuAction.qtClass, auto generated by SCNvim" }, {t("MenuAction.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MenuAction.new", name = "MenuAction.new", dscr = "Snippet for MenuAction.new, auto generated by SCNvim" }, {t("MenuAction.new"),t("("),t("string:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "MenuAction.separator", name = "MenuAction.separator", dscr = "Snippet for MenuAction.separator, auto generated by SCNvim" }, {t("MenuAction.separator"),t("("),t("string:"),i(1, "nil"), t(")"),}),
s( {trig = "Message.new", name = "Message.new", dscr = "Snippet for Message.new, auto generated by SCNvim" }, {t("Message.new"),t("("),t("receiver:"),i(1, "nil"),t(", "), t("selector:"),i(2, "nil"),t(", "), t("args:"),i(3, "nil"), t(")"),}),
s( {trig = "MeterSync.new", name = "MeterSync.new", dscr = "Snippet for MeterSync.new, auto generated by SCNvim" }, {t("MeterSync.new"),t("("),t("clock:"),i(1, "nil"),t(", "), t("id:"),i(2, "nil"),t(", "), t("ports:"),i(3, "nil"), t(")"),}),
s( {trig = "MethodError.new", name = "MethodError.new", dscr = "Snippet for MethodError.new, auto generated by SCNvim" }, {t("MethodError.new"),t("("),t("what:"),i(1, "nil"),t(", "), t("receiver:"),i(2, "nil"), t(")"),}),
s( {trig = "MethodOverride.new", name = "MethodOverride.new", dscr = "Snippet for MethodOverride.new, auto generated by SCNvim" }, {t("MethodOverride.new"),t("("),t("ownerClass:"),i(1, "nil"),t(", "), t("selector:"),i(2, "nil"),t(", "), t("activePath:"),i(3, "nil"),t(", "), t("overriddenPath:"),i(4, "nil"), t(")"),}),
s( {trig = "MethodOverride.fromLine", name = "MethodOverride.fromLine", dscr = "Snippet for MethodOverride.fromLine, auto generated by SCNvim" }, {t("MethodOverride.fromLine"),t("("),t("string:"),i(1, "nil"), t(")"),}),
s( {trig = "MethodOverride.all", name = "MethodOverride.all", dscr = "Snippet for MethodOverride.all, auto generated by SCNvim" }, {t("MethodOverride.all"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MethodOverride.printAll", name = "MethodOverride.printAll", dscr = "Snippet for MethodOverride.printAll, auto generated by SCNvim" }, {t("MethodOverride.printAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MethodOverride.printAllShort", name = "MethodOverride.printAllShort", dscr = "Snippet for MethodOverride.printAllShort, auto generated by SCNvim" }, {t("MethodOverride.printAllShort"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MethodQuote.new", name = "MethodQuote.new", dscr = "Snippet for MethodQuote.new, auto generated by SCNvim" }, {t("MethodQuote.new"),t("("),t("selector:"),i(1, "nil"), t(")"),}),
s( {trig = "Metro.ar", name = "Metro.ar", dscr = "Snippet for Metro.ar, auto generated by SCNvim" }, {t("Metro.ar"),t("("),t("bpm:"),i(1, "nil"),t(", "), t("numBeats:"),i(2, "nil"),t(", "), t("mul:"),i(3, "1"),t(", "), t("add:"),i(4, "0"), t(")"),}),
s( {trig = "Metro.kr", name = "Metro.kr", dscr = "Snippet for Metro.kr, auto generated by SCNvim" }, {t("Metro.kr"),t("("),t("bpm:"),i(1, "nil"),t(", "), t("numBeats:"),i(2, "nil"),t(", "), t("mul:"),i(3, "1"),t(", "), t("add:"),i(4, "0"), t(")"),}),
s( {trig = "MiBraids.ar", name = "MiBraids.ar", dscr = "Snippet for MiBraids.ar, auto generated by SCNvim" }, {t("MiBraids.ar"),t("("),t("pitch:"),i(1, "60.0"),t(", "), t("timbre:"),i(2, "0.5"),t(", "), t("color:"),i(3, "0.5"),t(", "), t("model:"),i(4, "0"),t(", "), t("trig:"),i(5, "0"),t(", "), t("resamp:"),i(6, "0"),t(", "), t("decim:"),i(7, "0"),t(", "), t("bits:"),i(8, "0"),t(", "), t("ws:"),i(9, "0"),t(", "), t("mul:"),i(10, "1.0"), t(")"),}),
s( {trig = "MiClouds.ar", name = "MiClouds.ar", dscr = "Snippet for MiClouds.ar, auto generated by SCNvim" }, {t("MiClouds.ar"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("pit:"),i(2, "0"),t(", "), t("pos:"),i(3, "0.5"),t(", "), t("size:"),i(4, "0.25"),t(", "), t("dens:"),i(5, "0.4"),t(", "), t("tex:"),i(6, "0.5"),t(", "), t("drywet:"),i(7, "0.5"),t(", "), t("in_gain:"),i(8, "1"),t(", "), t("spread:"),i(9, "0.5"),t(", "), t("rvb:"),i(10, "0"),t(", "), t("fb:"),i(11, "0"),t(", "), t("freeze:"),i(12, "0"),t(", "), t("mode:"),i(13, "0"),t(", "), t("lofi:"),i(14, "0"),t(", "), t("trig:"),i(15, "0"),t(", "), t("mul:"),i(16, "1.0"),t(", "), t("add:"),i(17, "0.0"), t(")"),}),
s( {trig = "MiElements.ar", name = "MiElements.ar", dscr = "Snippet for MiElements.ar, auto generated by SCNvim" }, {t("MiElements.ar"),t("("),t("blow_in:"),i(1, "0"),t(", "), t("strike_in:"),i(2, "0"),t(", "), t("gate:"),i(3, "0"),t(", "), t("pit:"),i(4, "48"),t(", "), t("strength:"),i(5, "0.5"),t(", "), t("contour:"),i(6, "0.2"),t(", "), t("bow_level:"),i(7, "0"),t(", "), t("blow_level:"),i(8, "0"),t(", "), t("strike_level:"),i(9, "0"),t(", "), t("flow:"),i(10, "0.5"),t(", "), t("mallet:"),i(11, "0.5"),t(", "), t("bow_timb:"),i(12, "0.5"),t(", "), t("blow_timb:"),i(13, "0.5"),t(", "), t("strike_timb:"),i(14, "0.5"),t(", "), t("geom:"),i(15, "0.25"),t(", "), t("bright:"),i(16, "0.5"),t(", "), t("damp:"),i(17, "0.7"),t(", "), t("pos:"),i(18, "0.2"),t(", "), t("space:"),i(19, "0.3"),t(", "), t("model:"),i(20, "0"),t(", "), t("easteregg:"),i(21, "0"),t(", "), t("mul:"),i(22, "1.0"),t(", "), t("add:"),i(23, "0"), t(")"),}),
s( {trig = "MiGrids.ar", name = "MiGrids.ar", dscr = "Snippet for MiGrids.ar, auto generated by SCNvim" }, {t("MiGrids.ar"),t("("),t("on_off:"),i(1, "1"),t(", "), t("bpm:"),i(2, "120"),t(", "), t("map_x:"),i(3, "0.5"),t(", "), t("map_y:"),i(4, "0.5"),t(", "), t("chaos:"),i(5, "0"),t(", "), t("bd_dens:"),i(6, "0.25"),t(", "), t("sd_dens:"),i(7, "0.25"),t(", "), t("hh_dens:"),i(8, "0.25"),t(", "), t("clock_trig:"),i(9, "0"),t(", "), t("reset_trig:"),i(10, "0"),t(", "), t("ext_clock:"),i(11, "0"),t(", "), t("mode:"),i(12, "0"),t(", "), t("swing:"),i(13, "0"),t(", "), t("config:"),i(14, "0"),t(", "), t("reso:"),i(15, "2"), t(")"),}),
s( {trig = "MiMu.ar", name = "MiMu.ar", dscr = "Snippet for MiMu.ar, auto generated by SCNvim" }, {t("MiMu.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("gain:"),i(2, "1.0"),t(", "), t("bypass:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "MiOmi.ar", name = "MiOmi.ar", dscr = "Snippet for MiOmi.ar, auto generated by SCNvim" }, {t("MiOmi.ar"),t("("),t("audio_in:"),i(1, "0"),t(", "), t("gate:"),i(2, "0"),t(", "), t("pit:"),i(3, "48"),t(", "), t("contour:"),i(4, "0.2"),t(", "), t("detune:"),i(5, "0.25"),t(", "), t("level1:"),i(6, "0.5"),t(", "), t("level2:"),i(7, "0.5"),t(", "), t("ratio1:"),i(8, "0.5"),t(", "), t("ratio2:"),i(9, "0.5"),t(", "), t("fm1:"),i(10, "0"),t(", "), t("fm2:"),i(11, "0"),t(", "), t("fb:"),i(12, "0"),t(", "), t("xfb:"),i(13, "0"),t(", "), t("filter_mode:"),i(14, "0"),t(", "), t("cutoff:"),i(15, "0.5"),t(", "), t("reson:"),i(16, "0"),t(", "), t("strength:"),i(17, "0.5"),t(", "), t("env:"),i(18, "0.5"),t(", "), t("rotate:"),i(19, "0.2"),t(", "), t("space:"),i(20, "0.5"),t(", "), t("mul:"),i(21, "1.0"),t(", "), t("add:"),i(22, "0"), t(")"),}),
s( {trig = "MiPlaits.ar", name = "MiPlaits.ar", dscr = "Snippet for MiPlaits.ar, auto generated by SCNvim" }, {t("MiPlaits.ar"),t("("),t("pitch:"),i(1, "60.0"),t(", "), t("engine:"),i(2, "0"),t(", "), t("harm:"),i(3, "0.1"),t(", "), t("timbre:"),i(4, "0.5"),t(", "), t("morph:"),i(5, "0.5"),t(", "), t("trigger:"),i(6, "0.0"),t(", "), t("level:"),i(7, "0"),t(", "), t("fm_mod:"),i(8, "0.0"),t(", "), t("timb_mod:"),i(9, "0.0"),t(", "), t("morph_mod:"),i(10, "0.0"),t(", "), t("decay:"),i(11, "0.5"),t(", "), t("lpg_colour:"),i(12, "0.5"),t(", "), t("mul:"),i(13, "1.0"), t(")"),}),
s( {trig = "MiRings.ar", name = "MiRings.ar", dscr = "Snippet for MiRings.ar, auto generated by SCNvim" }, {t("MiRings.ar"),t("("),t("in:"),i(1, "0"),t(", "), t("trig:"),i(2, "0"),t(", "), t("pit:"),i(3, "60.0"),t(", "), t("struct:"),i(4, "0.25"),t(", "), t("bright:"),i(5, "0.5"),t(", "), t("damp:"),i(6, "0.7"),t(", "), t("pos:"),i(7, "0.25"),t(", "), t("model:"),i(8, "0"),t(", "), t("poly:"),i(9, "1"),t(", "), t("intern_exciter:"),i(10, "0"),t(", "), t("easteregg:"),i(11, "0"),t(", "), t("bypass:"),i(12, "0"),t(", "), t("mul:"),i(13, "1.0"),t(", "), t("add:"),i(14, "0"), t(")"),}),
s( {trig = "MiRipples.ar", name = "MiRipples.ar", dscr = "Snippet for MiRipples.ar, auto generated by SCNvim" }, {t("MiRipples.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("cf:"),i(2, "0.3"),t(", "), t("reson:"),i(3, "0.2"),t(", "), t("drive:"),i(4, "1.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "MiTides.ar", name = "MiTides.ar", dscr = "Snippet for MiTides.ar, auto generated by SCNvim" }, {t("MiTides.ar"),t("("),t("freq:"),i(1, "1"),t(", "), t("shape:"),i(2, "0.5"),t(", "), t("slope:"),i(3, "0.5"),t(", "), t("smooth:"),i(4, "0.5"),t(", "), t("shift:"),i(5, "0.2"),t(", "), t("trig:"),i(6, "0"),t(", "), t("clock:"),i(7, "0"),t(", "), t("output_mode:"),i(8, "3"),t(", "), t("ramp_mode:"),i(9, "1"),t(", "), t("ratio:"),i(10, "9"),t(", "), t("rate:"),i(11, "1"),t(", "), t("mul:"),i(12, "1.0"),t(", "), t("add:"),i(13, "0.0"), t(")"),}),
s( {trig = "MiVerb.ar", name = "MiVerb.ar", dscr = "Snippet for MiVerb.ar, auto generated by SCNvim" }, {t("MiVerb.ar"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("time:"),i(2, "0.7"),t(", "), t("drywet:"),i(3, "0.5"),t(", "), t("damp:"),i(4, "0.5"),t(", "), t("hp:"),i(5, "0.05"),t(", "), t("freeze:"),i(6, "0"),t(", "), t("diff:"),i(7, "0.625"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "MiWarps.ar", name = "MiWarps.ar", dscr = "Snippet for MiWarps.ar, auto generated by SCNvim" }, {t("MiWarps.ar"),t("("),t("carrier:"),i(1, "0"),t(", "), t("modulator:"),i(2, "0"),t(", "), t("lev1:"),i(3, "0.5"),t(", "), t("lev2:"),i(4, "0.5"),t(", "), t("algo:"),i(5, "0"),t(", "), t("timb:"),i(6, "0"),t(", "), t("osc:"),i(7, "0"),t(", "), t("freq:"),i(8, "110"),t(", "), t("vgain:"),i(9, "1"),t(", "), t("easteregg:"),i(10, "0"), t(")"),}),
s( {trig = "MidEQ.ar", name = "MidEQ.ar", dscr = "Snippet for MidEQ.ar, auto generated by SCNvim" }, {t("MidEQ.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("db:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "MidEQ.kr", name = "MidEQ.kr", dscr = "Snippet for MidEQ.kr, auto generated by SCNvim" }, {t("MidEQ.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("db:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "Mix.new", name = "Mix.new", dscr = "Snippet for Mix.new, auto generated by SCNvim" }, {t("Mix.new"),t("("),t("array:"),i(1, "nil"), t(")"),}),
s( {trig = "Mix.fill", name = "Mix.fill", dscr = "Snippet for Mix.fill, auto generated by SCNvim" }, {t("Mix.fill"),t("("),t("n:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "Mix.ar", name = "Mix.ar", dscr = "Snippet for Mix.ar, auto generated by SCNvim" }, {t("Mix.ar"),t("("),t("array:"),i(1, "nil"), t(")"),}),
s( {trig = "Mix.kr", name = "Mix.kr", dscr = "Snippet for Mix.kr, auto generated by SCNvim" }, {t("Mix.kr"),t("("),t("array:"),i(1, "nil"), t(")"),}),
s( {trig = "Mix.arFill", name = "Mix.arFill", dscr = "Snippet for Mix.arFill, auto generated by SCNvim" }, {t("Mix.arFill"),t("("),t("n:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "Mix.krFill", name = "Mix.krFill", dscr = "Snippet for Mix.krFill, auto generated by SCNvim" }, {t("Mix.krFill"),t("("),t("n:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "MixedBundleTester.reset", name = "MixedBundleTester.reset", dscr = "Snippet for MixedBundleTester.reset, auto generated by SCNvim" }, {t("MixedBundleTester.reset"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MixedBundleTester.findMessage", name = "MixedBundleTester.findMessage", dscr = "Snippet for MixedBundleTester.findMessage, auto generated by SCNvim" }, {t("MixedBundleTester.findMessage"),t("("),t("message:"),i(1, "nil"), t(")"),}),
s( {trig = "MixedBundleTester.findPreparationMessage", name = "MixedBundleTester.findPreparationMessage", dscr = "Snippet for MixedBundleTester.findPreparationMessage, auto generated by SCNvim" }, {t("MixedBundleTester.findPreparationMessage"),t("("),t("message:"),i(1, "nil"), t(")"),}),
s( {trig = "MixedBundleTester.report", name = "MixedBundleTester.report", dscr = "Snippet for MixedBundleTester.report, auto generated by SCNvim" }, {t("MixedBundleTester.report"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ModDif.ar", name = "ModDif.ar", dscr = "Snippet for ModDif.ar, auto generated by SCNvim" }, {t("ModDif.ar"),t("("),t("x:"),i(1, "0.0"),t(", "), t("y:"),i(2, "0.0"),t(", "), t("mod:"),i(3, "1.0"), t(")"),}),
s( {trig = "ModDif.kr", name = "ModDif.kr", dscr = "Snippet for ModDif.kr, auto generated by SCNvim" }, {t("ModDif.kr"),t("("),t("x:"),i(1, "0.0"),t(", "), t("y:"),i(2, "0.0"),t(", "), t("mod:"),i(3, "1.0"), t(")"),}),
s( {trig = "ModDif.ir", name = "ModDif.ir", dscr = "Snippet for ModDif.ir, auto generated by SCNvim" }, {t("ModDif.ir"),t("("),t("x:"),i(1, "0.0"),t(", "), t("y:"),i(2, "0.0"),t(", "), t("mod:"),i(3, "1.0"), t(")"),}),
s( {trig = "MonitorGui.initClass", name = "MonitorGui.initClass", dscr = "Snippet for MonitorGui.initClass, auto generated by SCNvim" }, {t("MonitorGui.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MonitorGui.new", name = "MonitorGui.new", dscr = "Snippet for MonitorGui.new, auto generated by SCNvim" }, {t("MonitorGui.new"),t("("),t("object:"),i(1, "nil"),t(", "), t("parent:"),i(2, "nil"),t(", "), t("bounds:"),i(3, "nil"),t(", "), t("makeSkip:"),i(4, "true"),t(", "), t("options:"),i(5, "[]"), t(")"),}),
s( {trig = "MonoGrain.ar", name = "MonoGrain.ar", dscr = "Snippet for MonoGrain.ar, auto generated by SCNvim" }, {t("MonoGrain.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("winsize:"),i(2, "0.1"),t(", "), t("grainrate:"),i(3, "10"),t(", "), t("winrandpct:"),i(4, "0"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "MonoGrainBF.ar", name = "MonoGrainBF.ar", dscr = "Snippet for MonoGrainBF.ar, auto generated by SCNvim" }, {t("MonoGrainBF.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("winsize:"),i(2, "0.1"),t(", "), t("grainrate:"),i(3, "10"),t(", "), t("winrandpct:"),i(4, "0"),t(", "), t("azimuth:"),i(5, "0"),t(", "), t("azrand:"),i(6, "0"),t(", "), t("elevation:"),i(7, "0"),t(", "), t("elrand:"),i(8, "0"),t(", "), t("rho:"),i(9, "1"),t(", "), t("mul:"),i(10, "1"),t(", "), t("add:"),i(11, "0"), t(")"),}),
s( {trig = "MoogFF.ar", name = "MoogFF.ar", dscr = "Snippet for MoogFF.ar, auto generated by SCNvim" }, {t("MoogFF.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "100"),t(", "), t("gain:"),i(3, "2"),t(", "), t("reset:"),i(4, "0"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "MoogFF.kr", name = "MoogFF.kr", dscr = "Snippet for MoogFF.kr, auto generated by SCNvim" }, {t("MoogFF.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "100"),t(", "), t("gain:"),i(3, "2"),t(", "), t("reset:"),i(4, "0"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "MoogLadder.ar", name = "MoogLadder.ar", dscr = "Snippet for MoogLadder.ar, auto generated by SCNvim" }, {t("MoogLadder.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("ffreq:"),i(2, "440.0"),t(", "), t("res:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "MoogLadder.kr", name = "MoogLadder.kr", dscr = "Snippet for MoogLadder.kr, auto generated by SCNvim" }, {t("MoogLadder.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("ffreq:"),i(2, "440.0"),t(", "), t("res:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "MoogVCF.ar", name = "MoogVCF.ar", dscr = "Snippet for MoogVCF.ar, auto generated by SCNvim" }, {t("MoogVCF.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("fco:"),i(2, "nil"),t(", "), t("res:"),i(3, "nil"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "MostChange.ar", name = "MostChange.ar", dscr = "Snippet for MostChange.ar, auto generated by SCNvim" }, {t("MostChange.ar"),t("("),t("a:"),i(1, "0.0"),t(", "), t("b:"),i(2, "0.0"), t(")"),}),
s( {trig = "MostChange.kr", name = "MostChange.kr", dscr = "Snippet for MostChange.kr, auto generated by SCNvim" }, {t("MostChange.kr"),t("("),t("a:"),i(1, "0.0"),t(", "), t("b:"),i(2, "0.0"), t(")"),}),
s( {trig = "MouseButton.kr", name = "MouseButton.kr", dscr = "Snippet for MouseButton.kr, auto generated by SCNvim" }, {t("MouseButton.kr"),t("("),t("minval:"),i(1, "0"),t(", "), t("maxval:"),i(2, "1"),t(", "), t("lag:"),i(3, "0.2"), t(")"),}),
s( {trig = "MouseX.kr", name = "MouseX.kr", dscr = "Snippet for MouseX.kr, auto generated by SCNvim" }, {t("MouseX.kr"),t("("),t("minval:"),i(1, "0"),t(", "), t("maxval:"),i(2, "1"),t(", "), t("warp:"),i(3, "0"),t(", "), t("lag:"),i(4, "0.2"), t(")"),}),
s( {trig = "MovingAverage.ar", name = "MovingAverage.ar", dscr = "Snippet for MovingAverage.ar, auto generated by SCNvim" }, {t("MovingAverage.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamp:"),i(2, "40"),t(", "), t("maxsamp:"),i(3, "400"), t(")"),}),
s( {trig = "MovingAverage.kr", name = "MovingAverage.kr", dscr = "Snippet for MovingAverage.kr, auto generated by SCNvim" }, {t("MovingAverage.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamp:"),i(2, "40"),t(", "), t("maxsamp:"),i(3, "400"), t(")"),}),
s( {trig = "MovingAverage.power", name = "MovingAverage.power", dscr = "Snippet for MovingAverage.power, auto generated by SCNvim" }, {t("MovingAverage.power"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamp:"),i(2, "40"),t(", "), t("maxsamp:"),i(3, "400"), t(")"),}),
s( {trig = "MovingAverage.rms", name = "MovingAverage.rms", dscr = "Snippet for MovingAverage.rms, auto generated by SCNvim" }, {t("MovingAverage.rms"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamp:"),i(2, "40"),t(", "), t("maxsamp:"),i(3, "400"), t(")"),}),
s( {trig = "MovingSum.ar", name = "MovingSum.ar", dscr = "Snippet for MovingSum.ar, auto generated by SCNvim" }, {t("MovingSum.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamp:"),i(2, "40"),t(", "), t("maxsamp:"),i(3, "400"), t(")"),}),
s( {trig = "MovingSum.kr", name = "MovingSum.kr", dscr = "Snippet for MovingSum.kr, auto generated by SCNvim" }, {t("MovingSum.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamp:"),i(2, "40"),t(", "), t("maxsamp:"),i(3, "400"), t(")"),}),
s( {trig = "MulAdd.new", name = "MulAdd.new", dscr = "Snippet for MulAdd.new, auto generated by SCNvim" }, {t("MulAdd.new"),t("("),t("in:"),i(1, "nil"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "MulAdd.new1", name = "MulAdd.new1", dscr = "Snippet for MulAdd.new1, auto generated by SCNvim" }, {t("MulAdd.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("mul:"),i(3, "nil"),t(", "), t("add:"),i(4, "nil"), t(")"),}),
s( {trig = "MulAdd.canBeMulAdd", name = "MulAdd.canBeMulAdd", dscr = "Snippet for MulAdd.canBeMulAdd, auto generated by SCNvim" }, {t("MulAdd.canBeMulAdd"),t("("),t("in:"),i(1, "nil"),t(", "), t("mul:"),i(2, "nil"),t(", "), t("add:"),i(3, "nil"), t(")"),}),
s( {trig = "MultiLevelIdentityDictionary.new", name = "MultiLevelIdentityDictionary.new", dscr = "Snippet for MultiLevelIdentityDictionary.new, auto generated by SCNvim" }, {t("MultiLevelIdentityDictionary.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MultiOutDemandUGen.newFromDesc", name = "MultiOutDemandUGen.newFromDesc", dscr = "Snippet for MultiOutDemandUGen.newFromDesc, auto generated by SCNvim" }, {t("MultiOutDemandUGen.newFromDesc"),t("("),t("rate:"),i(1, "nil"),t(", "), t("numOutputs:"),i(2, "nil"),t(", "), t("inputs:"),i(3, "nil"), t(")"),}),
s( {trig = "MultiOutUGen.newFromDesc", name = "MultiOutUGen.newFromDesc", dscr = "Snippet for MultiOutUGen.newFromDesc, auto generated by SCNvim" }, {t("MultiOutUGen.newFromDesc"),t("("),t("rate:"),i(1, "nil"),t(", "), t("numOutputs:"),i(2, "nil"),t(", "), t("inputs:"),i(3, "nil"), t(")"),}),
s( {trig = "MultiSliderView.qtClass", name = "MultiSliderView.qtClass", dscr = "Snippet for MultiSliderView.qtClass, auto generated by SCNvim" }, {t("MultiSliderView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "MultiTap.ar", name = "MultiTap.ar", dscr = "Snippet for MultiTap.ar, auto generated by SCNvim" }, {t("MultiTap.ar"),t("("),t("timesArray:"),i(1, "nil"),t(", "), t("levelsArray:"),i(2, "nil"),t(", "), t("in:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"),t(", "), t("bufnum:"),i(6, "nil"), t(")"),}),
s( {trig = "MultiplexAnalogIn.ar", name = "MultiplexAnalogIn.ar", dscr = "Snippet for MultiplexAnalogIn.ar, auto generated by SCNvim" }, {t("MultiplexAnalogIn.ar"),t("("),t("analogPin:"),i(1, "0"),t(", "), t("muxChannel:"),i(2, "0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "MultiplexAnalogIn.kr", name = "MultiplexAnalogIn.kr", dscr = "Snippet for MultiplexAnalogIn.kr, auto generated by SCNvim" }, {t("MultiplexAnalogIn.kr"),t("("),t("analogPin:"),i(1, "0"),t(", "), t("muxChannel:"),i(2, "0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "NAryOpFunction.new", name = "NAryOpFunction.new", dscr = "Snippet for NAryOpFunction.new, auto generated by SCNvim" }, {t("NAryOpFunction.new"),t("("),t("selector:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("arglist:"),i(3, "nil"), t(")"),}),
s( {trig = "NAryOpStream.new", name = "NAryOpStream.new", dscr = "Snippet for NAryOpStream.new, auto generated by SCNvim" }, {t("NAryOpStream.new"),t("("),t("operator:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("arglist:"),i(3, "nil"), t(")"),}),
s( {trig = "NAryValueProxy.new", name = "NAryValueProxy.new", dscr = "Snippet for NAryValueProxy.new, auto generated by SCNvim" }, {t("NAryValueProxy.new"),t("("),t("receiver:"),i(1, "nil"),t(", "), t("args:"),i(2, "nil"), t(")"),}),
s( {trig = "NHHall.ar", name = "NHHall.ar", dscr = "Snippet for NHHall.ar, auto generated by SCNvim" }, {t("NHHall.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("rt60:"),i(2, "1"),t(", "), t("stereo:"),i(3, "0.5"),t(", "), t("lowFreq:"),i(4, "200"),t(", "), t("lowRatio:"),i(5, "0.5"),t(", "), t("hiFreq:"),i(6, "4000"),t(", "), t("hiRatio:"),i(7, "0.5"),t(", "), t("earlyDiffusion:"),i(8, "0.5"),t(", "), t("lateDiffusion:"),i(9, "0.5"),t(", "), t("modRate:"),i(10, "0.2"),t(", "), t("modDepth:"),i(11, "0.3"), t(")"),}),
s( {trig = "NL.ar", name = "NL.ar", dscr = "Snippet for NL.ar, auto generated by SCNvim" }, {t("NL.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("bufnuma:"),i(2, "0"),t(", "), t("bufnumb:"),i(3, "1"),t(", "), t("guard1:"),i(4, "1000.0"),t(", "), t("guard2:"),i(5, "100.0"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "NL2.ar", name = "NL2.ar", dscr = "Snippet for NL2.ar, auto generated by SCNvim" }, {t("NL2.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("maxsizea:"),i(3, "10"),t(", "), t("maxsizeb:"),i(4, "10"),t(", "), t("guard1:"),i(5, "1000.0"),t(", "), t("guard2:"),i(6, "100.0"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "NLFiltN.ar", name = "NLFiltN.ar", dscr = "Snippet for NLFiltN.ar, auto generated by SCNvim" }, {t("NLFiltN.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("b:"),i(3, "nil"),t(", "), t("d:"),i(4, "nil"),t(", "), t("c:"),i(5, "nil"),t(", "), t("l:"),i(6, "nil"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "NLFiltN.kr", name = "NLFiltN.kr", dscr = "Snippet for NLFiltN.kr, auto generated by SCNvim" }, {t("NLFiltN.kr"),t("("),t("input:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("b:"),i(3, "nil"),t(", "), t("d:"),i(4, "nil"),t(", "), t("c:"),i(5, "nil"),t(", "), t("l:"),i(6, "nil"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "NRand.new", name = "NRand.new", dscr = "Snippet for NRand.new, auto generated by SCNvim" }, {t("NRand.new"),t("("),t("lo:"),i(1, "0.0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("n:"),i(3, "0"), t(")"),}),
s( {trig = "NTube.ar", name = "NTube.ar", dscr = "Snippet for NTube.ar, auto generated by SCNvim" }, {t("NTube.ar"),t("("),t("input:"),i(1, "0"),t(", "), t("lossarray:"),i(2, "1.0"),t(", "), t("karray:"),i(3, "nil"),t(", "), t("delaylengtharray:"),i(4, "nil"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "NamedControl.ar", name = "NamedControl.ar", dscr = "Snippet for NamedControl.ar, auto generated by SCNvim" }, {t("NamedControl.ar"),t("("),t("name:"),i(1, "nil"),t(", "), t("values:"),i(2, "nil"),t(", "), t("lags:"),i(3, "nil"),t(", "), t("spec:"),i(4, "nil"), t(")"),}),
s( {trig = "NamedControl.kr", name = "NamedControl.kr", dscr = "Snippet for NamedControl.kr, auto generated by SCNvim" }, {t("NamedControl.kr"),t("("),t("name:"),i(1, "nil"),t(", "), t("values:"),i(2, "nil"),t(", "), t("lags:"),i(3, "nil"),t(", "), t("fixedLag:"),i(4, "false"),t(", "), t("spec:"),i(5, "nil"), t(")"),}),
s( {trig = "NamedControl.ir", name = "NamedControl.ir", dscr = "Snippet for NamedControl.ir, auto generated by SCNvim" }, {t("NamedControl.ir"),t("("),t("name:"),i(1, "nil"),t(", "), t("values:"),i(2, "nil"),t(", "), t("lags:"),i(3, "nil"),t(", "), t("spec:"),i(4, "nil"), t(")"),}),
s( {trig = "NamedControl.tr", name = "NamedControl.tr", dscr = "Snippet for NamedControl.tr, auto generated by SCNvim" }, {t("NamedControl.tr"),t("("),t("name:"),i(1, "nil"),t(", "), t("values:"),i(2, "nil"),t(", "), t("lags:"),i(3, "nil"),t(", "), t("spec:"),i(4, "nil"), t(")"),}),
s( {trig = "NamedControl.new", name = "NamedControl.new", dscr = "Snippet for NamedControl.new, auto generated by SCNvim" }, {t("NamedControl.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("values:"),i(2, "nil"),t(", "), t("rate:"),i(3, "nil"),t(", "), t("lags:"),i(4, "nil"),t(", "), t("fixedLag:"),i(5, "false"),t(", "), t("spec:"),i(6, "nil"), t(")"),}),
s( {trig = "NamedControl.initDict", name = "NamedControl.initDict", dscr = "Snippet for NamedControl.initDict, auto generated by SCNvim" }, {t("NamedControl.initDict"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Ndef.initClass", name = "Ndef.initClass", dscr = "Snippet for Ndef.initClass, auto generated by SCNvim" }, {t("Ndef.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Ndef.new", name = "Ndef.new", dscr = "Snippet for Ndef.new, auto generated by SCNvim" }, {t("Ndef.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("object:"),i(2, "nil"), t(")"),}),
s( {trig = "Ndef.ar", name = "Ndef.ar", dscr = "Snippet for Ndef.ar, auto generated by SCNvim" }, {t("Ndef.ar"),t("("),t("key:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "nil"),t(", "), t("offset:"),i(3, "0"), t(")"),}),
s( {trig = "Ndef.kr", name = "Ndef.kr", dscr = "Snippet for Ndef.kr, auto generated by SCNvim" }, {t("Ndef.kr"),t("("),t("key:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "nil"),t(", "), t("offset:"),i(3, "0"), t(")"),}),
s( {trig = "Ndef.clear", name = "Ndef.clear", dscr = "Snippet for Ndef.clear, auto generated by SCNvim" }, {t("Ndef.clear"),t("("),t("fadeTime:"),i(1, "nil"), t(")"),}),
s( {trig = "Ndef.dictFor", name = "Ndef.dictFor", dscr = "Snippet for Ndef.dictFor, auto generated by SCNvim" }, {t("Ndef.dictFor"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "Ndef.gui", name = "Ndef.gui", dscr = "Snippet for Ndef.gui, auto generated by SCNvim" }, {t("Ndef.gui"),t("("),t("server:"),i(1, "nil"),t(", "), t("numItems:"),i(2, "nil"),t(", "), t("bounds:"),i(3, "nil"),t(", "), t("preset:"),i(4, "nil"), t(")"),}),
s( {trig = "NdefGui.initClass", name = "NdefGui.initClass", dscr = "Snippet for NdefGui.initClass, auto generated by SCNvim" }, {t("NdefGui.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NdefGui.new", name = "NdefGui.new", dscr = "Snippet for NdefGui.new, auto generated by SCNvim" }, {t("NdefGui.new"),t("("),t("object:"),i(1, "nil"),t(", "), t("numItems:"),i(2, "4"),t(", "), t("parent:"),i(3, "nil"),t(", "), t("bounds:"),i(4, "nil"),t(", "), t("makeSkip:"),i(5, "true"),t(", "), t("options:"),i(6, "nil"), t(")"),}),
s( {trig = "NdefGui.big", name = "NdefGui.big", dscr = "Snippet for NdefGui.big, auto generated by SCNvim" }, {t("NdefGui.big"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NdefGui.full", name = "NdefGui.full", dscr = "Snippet for NdefGui.full, auto generated by SCNvim" }, {t("NdefGui.full"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NdefGui.audio", name = "NdefGui.audio", dscr = "Snippet for NdefGui.audio, auto generated by SCNvim" }, {t("NdefGui.audio"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NdefGui.audioSm", name = "NdefGui.audioSm", dscr = "Snippet for NdefGui.audioSm, auto generated by SCNvim" }, {t("NdefGui.audioSm"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NdefGui.control", name = "NdefGui.control", dscr = "Snippet for NdefGui.control, auto generated by SCNvim" }, {t("NdefGui.control"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NdefGui.makeButFuncs", name = "NdefGui.makeButFuncs", dscr = "Snippet for NdefGui.makeButFuncs, auto generated by SCNvim" }, {t("NdefGui.makeButFuncs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NearestN.kr", name = "NearestN.kr", dscr = "Snippet for NearestN.kr, auto generated by SCNvim" }, {t("NearestN.kr"),t("("),t("treebuf:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("gate:"),i(3, "1"),t(", "), t("num:"),i(4, "1"), t(")"),}),
s( {trig = "NearestN.categories", name = "NearestN.categories", dscr = "Snippet for NearestN.categories, auto generated by SCNvim" }, {t("NearestN.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NearestN.makeBufferData", name = "NearestN.makeBufferData", dscr = "Snippet for NearestN.makeBufferData, auto generated by SCNvim" }, {t("NearestN.makeBufferData"),t("("),t("tree:"),i(1, "nil"), t(")"),}),
s( {trig = "NeedleRect.ar", name = "NeedleRect.ar", dscr = "Snippet for NeedleRect.ar, auto generated by SCNvim" }, {t("NeedleRect.ar"),t("("),t("rate:"),i(1, "1.0"),t(", "), t("imgWidth:"),i(2, "100"),t(", "), t("imgHeight:"),i(3, "100"),t(", "), t("rectX:"),i(4, "0"),t(", "), t("rectY:"),i(5, "0"),t(", "), t("rectW:"),i(6, "100"),t(", "), t("rectH:"),i(7, "100"), t(")"),}),
s( {trig = "NestedAllpassN.ar", name = "NestedAllpassN.ar", dscr = "Snippet for NestedAllpassN.ar, auto generated by SCNvim" }, {t("NestedAllpassN.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("maxdelay1:"),i(2, "0.036"),t(", "), t("delay1:"),i(3, "0.036"),t(", "), t("gain1:"),i(4, "0.08"),t(", "), t("maxdelay2:"),i(5, "0.03"),t(", "), t("delay2:"),i(6, "0.03"),t(", "), t("gain2:"),i(7, "0.3"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "NetAddr.initClass", name = "NetAddr.initClass", dscr = "Snippet for NetAddr.initClass, auto generated by SCNvim" }, {t("NetAddr.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NetAddr.new", name = "NetAddr.new", dscr = "Snippet for NetAddr.new, auto generated by SCNvim" }, {t("NetAddr.new"),t("("),t("hostname:"),i(1, "nil"),t(", "), t("port:"),i(2, "nil"), t(")"),}),
s( {trig = "NetAddr.fromIP", name = "NetAddr.fromIP", dscr = "Snippet for NetAddr.fromIP, auto generated by SCNvim" }, {t("NetAddr.fromIP"),t("("),t("addr:"),i(1, "nil"),t(", "), t("port:"),i(2, "nil"), t(")"),}),
s( {trig = "NetAddr.langPort", name = "NetAddr.langPort", dscr = "Snippet for NetAddr.langPort, auto generated by SCNvim" }, {t("NetAddr.langPort"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NetAddr.matchLangIP", name = "NetAddr.matchLangIP", dscr = "Snippet for NetAddr.matchLangIP, auto generated by SCNvim" }, {t("NetAddr.matchLangIP"),t("("),t("ipstring:"),i(1, "nil"), t(")"),}),
s( {trig = "NetAddr.localEndPoint", name = "NetAddr.localEndPoint", dscr = "Snippet for NetAddr.localEndPoint, auto generated by SCNvim" }, {t("NetAddr.localEndPoint"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NetAddr.localAddr", name = "NetAddr.localAddr", dscr = "Snippet for NetAddr.localAddr, auto generated by SCNvim" }, {t("NetAddr.localAddr"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NetAddr.useDoubles_", name = "NetAddr.useDoubles_", dscr = "Snippet for NetAddr.useDoubles_, auto generated by SCNvim" }, {t("NetAddr.useDoubles_"),t("("),t("flag:"),i(1, "false"), t(")"),}),
s( {trig = "NetAddr.broadcastFlag", name = "NetAddr.broadcastFlag", dscr = "Snippet for NetAddr.broadcastFlag, auto generated by SCNvim" }, {t("NetAddr.broadcastFlag"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NetAddr.broadcastFlag_", name = "NetAddr.broadcastFlag_", dscr = "Snippet for NetAddr.broadcastFlag_, auto generated by SCNvim" }, {t("NetAddr.broadcastFlag_"),t("("),t("flag:"),i(1, "true"), t(")"),}),
s( {trig = "NetAddr.disconnectAll", name = "NetAddr.disconnectAll", dscr = "Snippet for NetAddr.disconnectAll, auto generated by SCNvim" }, {t("NetAddr.disconnectAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NetAddr.connections", name = "NetAddr.connections", dscr = "Snippet for NetAddr.connections, auto generated by SCNvim" }, {t("NetAddr.connections"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Nil.new", name = "Nil.new", dscr = "Snippet for Nil.new, auto generated by SCNvim" }, {t("Nil.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Node.initClass", name = "Node.initClass", dscr = "Snippet for Node.initClass, auto generated by SCNvim" }, {t("Node.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Node.basicNew", name = "Node.basicNew", dscr = "Snippet for Node.basicNew, auto generated by SCNvim" }, {t("Node.basicNew"),t("("),t("server:"),i(1, "nil"),t(", "), t("nodeID:"),i(2, "nil"), t(")"),}),
s( {trig = "Node.actionNumberFor", name = "Node.actionNumberFor", dscr = "Snippet for Node.actionNumberFor, auto generated by SCNvim" }, {t("Node.actionNumberFor"),t("("),t("addAction:"),i(1, "addToHead"), t(")"),}),
s( {trig = "Node.setnMsgArgs", name = "Node.setnMsgArgs", dscr = "Snippet for Node.setnMsgArgs, auto generated by SCNvim" }, {t("Node.setnMsgArgs"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "Node.orderNodesMsg", name = "Node.orderNodesMsg", dscr = "Snippet for Node.orderNodesMsg, auto generated by SCNvim" }, {t("Node.orderNodesMsg"),t("("),t("nodes:"),i(1, "nil"), t(")"),}),
s( {trig = "NodeControl.new", name = "NodeControl.new", dscr = "Snippet for NodeControl.new, auto generated by SCNvim" }, {t("NodeControl.new"),t("("),t("node:"),i(1, "nil"),t(", "), t("index:"),i(2, "nil"), t(")"),}),
s( {trig = "NodeIDAllocator.new", name = "NodeIDAllocator.new", dscr = "Snippet for NodeIDAllocator.new, auto generated by SCNvim" }, {t("NodeIDAllocator.new"),t("("),t("user:"),i(1, "0"),t(", "), t("initTemp:"),i(2, "1000"), t(")"),}),
s( {trig = "NodeProxy.new", name = "NodeProxy.new", dscr = "Snippet for NodeProxy.new, auto generated by SCNvim" }, {t("NodeProxy.new"),t("("),t("server:"),i(1, "nil"),t(", "), t("rate:"),i(2, "nil"),t(", "), t("numChannels:"),i(3, "nil"),t(", "), t("inputs:"),i(4, "nil"), t(")"),}),
s( {trig = "NodeWatcher.initClass", name = "NodeWatcher.initClass", dscr = "Snippet for NodeWatcher.initClass, auto generated by SCNvim" }, {t("NodeWatcher.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NodeWatcher.cmdPeriod", name = "NodeWatcher.cmdPeriod", dscr = "Snippet for NodeWatcher.cmdPeriod, auto generated by SCNvim" }, {t("NodeWatcher.cmdPeriod"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NodeWatcher.doOnServerQuit", name = "NodeWatcher.doOnServerQuit", dscr = "Snippet for NodeWatcher.doOnServerQuit, auto generated by SCNvim" }, {t("NodeWatcher.doOnServerQuit"),t("("),t("aServer:"),i(1, "nil"), t(")"),}),
s( {trig = "NodeWatcher.doOnServerBoot", name = "NodeWatcher.doOnServerBoot", dscr = "Snippet for NodeWatcher.doOnServerBoot, auto generated by SCNvim" }, {t("NodeWatcher.doOnServerBoot"),t("("),t("aServer:"),i(1, "nil"), t(")"),}),
s( {trig = "NodeWatcher.newFrom", name = "NodeWatcher.newFrom", dscr = "Snippet for NodeWatcher.newFrom, auto generated by SCNvim" }, {t("NodeWatcher.newFrom"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "NodeWatcher.register", name = "NodeWatcher.register", dscr = "Snippet for NodeWatcher.register, auto generated by SCNvim" }, {t("NodeWatcher.register"),t("("),t("node:"),i(1, "nil"),t(", "), t("assumePlaying:"),i(2, "false"), t(")"),}),
s( {trig = "NodeWatcher.unregister", name = "NodeWatcher.unregister", dscr = "Snippet for NodeWatcher.unregister, auto generated by SCNvim" }, {t("NodeWatcher.unregister"),t("("),t("node:"),i(1, "nil"), t(")"),}),
s( {trig = "Normalizer.ar", name = "Normalizer.ar", dscr = "Snippet for Normalizer.ar, auto generated by SCNvim" }, {t("Normalizer.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("level:"),i(2, "1.0"),t(", "), t("dur:"),i(3, "0.01"), t(")"),}),
s( {trig = "Notch.ar", name = "Notch.ar", dscr = "Snippet for Notch.ar, auto generated by SCNvim" }, {t("Notch.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440"),t(", "), t("rq:"),i(3, "0.1"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "NoteOffResponder.init", name = "NoteOffResponder.init", dscr = "Snippet for NoteOffResponder.init, auto generated by SCNvim" }, {t("NoteOffResponder.init"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NoteOffResponder.initialized", name = "NoteOffResponder.initialized", dscr = "Snippet for NoteOffResponder.initialized, auto generated by SCNvim" }, {t("NoteOffResponder.initialized"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NoteOffResponder.responders", name = "NoteOffResponder.responders", dscr = "Snippet for NoteOffResponder.responders, auto generated by SCNvim" }, {t("NoteOffResponder.responders"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NoteOffResponder.add", name = "NoteOffResponder.add", dscr = "Snippet for NoteOffResponder.add, auto generated by SCNvim" }, {t("NoteOffResponder.add"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "NoteOffResponder.remove", name = "NoteOffResponder.remove", dscr = "Snippet for NoteOffResponder.remove, auto generated by SCNvim" }, {t("NoteOffResponder.remove"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "NoteOnResponder.new", name = "NoteOnResponder.new", dscr = "Snippet for NoteOnResponder.new, auto generated by SCNvim" }, {t("NoteOnResponder.new"),t("("),t("function:"),i(1, "nil"),t(", "), t("src:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("num:"),i(4, "nil"),t(", "), t("veloc:"),i(5, "nil"),t(", "), t("install:"),i(6, "true"),t(", "), t("swallowEvent:"),i(7, "false"), t(")"),}),
s( {trig = "NoteOnResponder.initialized", name = "NoteOnResponder.initialized", dscr = "Snippet for NoteOnResponder.initialized, auto generated by SCNvim" }, {t("NoteOnResponder.initialized"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NoteOnResponder.responders", name = "NoteOnResponder.responders", dscr = "Snippet for NoteOnResponder.responders, auto generated by SCNvim" }, {t("NoteOnResponder.responders"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NoteOnResponder.init", name = "NoteOnResponder.init", dscr = "Snippet for NoteOnResponder.init, auto generated by SCNvim" }, {t("NoteOnResponder.init"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NoteOnResponder.add", name = "NoteOnResponder.add", dscr = "Snippet for NoteOnResponder.add, auto generated by SCNvim" }, {t("NoteOnResponder.add"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "NoteOnResponder.remove", name = "NoteOnResponder.remove", dscr = "Snippet for NoteOnResponder.remove, auto generated by SCNvim" }, {t("NoteOnResponder.remove"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "NotificationCenter.notify", name = "NotificationCenter.notify", dscr = "Snippet for NotificationCenter.notify, auto generated by SCNvim" }, {t("NotificationCenter.notify"),t("("),t("object:"),i(1, "nil"),t(", "), t("message:"),i(2, "nil"),t(", "), t("args:"),i(3, "nil"), t(")"),}),
s( {trig = "NotificationCenter.register", name = "NotificationCenter.register", dscr = "Snippet for NotificationCenter.register, auto generated by SCNvim" }, {t("NotificationCenter.register"),t("("),t("object:"),i(1, "nil"),t(", "), t("message:"),i(2, "nil"),t(", "), t("listener:"),i(3, "nil"),t(", "), t("action:"),i(4, "nil"), t(")"),}),
s( {trig = "NotificationCenter.unregister", name = "NotificationCenter.unregister", dscr = "Snippet for NotificationCenter.unregister, auto generated by SCNvim" }, {t("NotificationCenter.unregister"),t("("),t("object:"),i(1, "nil"),t(", "), t("message:"),i(2, "nil"),t(", "), t("listener:"),i(3, "nil"), t(")"),}),
s( {trig = "NotificationCenter.registerOneShot", name = "NotificationCenter.registerOneShot", dscr = "Snippet for NotificationCenter.registerOneShot, auto generated by SCNvim" }, {t("NotificationCenter.registerOneShot"),t("("),t("object:"),i(1, "nil"),t(", "), t("message:"),i(2, "nil"),t(", "), t("listener:"),i(3, "nil"),t(", "), t("action:"),i(4, "nil"), t(")"),}),
s( {trig = "NotificationCenter.clear", name = "NotificationCenter.clear", dscr = "Snippet for NotificationCenter.clear, auto generated by SCNvim" }, {t("NotificationCenter.clear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NotificationCenter.registrationExists", name = "NotificationCenter.registrationExists", dscr = "Snippet for NotificationCenter.registrationExists, auto generated by SCNvim" }, {t("NotificationCenter.registrationExists"),t("("),t("object:"),i(1, "nil"),t(", "), t("message:"),i(2, "nil"),t(", "), t("listener:"),i(3, "nil"), t(")"),}),
s( {trig = "NotificationCenter.initClass", name = "NotificationCenter.initClass", dscr = "Snippet for NotificationCenter.initClass, auto generated by SCNvim" }, {t("NotificationCenter.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NotificationCenter.removeForListener", name = "NotificationCenter.removeForListener", dscr = "Snippet for NotificationCenter.removeForListener, auto generated by SCNvim" }, {t("NotificationCenter.removeForListener"),t("("),t("listener:"),i(1, "nil"), t(")"),}),
s( {trig = "NotificationRegistration.new", name = "NotificationRegistration.new", dscr = "Snippet for NotificationRegistration.new, auto generated by SCNvim" }, {t("NotificationRegistration.new"),t("("),t("o:"),i(1, "nil"),t(", "), t("m:"),i(2, "nil"),t(", "), t("l:"),i(3, "nil"), t(")"),}),
s( {trig = "NumChannels.ar", name = "NumChannels.ar", dscr = "Snippet for NumChannels.ar, auto generated by SCNvim" }, {t("NumChannels.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "2"),t(", "), t("mixdown:"),i(3, "true"), t(")"),}),
s( {trig = "NumRunningSynths.kr", name = "NumRunningSynths.kr", dscr = "Snippet for NumRunningSynths.kr, auto generated by SCNvim" }, {t("NumRunningSynths.kr"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NumberBox.qtClass", name = "NumberBox.qtClass", dscr = "Snippet for NumberBox.qtClass, auto generated by SCNvim" }, {t("NumberBox.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "NumberBox.new", name = "NumberBox.new", dscr = "Snippet for NumberBox.new, auto generated by SCNvim" }, {t("NumberBox.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "OSCArgsMatcher.new", name = "OSCArgsMatcher.new", dscr = "Snippet for OSCArgsMatcher.new, auto generated by SCNvim" }, {t("OSCArgsMatcher.new"),t("("),t("argTemplate:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "OSCFunc.initClass", name = "OSCFunc.initClass", dscr = "Snippet for OSCFunc.initClass, auto generated by SCNvim" }, {t("OSCFunc.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "OSCFunc.new", name = "OSCFunc.new", dscr = "Snippet for OSCFunc.new, auto generated by SCNvim" }, {t("OSCFunc.new"),t("("),t("func:"),i(1, "nil"),t(", "), t("path:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("recvPort:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"),t(", "), t("dispatcher:"),i(6, "nil"), t(")"),}),
s( {trig = "OSCFunc.newMatching", name = "OSCFunc.newMatching", dscr = "Snippet for OSCFunc.newMatching, auto generated by SCNvim" }, {t("OSCFunc.newMatching"),t("("),t("func:"),i(1, "nil"),t(", "), t("path:"),i(2, "nil"),t(", "), t("srcID:"),i(3, "nil"),t(", "), t("recvPort:"),i(4, "nil"),t(", "), t("argTemplate:"),i(5, "nil"), t(")"),}),
s( {trig = "OSCFunc.trace", name = "OSCFunc.trace", dscr = "Snippet for OSCFunc.trace, auto generated by SCNvim" }, {t("OSCFunc.trace"),t("("),t("bool:"),i(1, "true"),t(", "), t("hideStatusMsg:"),i(2, "false"), t(")"),}),
s( {trig = "OSCFunc.cmdPeriod", name = "OSCFunc.cmdPeriod", dscr = "Snippet for OSCFunc.cmdPeriod, auto generated by SCNvim" }, {t("OSCFunc.cmdPeriod"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "OSCFuncAddrMessageMatcher.new", name = "OSCFuncAddrMessageMatcher.new", dscr = "Snippet for OSCFuncAddrMessageMatcher.new, auto generated by SCNvim" }, {t("OSCFuncAddrMessageMatcher.new"),t("("),t("addr:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "OSCFuncBothMessageMatcher.new", name = "OSCFuncBothMessageMatcher.new", dscr = "Snippet for OSCFuncBothMessageMatcher.new, auto generated by SCNvim" }, {t("OSCFuncBothMessageMatcher.new"),t("("),t("addr:"),i(1, "nil"),t(", "), t("recvPort:"),i(2, "nil"),t(", "), t("func:"),i(3, "nil"), t(")"),}),
s( {trig = "OSCFuncRecvPortMessageMatcher.new", name = "OSCFuncRecvPortMessageMatcher.new", dscr = "Snippet for OSCFuncRecvPortMessageMatcher.new, auto generated by SCNvim" }, {t("OSCFuncRecvPortMessageMatcher.new"),t("("),t("recvPort:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "OSCdef.initClass", name = "OSCdef.initClass", dscr = "Snippet for OSCdef.initClass, auto generated by SCNvim" }, {t("OSCdef.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "OSCdef.new", name = "OSCdef.new", dscr = "Snippet for OSCdef.new, auto generated by SCNvim" }, {t("OSCdef.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("path:"),i(3, "nil"),t(", "), t("srcID:"),i(4, "nil"),t(", "), t("recvPort:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"),t(", "), t("dispatcher:"),i(7, "nil"), t(")"),}),
s( {trig = "OSCdef.newMatching", name = "OSCdef.newMatching", dscr = "Snippet for OSCdef.newMatching, auto generated by SCNvim" }, {t("OSCdef.newMatching"),t("("),t("key:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("path:"),i(3, "nil"),t(", "), t("srcID:"),i(4, "nil"),t(", "), t("recvPort:"),i(5, "nil"),t(", "), t("argTemplate:"),i(6, "nil"), t(")"),}),
s( {trig = "OSCdef.freeAll", name = "OSCdef.freeAll", dscr = "Snippet for OSCdef.freeAll, auto generated by SCNvim" }, {t("OSCdef.freeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "OSCpathDispatcher.new", name = "OSCpathDispatcher.new", dscr = "Snippet for OSCpathDispatcher.new, auto generated by SCNvim" }, {t("OSCpathDispatcher.new"),t("("),t("addr:"),i(1, "nil"),t(", "), t("cmdName:"),i(2, "nil"),t(", "), t("action:"),i(3, "nil"),t(", "), t("pathSize:"),i(4, "nil"), t(")"),}),
s( {trig = "OSCpathResponder.new", name = "OSCpathResponder.new", dscr = "Snippet for OSCpathResponder.new, auto generated by SCNvim" }, {t("OSCpathResponder.new"),t("("),t("addr:"),i(1, "nil"),t(", "), t("cmdPath:"),i(2, "nil"),t(", "), t("action:"),i(3, "nil"), t(")"),}),
s( {trig = "OSCresponder.new", name = "OSCresponder.new", dscr = "Snippet for OSCresponder.new, auto generated by SCNvim" }, {t("OSCresponder.new"),t("("),t("addr:"),i(1, "nil"),t(", "), t("cmdName:"),i(2, "nil"),t(", "), t("action:"),i(3, "nil"), t(")"),}),
s( {trig = "OSCresponder.initClass", name = "OSCresponder.initClass", dscr = "Snippet for OSCresponder.initClass, auto generated by SCNvim" }, {t("OSCresponder.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "OSCresponder.respond", name = "OSCresponder.respond", dscr = "Snippet for OSCresponder.respond, auto generated by SCNvim" }, {t("OSCresponder.respond"),t("("),t("time:"),i(1, "nil"),t(", "), t("addr:"),i(2, "nil"),t(", "), t("msg:"),i(3, "nil"), t(")"),}),
s( {trig = "OSCresponder.add", name = "OSCresponder.add", dscr = "Snippet for OSCresponder.add, auto generated by SCNvim" }, {t("OSCresponder.add"),t("("),t("responder:"),i(1, "nil"), t(")"),}),
s( {trig = "OSCresponder.remove", name = "OSCresponder.remove", dscr = "Snippet for OSCresponder.remove, auto generated by SCNvim" }, {t("OSCresponder.remove"),t("("),t("responder:"),i(1, "nil"), t(")"),}),
s( {trig = "OSCresponder.removeAddr", name = "OSCresponder.removeAddr", dscr = "Snippet for OSCresponder.removeAddr, auto generated by SCNvim" }, {t("OSCresponder.removeAddr"),t("("),t("addr:"),i(1, "nil"), t(")"),}),
s( {trig = "OSFold4.ar", name = "OSFold4.ar", dscr = "Snippet for OSFold4.ar, auto generated by SCNvim" }, {t("OSFold4.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("lo:"),i(2, "nil"),t(", "), t("hi:"),i(3, "nil"), t(")"),}),
s( {trig = "OSFold8.ar", name = "OSFold8.ar", dscr = "Snippet for OSFold8.ar, auto generated by SCNvim" }, {t("OSFold8.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("lo:"),i(2, "nil"),t(", "), t("hi:"),i(3, "nil"), t(")"),}),
s( {trig = "OSTrunc4.ar", name = "OSTrunc4.ar", dscr = "Snippet for OSTrunc4.ar, auto generated by SCNvim" }, {t("OSTrunc4.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("quant:"),i(2, "0.5"), t(")"),}),
s( {trig = "OSTrunc8.ar", name = "OSTrunc8.ar", dscr = "Snippet for OSTrunc8.ar, auto generated by SCNvim" }, {t("OSTrunc8.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("quant:"),i(2, "0.5"), t(")"),}),
s( {trig = "OSWrap4.ar", name = "OSWrap4.ar", dscr = "Snippet for OSWrap4.ar, auto generated by SCNvim" }, {t("OSWrap4.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("lo:"),i(2, "nil"),t(", "), t("hi:"),i(3, "nil"), t(")"),}),
s( {trig = "OSWrap8.ar", name = "OSWrap8.ar", dscr = "Snippet for OSWrap8.ar, auto generated by SCNvim" }, {t("OSWrap8.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("lo:"),i(2, "nil"),t(", "), t("hi:"),i(3, "nil"), t(")"),}),
s( {trig = "Object.new", name = "Object.new", dscr = "Snippet for Object.new, auto generated by SCNvim" }, {t("Object.new"),t("("),t("maxSize:"),i(1, "0"), t(")"),}),
s( {trig = "Object.newCopyArgs", name = "Object.newCopyArgs", dscr = "Snippet for Object.newCopyArgs, auto generated by SCNvim" }, {t("Object.newCopyArgs"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "Object.initClass", name = "Object.initClass", dscr = "Snippet for Object.initClass, auto generated by SCNvim" }, {t("Object.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Object.prNew", name = "Object.prNew", dscr = "Snippet for Object.prNew, auto generated by SCNvim" }, {t("Object.prNew"),t("("),t("maxSize:"),i(1, "0"), t(")"),}),
s( {trig = "Object.prNewCopyArgs", name = "Object.prNewCopyArgs", dscr = "Snippet for Object.prNewCopyArgs, auto generated by SCNvim" }, {t("Object.prNewCopyArgs"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "Object.readArchive", name = "Object.readArchive", dscr = "Snippet for Object.readArchive, auto generated by SCNvim" }, {t("Object.readArchive"),t("("),t("pathname:"),i(1, "nil"), t(")"),}),
s( {trig = "Object.readTextArchive", name = "Object.readTextArchive", dscr = "Snippet for Object.readTextArchive, auto generated by SCNvim" }, {t("Object.readTextArchive"),t("("),t("pathname:"),i(1, "nil"), t(")"),}),
s( {trig = "Object.readBinaryArchive", name = "Object.readBinaryArchive", dscr = "Snippet for Object.readBinaryArchive, auto generated by SCNvim" }, {t("Object.readBinaryArchive"),t("("),t("pathname:"),i(1, "nil"), t(")"),}),
s( {trig = "Object.implClass", name = "Object.implClass", dscr = "Snippet for Object.implClass, auto generated by SCNvim" }, {t("Object.implClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ObjectGui.new", name = "ObjectGui.new", dscr = "Snippet for ObjectGui.new, auto generated by SCNvim" }, {t("ObjectGui.new"),t("("),t("model:"),i(1, "nil"), t(")"),}),
s( {trig = "ObjectTable.new", name = "ObjectTable.new", dscr = "Snippet for ObjectTable.new, auto generated by SCNvim" }, {t("ObjectTable.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ObjectTable.initClass", name = "ObjectTable.initClass", dscr = "Snippet for ObjectTable.initClass, auto generated by SCNvim" }, {t("ObjectTable.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ObjectTable.add", name = "ObjectTable.add", dscr = "Snippet for ObjectTable.add, auto generated by SCNvim" }, {t("ObjectTable.add"),t("("),t("obj:"),i(1, "nil"), t(")"),}),
s( {trig = "ObjectTable.put", name = "ObjectTable.put", dscr = "Snippet for ObjectTable.put, auto generated by SCNvim" }, {t("ObjectTable.put"),t("("),t("key:"),i(1, "nil"),t(", "), t("obj:"),i(2, "nil"), t(")"),}),
s( {trig = "ObjectTable.remove", name = "ObjectTable.remove", dscr = "Snippet for ObjectTable.remove, auto generated by SCNvim" }, {t("ObjectTable.remove"),t("("),t("obj:"),i(1, "nil"), t(")"),}),
s( {trig = "ObjectTable.at", name = "ObjectTable.at", dscr = "Snippet for ObjectTable.at, auto generated by SCNvim" }, {t("ObjectTable.at"),t("("),t("id:"),i(1, "nil"), t(")"),}),
s( {trig = "ObjectTable.getID", name = "ObjectTable.getID", dscr = "Snippet for ObjectTable.getID, auto generated by SCNvim" }, {t("ObjectTable.getID"),t("("),t("obj:"),i(1, "nil"), t(")"),}),
s( {trig = "ObjectTable.objPerform", name = "ObjectTable.objPerform", dscr = "Snippet for ObjectTable.objPerform, auto generated by SCNvim" }, {t("ObjectTable.objPerform"),t("("),t("id:"),i(1, "nil"),t(", "), t("selector:"),i(2, "nil"),t(", "), t("args:"),i(3, "[]"), t(")"),}),
s( {trig = "OffsetOut.kr", name = "OffsetOut.kr", dscr = "Snippet for OffsetOut.kr, auto generated by SCNvim" }, {t("OffsetOut.kr"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "OnError.run", name = "OnError.run", dscr = "Snippet for OnError.run, auto generated by SCNvim" }, {t("OnError.run"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "OnePole.ar", name = "OnePole.ar", dscr = "Snippet for OnePole.ar, auto generated by SCNvim" }, {t("OnePole.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("coef:"),i(2, "0.5"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "OnePole.kr", name = "OnePole.kr", dscr = "Snippet for OnePole.kr, auto generated by SCNvim" }, {t("OnePole.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("coef:"),i(2, "0.5"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "OneShotStream.new", name = "OneShotStream.new", dscr = "Snippet for OneShotStream.new, auto generated by SCNvim" }, {t("OneShotStream.new"),t("("),t("value:"),i(1, "nil"), t(")"),}),
s( {trig = "OnsetStatistics.kr", name = "OnsetStatistics.kr", dscr = "Snippet for OnsetStatistics.kr, auto generated by SCNvim" }, {t("OnsetStatistics.kr"),t("("),t("input:"),i(1, "nil"),t(", "), t("windowsize:"),i(2, "1.0"),t(", "), t("hopsize:"),i(3, "0.1"), t(")"),}),
s( {trig = "Onsets.kr", name = "Onsets.kr", dscr = "Snippet for Onsets.kr, auto generated by SCNvim" }, {t("Onsets.kr"),t("("),t("chain:"),i(1, "nil"),t(", "), t("threshold:"),i(2, "0.5"),t(", "), t("odftype:"),i(3, "rcomplex"),t(", "), t("relaxtime:"),i(4, "1"),t(", "), t("floor:"),i(5, "0.1"),t(", "), t("mingap:"),i(6, "10"),t(", "), t("medianspan:"),i(7, "11"),t(", "), t("whtype:"),i(8, "1"),t(", "), t("rawodf:"),i(9, "0"), t(")"),}),
s( {trig = "OnsetsDS.kr", name = "OnsetsDS.kr", dscr = "Snippet for OnsetsDS.kr, auto generated by SCNvim" }, {t("OnsetsDS.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("fftbuf:"),i(2, "nil"),t(", "), t("trackbuf:"),i(3, "nil"),t(", "), t("thresh:"),i(4, "0.5"),t(", "), t("type:"),i(5, "power"),t(", "), t("extchain:"),i(6, "false"),t(", "), t("relaxtime:"),i(7, "0.1"),t(", "), t("floor:"),i(8, "0.1"),t(", "), t("smear:"),i(9, "0"),t(", "), t("mingap:"),i(10, "0.05"),t(", "), t("medianspan:"),i(11, "11"), t(")"),}),
s( {trig = "Operand.new", name = "Operand.new", dscr = "Snippet for Operand.new, auto generated by SCNvim" }, {t("Operand.new"),t("("),t("value:"),i(1, "nil"), t(")"),}),
s( {trig = "Order.new", name = "Order.new", dscr = "Snippet for Order.new, auto generated by SCNvim" }, {t("Order.new"),t("("),t("size:"),i(1, "8"), t(")"),}),
s( {trig = "Order.newFromIndices", name = "Order.newFromIndices", dscr = "Snippet for Order.newFromIndices, auto generated by SCNvim" }, {t("Order.newFromIndices"),t("("),t("array:"),i(1, "nil"),t(", "), t("indices:"),i(2, "nil"), t(")"),}),
s( {trig = "Oregonator.ar", name = "Oregonator.ar", dscr = "Snippet for Oregonator.ar, auto generated by SCNvim" }, {t("Oregonator.ar"),t("("),t("reset:"),i(1, "0"),t(", "), t("rate:"),i(2, "0.01"),t(", "), t("epsilon:"),i(3, "1.0"),t(", "), t("mu:"),i(4, "1.0"),t(", "), t("q:"),i(5, "1.0"),t(", "), t("initx:"),i(6, "0.5"),t(", "), t("inity:"),i(7, "0.5"),t(", "), t("initz:"),i(8, "0.5"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "Osc.ar", name = "Osc.ar", dscr = "Snippet for Osc.ar, auto generated by SCNvim" }, {t("Osc.ar"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Osc.kr", name = "Osc.kr", dscr = "Snippet for Osc.kr, auto generated by SCNvim" }, {t("Osc.kr"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "OscN.ar", name = "OscN.ar", dscr = "Snippet for OscN.ar, auto generated by SCNvim" }, {t("OscN.ar"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "OscN.kr", name = "OscN.kr", dscr = "Snippet for OscN.kr, auto generated by SCNvim" }, {t("OscN.kr"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "OteyPiano.ar", name = "OteyPiano.ar", dscr = "Snippet for OteyPiano.ar, auto generated by SCNvim" }, {t("OteyPiano.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("vel:"),i(2, "1"),t(", "), t("t_gate:"),i(3, "0"),t(", "), t("rmin:"),i(4, "0.35"),t(", "), t("rmax:"),i(5, "2"),t(", "), t("rampl:"),i(6, "4"),t(", "), t("rampr:"),i(7, "8"),t(", "), t("rcore:"),i(8, "1"),t(", "), t("lmin:"),i(9, "0.07"),t(", "), t("lmax:"),i(10, "1.4"),t(", "), t("lampl:"),i(11, "-4"),t(", "), t("lampr:"),i(12, "4"),t(", "), t("rho:"),i(13, "1"),t(", "), t("e:"),i(14, "1"),t(", "), t("zb:"),i(15, "1"),t(", "), t("zh:"),i(16, "0"),t(", "), t("mh:"),i(17, "1"),t(", "), t("k:"),i(18, "0.2"),t(", "), t("alpha:"),i(19, "1"),t(", "), t("p:"),i(20, "1"),t(", "), t("hpos:"),i(21, "0.142"),t(", "), t("loss:"),i(22, "1"),t(", "), t("detune:"),i(23, "0.0003"),t(", "), t("hammer_type:"),i(24, "1"), t(")"),}),
s( {trig = "OteyPianoStrings.ar", name = "OteyPianoStrings.ar", dscr = "Snippet for OteyPianoStrings.ar, auto generated by SCNvim" }, {t("OteyPianoStrings.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("vel:"),i(2, "1"),t(", "), t("t_gate:"),i(3, "0"),t(", "), t("rmin:"),i(4, "0.35"),t(", "), t("rmax:"),i(5, "2"),t(", "), t("rampl:"),i(6, "4"),t(", "), t("rampr:"),i(7, "8"),t(", "), t("rcore:"),i(8, "1"),t(", "), t("lmin:"),i(9, "0.07"),t(", "), t("lmax:"),i(10, "1.4"),t(", "), t("lampl:"),i(11, "-4"),t(", "), t("lampr:"),i(12, "4"),t(", "), t("rho:"),i(13, "1"),t(", "), t("e:"),i(14, "1"),t(", "), t("zb:"),i(15, "1"),t(", "), t("zh:"),i(16, "0"),t(", "), t("mh:"),i(17, "1"),t(", "), t("k:"),i(18, "0.2"),t(", "), t("alpha:"),i(19, "1"),t(", "), t("p:"),i(20, "1"),t(", "), t("hpos:"),i(21, "0.142"),t(", "), t("loss:"),i(22, "1"),t(", "), t("detune:"),i(23, "0.0003"),t(", "), t("hammer_type:"),i(24, "1"), t(")"),}),
s( {trig = "OteySoundBoard.ar", name = "OteySoundBoard.ar", dscr = "Snippet for OteySoundBoard.ar, auto generated by SCNvim" }, {t("OteySoundBoard.ar"),t("("),t("inp:"),i(1, "0"),t(", "), t("c1:"),i(2, "20"),t(", "), t("c3:"),i(3, "20"),t(", "), t("mix:"),i(4, "0.8"), t(")"),}),
s( {trig = "Out.ar", name = "Out.ar", dscr = "Snippet for Out.ar, auto generated by SCNvim" }, {t("Out.ar"),t("("),t("bus:"),i(1, "nil"),t(", "), t("channelsArray:"),i(2, "nil"), t(")"),}),
s( {trig = "Out.kr", name = "Out.kr", dscr = "Snippet for Out.kr, auto generated by SCNvim" }, {t("Out.kr"),t("("),t("bus:"),i(1, "nil"),t(", "), t("channelsArray:"),i(2, "nil"), t(")"),}),
s( {trig = "Out.numFixedArgs", name = "Out.numFixedArgs", dscr = "Snippet for Out.numFixedArgs, auto generated by SCNvim" }, {t("Out.numFixedArgs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "OutOfContextReturnError.new", name = "OutOfContextReturnError.new", dscr = "Snippet for OutOfContextReturnError.new, auto generated by SCNvim" }, {t("OutOfContextReturnError.new"),t("("),t("receiver:"),i(1, "nil"),t(", "), t("method:"),i(2, "nil"),t(", "), t("result:"),i(3, "nil"), t(")"),}),
s( {trig = "OutputProxy.new", name = "OutputProxy.new", dscr = "Snippet for OutputProxy.new, auto generated by SCNvim" }, {t("OutputProxy.new"),t("("),t("rate:"),i(1, "nil"),t(", "), t("itsSourceUGen:"),i(2, "nil"),t(", "), t("index:"),i(3, "nil"), t(")"),}),
s( {trig = "P3n1.new", name = "P3n1.new", dscr = "Snippet for P3n1.new, auto generated by SCNvim" }, {t("P3n1.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("endWhen:"),i(2, "nil"), t(")"),}),
s( {trig = "PAbstractGroup.embedLoop", name = "PAbstractGroup.embedLoop", dscr = "Snippet for PAbstractGroup.embedLoop, auto generated by SCNvim" }, {t("PAbstractGroup.embedLoop"),t("("),t("inevent:"),i(1, "nil"),t(", "), t("stream:"),i(2, "nil"),t(", "), t("groupID:"),i(3, "nil"),t(", "), t("ingroup:"),i(4, "nil"),t(", "), t("cleanup:"),i(5, "nil"), t(")"),}),
s( {trig = "PMOsc.ar", name = "PMOsc.ar", dscr = "Snippet for PMOsc.ar, auto generated by SCNvim" }, {t("PMOsc.ar"),t("("),t("carfreq:"),i(1, "nil"),t(", "), t("modfreq:"),i(2, "nil"),t(", "), t("pmindex:"),i(3, "0.0"),t(", "), t("modphase:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "PMOsc.kr", name = "PMOsc.kr", dscr = "Snippet for PMOsc.kr, auto generated by SCNvim" }, {t("PMOsc.kr"),t("("),t("carfreq:"),i(1, "nil"),t(", "), t("modfreq:"),i(2, "nil"),t(", "), t("pmindex:"),i(3, "0.0"),t(", "), t("modphase:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "PSinGrain.ar", name = "PSinGrain.ar", dscr = "Snippet for PSinGrain.ar, auto generated by SCNvim" }, {t("PSinGrain.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("dur:"),i(2, "0.2"),t(", "), t("amp:"),i(3, "0.1"), t(")"),}),
s( {trig = "PVInfo.categories", name = "PVInfo.categories", dscr = "Snippet for PVInfo.categories, auto generated by SCNvim" }, {t("PVInfo.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PVInfo.ar", name = "PVInfo.ar", dscr = "Snippet for PVInfo.ar, auto generated by SCNvim" }, {t("PVInfo.ar"),t("("),t("pvbuffer:"),i(1, "nil"),t(", "), t("binNum:"),i(2, "0"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "PVInfo.kr", name = "PVInfo.kr", dscr = "Snippet for PVInfo.kr, auto generated by SCNvim" }, {t("PVInfo.kr"),t("("),t("pvbuffer:"),i(1, "nil"),t(", "), t("binNum:"),i(2, "0"),t(", "), t("filePointer:"),i(3, "0"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "PVSynth.categories", name = "PVSynth.categories", dscr = "Snippet for PVSynth.categories, auto generated by SCNvim" }, {t("PVSynth.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PVSynth.ar", name = "PVSynth.ar", dscr = "Snippet for PVSynth.ar, auto generated by SCNvim" }, {t("PVSynth.ar"),t("("),t("pvbuffer:"),i(1, "nil"),t(", "), t("numBins:"),i(2, "0"),t(", "), t("binStart:"),i(3, "0"),t(", "), t("binSkip:"),i(4, "1"),t(", "), t("filePointer:"),i(5, "0"),t(", "), t("freqMul:"),i(6, "1.0"),t(", "), t("freqAdd:"),i(7, "0.0"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "PV_BinBufRd.new", name = "PV_BinBufRd.new", dscr = "Snippet for PV_BinBufRd.new, auto generated by SCNvim" }, {t("PV_BinBufRd.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("playbuf:"),i(2, "nil"),t(", "), t("point:"),i(3, "1.0"),t(", "), t("binStart:"),i(4, "0"),t(", "), t("binSkip:"),i(5, "1"),t(", "), t("numBins:"),i(6, "1"),t(", "), t("clear:"),i(7, "0"), t(")"),}),
s( {trig = "PV_BinDelay.new", name = "PV_BinDelay.new", dscr = "Snippet for PV_BinDelay.new, auto generated by SCNvim" }, {t("PV_BinDelay.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("maxdelay:"),i(2, "nil"),t(", "), t("delaybuf:"),i(3, "nil"),t(", "), t("fbbuf:"),i(4, "nil"),t(", "), t("hop:"),i(5, "0.5"), t(")"),}),
s( {trig = "PV_BinFilter.new", name = "PV_BinFilter.new", dscr = "Snippet for PV_BinFilter.new, auto generated by SCNvim" }, {t("PV_BinFilter.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("start:"),i(2, "0"),t(", "), t("end:"),i(3, "0"), t(")"),}),
s( {trig = "PV_BinPlayBuf.new", name = "PV_BinPlayBuf.new", dscr = "Snippet for PV_BinPlayBuf.new, auto generated by SCNvim" }, {t("PV_BinPlayBuf.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("playbuf:"),i(2, "nil"),t(", "), t("rate:"),i(3, "1.0"),t(", "), t("offset:"),i(4, "0.0"),t(", "), t("binStart:"),i(5, "0"),t(", "), t("binSkip:"),i(6, "1"),t(", "), t("numBins:"),i(7, "1"),t(", "), t("loop:"),i(8, "0.0"),t(", "), t("clear:"),i(9, "0"), t(")"),}),
s( {trig = "PV_BinScramble.new", name = "PV_BinScramble.new", dscr = "Snippet for PV_BinScramble.new, auto generated by SCNvim" }, {t("PV_BinScramble.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("wipe:"),i(2, "0.0"),t(", "), t("width:"),i(3, "0.2"),t(", "), t("trig:"),i(4, "0.0"), t(")"),}),
s( {trig = "PV_BinShift.new", name = "PV_BinShift.new", dscr = "Snippet for PV_BinShift.new, auto generated by SCNvim" }, {t("PV_BinShift.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("stretch:"),i(2, "1.0"),t(", "), t("shift:"),i(3, "0.0"),t(", "), t("interp:"),i(4, "0"), t(")"),}),
s( {trig = "PV_BinWipe.new", name = "PV_BinWipe.new", dscr = "Snippet for PV_BinWipe.new, auto generated by SCNvim" }, {t("PV_BinWipe.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"),t(", "), t("wipe:"),i(3, "0.0"), t(")"),}),
s( {trig = "PV_BrickWall.new", name = "PV_BrickWall.new", dscr = "Snippet for PV_BrickWall.new, auto generated by SCNvim" }, {t("PV_BrickWall.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("wipe:"),i(2, "0.0"), t(")"),}),
s( {trig = "PV_BufRd.new", name = "PV_BufRd.new", dscr = "Snippet for PV_BufRd.new, auto generated by SCNvim" }, {t("PV_BufRd.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("playbuf:"),i(2, "nil"),t(", "), t("point:"),i(3, "1.0"), t(")"),}),
s( {trig = "PV_CommonMag.new", name = "PV_CommonMag.new", dscr = "Snippet for PV_CommonMag.new, auto generated by SCNvim" }, {t("PV_CommonMag.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"),t(", "), t("tolerance:"),i(3, "0.0"),t(", "), t("remove:"),i(4, "0.0"), t(")"),}),
s( {trig = "PV_Compander.new", name = "PV_Compander.new", dscr = "Snippet for PV_Compander.new, auto generated by SCNvim" }, {t("PV_Compander.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("thresh:"),i(2, "50"),t(", "), t("slopeBelow:"),i(3, "1"),t(", "), t("slopeAbove:"),i(4, "1"), t(")"),}),
s( {trig = "PV_ConformalMap.new", name = "PV_ConformalMap.new", dscr = "Snippet for PV_ConformalMap.new, auto generated by SCNvim" }, {t("PV_ConformalMap.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("areal:"),i(2, "0.0"),t(", "), t("aimag:"),i(3, "0.0"), t(")"),}),
s( {trig = "PV_DiffMags.new", name = "PV_DiffMags.new", dscr = "Snippet for PV_DiffMags.new, auto generated by SCNvim" }, {t("PV_DiffMags.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"), t(")"),}),
s( {trig = "PV_DiffMags.categories", name = "PV_DiffMags.categories", dscr = "Snippet for PV_DiffMags.categories, auto generated by SCNvim" }, {t("PV_DiffMags.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PV_Diffuser.new", name = "PV_Diffuser.new", dscr = "Snippet for PV_Diffuser.new, auto generated by SCNvim" }, {t("PV_Diffuser.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("trig:"),i(2, "0.0"), t(")"),}),
s( {trig = "PV_ExtractRepeat.new", name = "PV_ExtractRepeat.new", dscr = "Snippet for PV_ExtractRepeat.new, auto generated by SCNvim" }, {t("PV_ExtractRepeat.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("loopbuf:"),i(2, "nil"),t(", "), t("loopdur:"),i(3, "nil"),t(", "), t("memorytime:"),i(4, "30"),t(", "), t("which:"),i(5, "0"),t(", "), t("ffthop:"),i(6, "0.5"),t(", "), t("thresh:"),i(7, "1"), t(")"),}),
s( {trig = "PV_ExtractRepeat.categories", name = "PV_ExtractRepeat.categories", dscr = "Snippet for PV_ExtractRepeat.categories, auto generated by SCNvim" }, {t("PV_ExtractRepeat.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PV_Freeze.new", name = "PV_Freeze.new", dscr = "Snippet for PV_Freeze.new, auto generated by SCNvim" }, {t("PV_Freeze.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("freeze:"),i(2, "0.0"), t(")"),}),
s( {trig = "PV_HainsworthFoote.ar", name = "PV_HainsworthFoote.ar", dscr = "Snippet for PV_HainsworthFoote.ar, auto generated by SCNvim" }, {t("PV_HainsworthFoote.ar"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("proph:"),i(2, "0.0"),t(", "), t("propf:"),i(3, "0.0"),t(", "), t("threshold:"),i(4, "1.0"),t(", "), t("waittime:"),i(5, "0.04"), t(")"),}),
s( {trig = "PV_Invert.new", name = "PV_Invert.new", dscr = "Snippet for PV_Invert.new, auto generated by SCNvim" }, {t("PV_Invert.new"),t("("),t("buffer:"),i(1, "nil"), t(")"),}),
s( {trig = "PV_JensenAndersen.ar", name = "PV_JensenAndersen.ar", dscr = "Snippet for PV_JensenAndersen.ar, auto generated by SCNvim" }, {t("PV_JensenAndersen.ar"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("propsc:"),i(2, "0.25"),t(", "), t("prophfe:"),i(3, "0.25"),t(", "), t("prophfc:"),i(4, "0.25"),t(", "), t("propsf:"),i(5, "0.25"),t(", "), t("threshold:"),i(6, "1.0"),t(", "), t("waittime:"),i(7, "0.04"), t(")"),}),
s( {trig = "PV_MagAbove.new", name = "PV_MagAbove.new", dscr = "Snippet for PV_MagAbove.new, auto generated by SCNvim" }, {t("PV_MagAbove.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("threshold:"),i(2, "0.0"), t(")"),}),
s( {trig = "PV_MagBuffer.new", name = "PV_MagBuffer.new", dscr = "Snippet for PV_MagBuffer.new, auto generated by SCNvim" }, {t("PV_MagBuffer.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("databuffer:"),i(2, "nil"), t(")"),}),
s( {trig = "PV_MagDiv.new", name = "PV_MagDiv.new", dscr = "Snippet for PV_MagDiv.new, auto generated by SCNvim" }, {t("PV_MagDiv.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"),t(", "), t("zeroed:"),i(3, "0.0001"), t(")"),}),
s( {trig = "PV_MagExp.new", name = "PV_MagExp.new", dscr = "Snippet for PV_MagExp.new, auto generated by SCNvim" }, {t("PV_MagExp.new"),t("("),t("buffer:"),i(1, "nil"), t(")"),}),
s( {trig = "PV_MagExp.categories", name = "PV_MagExp.categories", dscr = "Snippet for PV_MagExp.categories, auto generated by SCNvim" }, {t("PV_MagExp.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PV_MagFreeze.new", name = "PV_MagFreeze.new", dscr = "Snippet for PV_MagFreeze.new, auto generated by SCNvim" }, {t("PV_MagFreeze.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("freeze:"),i(2, "0.0"), t(")"),}),
s( {trig = "PV_MagGate.new", name = "PV_MagGate.new", dscr = "Snippet for PV_MagGate.new, auto generated by SCNvim" }, {t("PV_MagGate.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("thresh:"),i(2, "1.0"),t(", "), t("remove:"),i(3, "0.0"), t(")"),}),
s( {trig = "PV_MagLog.new", name = "PV_MagLog.new", dscr = "Snippet for PV_MagLog.new, auto generated by SCNvim" }, {t("PV_MagLog.new"),t("("),t("buffer:"),i(1, "nil"), t(")"),}),
s( {trig = "PV_MagLog.categories", name = "PV_MagLog.categories", dscr = "Snippet for PV_MagLog.categories, auto generated by SCNvim" }, {t("PV_MagLog.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PV_MagMap.new", name = "PV_MagMap.new", dscr = "Snippet for PV_MagMap.new, auto generated by SCNvim" }, {t("PV_MagMap.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("mapbuf:"),i(2, "nil"), t(")"),}),
s( {trig = "PV_MagMinus.new", name = "PV_MagMinus.new", dscr = "Snippet for PV_MagMinus.new, auto generated by SCNvim" }, {t("PV_MagMinus.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"),t(", "), t("remove:"),i(3, "1.0"), t(")"),}),
s( {trig = "PV_MagMul.new", name = "PV_MagMul.new", dscr = "Snippet for PV_MagMul.new, auto generated by SCNvim" }, {t("PV_MagMul.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"), t(")"),}),
s( {trig = "PV_MagMulAdd.new", name = "PV_MagMulAdd.new", dscr = "Snippet for PV_MagMulAdd.new, auto generated by SCNvim" }, {t("PV_MagMulAdd.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("mul:"),i(2, "1"),t(", "), t("add:"),i(3, "0"), t(")"),}),
s( {trig = "PV_MagMulAdd.categories", name = "PV_MagMulAdd.categories", dscr = "Snippet for PV_MagMulAdd.categories, auto generated by SCNvim" }, {t("PV_MagMulAdd.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PV_MagScale.new", name = "PV_MagScale.new", dscr = "Snippet for PV_MagScale.new, auto generated by SCNvim" }, {t("PV_MagScale.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"), t(")"),}),
s( {trig = "PV_MagShift.new", name = "PV_MagShift.new", dscr = "Snippet for PV_MagShift.new, auto generated by SCNvim" }, {t("PV_MagShift.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("stretch:"),i(2, "1.0"),t(", "), t("shift:"),i(3, "0.0"), t(")"),}),
s( {trig = "PV_MagSmear.new", name = "PV_MagSmear.new", dscr = "Snippet for PV_MagSmear.new, auto generated by SCNvim" }, {t("PV_MagSmear.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("bins:"),i(2, "0.0"), t(")"),}),
s( {trig = "PV_MagSmooth.new", name = "PV_MagSmooth.new", dscr = "Snippet for PV_MagSmooth.new, auto generated by SCNvim" }, {t("PV_MagSmooth.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("factor:"),i(2, "0.1"), t(")"),}),
s( {trig = "PV_MagSmooth.categories", name = "PV_MagSmooth.categories", dscr = "Snippet for PV_MagSmooth.categories, auto generated by SCNvim" }, {t("PV_MagSmooth.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PV_MagSquared.new", name = "PV_MagSquared.new", dscr = "Snippet for PV_MagSquared.new, auto generated by SCNvim" }, {t("PV_MagSquared.new"),t("("),t("buffer:"),i(1, "nil"), t(")"),}),
s( {trig = "PV_MagSubtract.new", name = "PV_MagSubtract.new", dscr = "Snippet for PV_MagSubtract.new, auto generated by SCNvim" }, {t("PV_MagSubtract.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"),t(", "), t("zerolimit:"),i(3, "0"), t(")"),}),
s( {trig = "PV_MaxMagN.new", name = "PV_MaxMagN.new", dscr = "Snippet for PV_MaxMagN.new, auto generated by SCNvim" }, {t("PV_MaxMagN.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("numbins:"),i(2, "nil"), t(")"),}),
s( {trig = "PV_Morph.new", name = "PV_Morph.new", dscr = "Snippet for PV_Morph.new, auto generated by SCNvim" }, {t("PV_Morph.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"),t(", "), t("morph:"),i(3, "0.0"), t(")"),}),
s( {trig = "PV_NoiseSynthP.new", name = "PV_NoiseSynthP.new", dscr = "Snippet for PV_NoiseSynthP.new, auto generated by SCNvim" }, {t("PV_NoiseSynthP.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("threshold:"),i(2, "0.1"),t(", "), t("numFrames:"),i(3, "2"),t(", "), t("initflag:"),i(4, "0"), t(")"),}),
s( {trig = "PV_OddBin.new", name = "PV_OddBin.new", dscr = "Snippet for PV_OddBin.new, auto generated by SCNvim" }, {t("PV_OddBin.new"),t("("),t("buffer:"),i(1, "nil"), t(")"),}),
s( {trig = "PV_PhaseShift.new", name = "PV_PhaseShift.new", dscr = "Snippet for PV_PhaseShift.new, auto generated by SCNvim" }, {t("PV_PhaseShift.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("shift:"),i(2, "nil"),t(", "), t("integrate:"),i(3, "0"), t(")"),}),
s( {trig = "PV_PitchShift.new", name = "PV_PitchShift.new", dscr = "Snippet for PV_PitchShift.new, auto generated by SCNvim" }, {t("PV_PitchShift.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("ratio:"),i(2, "nil"), t(")"),}),
s( {trig = "PV_PlayBuf.new", name = "PV_PlayBuf.new", dscr = "Snippet for PV_PlayBuf.new, auto generated by SCNvim" }, {t("PV_PlayBuf.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("playbuf:"),i(2, "nil"),t(", "), t("rate:"),i(3, "1.0"),t(", "), t("offset:"),i(4, "0.0"),t(", "), t("loop:"),i(5, "0.0"), t(")"),}),
s( {trig = "PV_RandComb.new", name = "PV_RandComb.new", dscr = "Snippet for PV_RandComb.new, auto generated by SCNvim" }, {t("PV_RandComb.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("wipe:"),i(2, "0.0"),t(", "), t("trig:"),i(3, "0.0"), t(")"),}),
s( {trig = "PV_RandWipe.new", name = "PV_RandWipe.new", dscr = "Snippet for PV_RandWipe.new, auto generated by SCNvim" }, {t("PV_RandWipe.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"),t(", "), t("wipe:"),i(3, "0.0"),t(", "), t("trig:"),i(4, "0.0"), t(")"),}),
s( {trig = "PV_RecordBuf.new", name = "PV_RecordBuf.new", dscr = "Snippet for PV_RecordBuf.new, auto generated by SCNvim" }, {t("PV_RecordBuf.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("recbuf:"),i(2, "nil"),t(", "), t("offset:"),i(3, "0.0"),t(", "), t("run:"),i(4, "0.0"),t(", "), t("loop:"),i(5, "0.0"),t(", "), t("hop:"),i(6, "0.5"),t(", "), t("wintype:"),i(7, "0"), t(")"),}),
s( {trig = "PV_RectComb.new", name = "PV_RectComb.new", dscr = "Snippet for PV_RectComb.new, auto generated by SCNvim" }, {t("PV_RectComb.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("numTeeth:"),i(2, "0.0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("width:"),i(4, "0.5"), t(")"),}),
s( {trig = "PV_RectComb2.new", name = "PV_RectComb2.new", dscr = "Snippet for PV_RectComb2.new, auto generated by SCNvim" }, {t("PV_RectComb2.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"),t(", "), t("numTeeth:"),i(3, "0.0"),t(", "), t("phase:"),i(4, "0.0"),t(", "), t("width:"),i(5, "0.5"), t(")"),}),
s( {trig = "PV_SoftWipe.new", name = "PV_SoftWipe.new", dscr = "Snippet for PV_SoftWipe.new, auto generated by SCNvim" }, {t("PV_SoftWipe.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"),t(", "), t("wipe:"),i(3, "0.0"), t(")"),}),
s( {trig = "PV_SpectralEnhance.new", name = "PV_SpectralEnhance.new", dscr = "Snippet for PV_SpectralEnhance.new, auto generated by SCNvim" }, {t("PV_SpectralEnhance.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("numPartials:"),i(2, "8"),t(", "), t("ratio:"),i(3, "2"),t(", "), t("strength:"),i(4, "0.1"), t(")"),}),
s( {trig = "PV_SpectralMap.new", name = "PV_SpectralMap.new", dscr = "Snippet for PV_SpectralMap.new, auto generated by SCNvim" }, {t("PV_SpectralMap.new"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("specBuffer:"),i(2, "nil"),t(", "), t("floor:"),i(3, "0.0"),t(", "), t("freeze:"),i(4, "0.0"),t(", "), t("mode:"),i(5, "0.0"),t(", "), t("norm:"),i(6, "0.0"),t(", "), t("window:"),i(7, "0.0"), t(")"),}),
s( {trig = "PV_Whiten.new", name = "PV_Whiten.new", dscr = "Snippet for PV_Whiten.new, auto generated by SCNvim" }, {t("PV_Whiten.new"),t("("),t("chain:"),i(1, "nil"),t(", "), t("trackbufnum:"),i(2, "nil"),t(", "), t("relaxtime:"),i(3, "2"),t(", "), t("floor:"),i(4, "0.1"),t(", "), t("smear:"),i(5, "0"),t(", "), t("bindownsample:"),i(6, "0"), t(")"),}),
s( {trig = "PV_Whiten.categories", name = "PV_Whiten.categories", dscr = "Snippet for PV_Whiten.categories, auto generated by SCNvim" }, {t("PV_Whiten.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PV_XFade.new", name = "PV_XFade.new", dscr = "Snippet for PV_XFade.new, auto generated by SCNvim" }, {t("PV_XFade.new"),t("("),t("bufferA:"),i(1, "nil"),t(", "), t("bufferB:"),i(2, "nil"),t(", "), t("fade:"),i(3, "0.0"), t(")"),}),
s( {trig = "PackFFT.new", name = "PackFFT.new", dscr = "Snippet for PackFFT.new, auto generated by SCNvim" }, {t("PackFFT.new"),t("("),t("chain:"),i(1, "nil"),t(", "), t("bufsize:"),i(2, "nil"),t(", "), t("magsphases:"),i(3, "nil"),t(", "), t("frombin:"),i(4, "0"),t(", "), t("tobin:"),i(5, "nil"),t(", "), t("zeroothers:"),i(6, "0"), t(")"),}),
s( {trig = "PageLayout.new", name = "PageLayout.new", dscr = "Snippet for PageLayout.new, auto generated by SCNvim" }, {t("PageLayout.new"),t("("),t("title:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("margin:"),i(3, "nil"),t(", "), t("background:"),i(4, "nil"),t(", "), t("scroll:"),i(5, "true"),t(", "), t("front:"),i(6, "true"), t(")"),}),
s( {trig = "PageLayout.on", name = "PageLayout.on", dscr = "Snippet for PageLayout.on, auto generated by SCNvim" }, {t("PageLayout.on"),t("("),t("window:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("margin:"),i(3, "nil"),t(", "), t("background:"),i(4, "nil"), t(")"),}),
s( {trig = "PageLayout.guify", name = "PageLayout.guify", dscr = "Snippet for PageLayout.guify, auto generated by SCNvim" }, {t("PageLayout.guify"),t("("),t("parent:"),i(1, "nil"),t(", "), t("title:"),i(2, "nil"),t(", "), t("width:"),i(3, "nil"),t(", "), t("height:"),i(4, "nil"),t(", "), t("background:"),i(5, "nil"), t(")"),}),
s( {trig = "Pair.new", name = "Pair.new", dscr = "Snippet for Pair.new, auto generated by SCNvim" }, {t("Pair.new"),t("("),t("linkDown:"),i(1, "nil"),t(", "), t("linkAcross:"),i(2, "nil"), t(")"),}),
s( {trig = "Pair.newFrom", name = "Pair.newFrom", dscr = "Snippet for Pair.newFrom, auto generated by SCNvim" }, {t("Pair.newFrom"),t("("),t("collection:"),i(1, "nil"), t(")"),}),
s( {trig = "Pan2.ar", name = "Pan2.ar", dscr = "Snippet for Pan2.ar, auto generated by SCNvim" }, {t("Pan2.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("pos:"),i(2, "0.0"),t(", "), t("level:"),i(3, "1.0"), t(")"),}),
s( {trig = "Pan2.kr", name = "Pan2.kr", dscr = "Snippet for Pan2.kr, auto generated by SCNvim" }, {t("Pan2.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("pos:"),i(2, "0.0"),t(", "), t("level:"),i(3, "1.0"), t(")"),}),
s( {trig = "Pan4.ar", name = "Pan4.ar", dscr = "Snippet for Pan4.ar, auto generated by SCNvim" }, {t("Pan4.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("xpos:"),i(2, "0.0"),t(", "), t("ypos:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"), t(")"),}),
s( {trig = "Pan4.kr", name = "Pan4.kr", dscr = "Snippet for Pan4.kr, auto generated by SCNvim" }, {t("Pan4.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("xpos:"),i(2, "0.0"),t(", "), t("ypos:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"), t(")"),}),
s( {trig = "PanAz.ar", name = "PanAz.ar", dscr = "Snippet for PanAz.ar, auto generated by SCNvim" }, {t("PanAz.ar"),t("("),t("numChans:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("pos:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"),t(", "), t("width:"),i(5, "2.0"),t(", "), t("orientation:"),i(6, "0.5"), t(")"),}),
s( {trig = "PanAz.kr", name = "PanAz.kr", dscr = "Snippet for PanAz.kr, auto generated by SCNvim" }, {t("PanAz.kr"),t("("),t("numChans:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("pos:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"),t(", "), t("width:"),i(5, "2.0"),t(", "), t("orientation:"),i(6, "0.5"), t(")"),}),
s( {trig = "PanB.ar", name = "PanB.ar", dscr = "Snippet for PanB.ar, auto generated by SCNvim" }, {t("PanB.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("azimuth:"),i(2, "0"),t(", "), t("elevation:"),i(3, "0"),t(", "), t("gain:"),i(4, "1"), t(")"),}),
s( {trig = "PanB.kr", name = "PanB.kr", dscr = "Snippet for PanB.kr, auto generated by SCNvim" }, {t("PanB.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("azimuth:"),i(2, "0"),t(", "), t("elevation:"),i(3, "0"),t(", "), t("gain:"),i(4, "1"), t(")"),}),
s( {trig = "PanB2.ar", name = "PanB2.ar", dscr = "Snippet for PanB2.ar, auto generated by SCNvim" }, {t("PanB2.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("azimuth:"),i(2, "0"),t(", "), t("gain:"),i(3, "1"), t(")"),}),
s( {trig = "PanB2.kr", name = "PanB2.kr", dscr = "Snippet for PanB2.kr, auto generated by SCNvim" }, {t("PanB2.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("azimuth:"),i(2, "0"),t(", "), t("gain:"),i(3, "1"), t(")"),}),
s( {trig = "PanX.ar", name = "PanX.ar", dscr = "Snippet for PanX.ar, auto generated by SCNvim" }, {t("PanX.ar"),t("("),t("numChans:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("pos:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"),t(", "), t("width:"),i(5, "2.0"), t(")"),}),
s( {trig = "PanX.kr", name = "PanX.kr", dscr = "Snippet for PanX.kr, auto generated by SCNvim" }, {t("PanX.kr"),t("("),t("numChans:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("pos:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"),t(", "), t("width:"),i(5, "2.0"), t(")"),}),
s( {trig = "PanX2D.ar", name = "PanX2D.ar", dscr = "Snippet for PanX2D.ar, auto generated by SCNvim" }, {t("PanX2D.ar"),t("("),t("numChansX:"),i(1, "nil"),t(", "), t("numChansY:"),i(2, "nil"),t(", "), t("in:"),i(3, "nil"),t(", "), t("posX:"),i(4, "0.0"),t(", "), t("posY:"),i(5, "0.0"),t(", "), t("level:"),i(6, "1.0"),t(", "), t("widthX:"),i(7, "2.0"),t(", "), t("widthY:"),i(8, "2.0"), t(")"),}),
s( {trig = "PanX2D.kr", name = "PanX2D.kr", dscr = "Snippet for PanX2D.kr, auto generated by SCNvim" }, {t("PanX2D.kr"),t("("),t("numChansX:"),i(1, "nil"),t(", "), t("numChansY:"),i(2, "nil"),t(", "), t("in:"),i(3, "nil"),t(", "), t("posX:"),i(4, "0.0"),t(", "), t("posY:"),i(5, "0.0"),t(", "), t("level:"),i(6, "1.0"),t(", "), t("widthX:"),i(7, "2.0"),t(", "), t("widthY:"),i(8, "2.0"), t(")"),}),
s( {trig = "ParGroup.creationCmd", name = "ParGroup.creationCmd", dscr = "Snippet for ParGroup.creationCmd, auto generated by SCNvim" }, {t("ParGroup.creationCmd"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ParamView.new", name = "ParamView.new", dscr = "Snippet for ParamView.new, auto generated by SCNvim" }, {t("ParamView.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("spec:"),i(4, "nil"),t(", "), t("action:"),i(5, "nil"),t(", "), t("initVal:"),i(6, "nil"),t(", "), t("initAction:"),i(7, "false"), t(")"),}),
s( {trig = "PartConv.ar", name = "PartConv.ar", dscr = "Snippet for PartConv.ar, auto generated by SCNvim" }, {t("PartConv.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("fftsize:"),i(2, "nil"),t(", "), t("irbufnum:"),i(3, "nil"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "PartConv.calcNumPartitions", name = "PartConv.calcNumPartitions", dscr = "Snippet for PartConv.calcNumPartitions, auto generated by SCNvim" }, {t("PartConv.calcNumPartitions"),t("("),t("fftsize:"),i(1, "nil"),t(", "), t("irbuffer:"),i(2, "nil"), t(")"),}),
s( {trig = "PartConv.calcBufSize", name = "PartConv.calcBufSize", dscr = "Snippet for PartConv.calcBufSize, auto generated by SCNvim" }, {t("PartConv.calcBufSize"),t("("),t("fftsize:"),i(1, "nil"),t(", "), t("irbuffer:"),i(2, "nil"), t(")"),}),
s( {trig = "PathName.new", name = "PathName.new", dscr = "Snippet for PathName.new, auto generated by SCNvim" }, {t("PathName.new"),t("("),t("path:"),i(1, ""), t(")"),}),
s( {trig = "PathName.initClass", name = "PathName.initClass", dscr = "Snippet for PathName.initClass, auto generated by SCNvim" }, {t("PathName.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PatternConductor.new", name = "PatternConductor.new", dscr = "Snippet for PatternConductor.new, auto generated by SCNvim" }, {t("PatternConductor.new"),t("("),t("patterns:"),i(1, "nil"),t(", "), t("event:"),i(2, "nil"),t(", "), t("quant:"),i(3, "nil"), t(")"),}),
s( {trig = "PatternProxy.new", name = "PatternProxy.new", dscr = "Snippet for PatternProxy.new, auto generated by SCNvim" }, {t("PatternProxy.new"),t("("),t("source:"),i(1, "nil"), t(")"),}),
s( {trig = "PatternProxy.default", name = "PatternProxy.default", dscr = "Snippet for PatternProxy.default, auto generated by SCNvim" }, {t("PatternProxy.default"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PatternProxy.defaultValue", name = "PatternProxy.defaultValue", dscr = "Snippet for PatternProxy.defaultValue, auto generated by SCNvim" }, {t("PatternProxy.defaultValue"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PatternProxy.parallelise", name = "PatternProxy.parallelise", dscr = "Snippet for PatternProxy.parallelise, auto generated by SCNvim" }, {t("PatternProxy.parallelise"),t("("),t("list:"),i(1, "nil"), t(")"),}),
s( {trig = "PatternProxy.removeAll", name = "PatternProxy.removeAll", dscr = "Snippet for PatternProxy.removeAll, auto generated by SCNvim" }, {t("PatternProxy.removeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PatternProxy.clear", name = "PatternProxy.clear", dscr = "Snippet for PatternProxy.clear, auto generated by SCNvim" }, {t("PatternProxy.clear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PatternProxy.basicNew", name = "PatternProxy.basicNew", dscr = "Snippet for PatternProxy.basicNew, auto generated by SCNvim" }, {t("PatternProxy.basicNew"),t("("),t("source:"),i(1, "nil"), t(")"),}),
s( {trig = "PatternProxy.at", name = "PatternProxy.at", dscr = "Snippet for PatternProxy.at, auto generated by SCNvim" }, {t("PatternProxy.at"),t("("),t("key:"),i(1, "nil"), t(")"),}),
s( {trig = "PatternProxy.postRepository", name = "PatternProxy.postRepository", dscr = "Snippet for PatternProxy.postRepository, auto generated by SCNvim" }, {t("PatternProxy.postRepository"),t("("),t("keys:"),i(1, "nil"),t(", "), t("stream:"),i(2, "nil"), t(")"),}),
s( {trig = "PatternProxy.event", name = "PatternProxy.event", dscr = "Snippet for PatternProxy.event, auto generated by SCNvim" }, {t("PatternProxy.event"),t("("),t("proxyClass:"),i(1, "nil"), t(")"),}),
s( {trig = "PatternProxy.hasGlobalDictionary", name = "PatternProxy.hasGlobalDictionary", dscr = "Snippet for PatternProxy.hasGlobalDictionary, auto generated by SCNvim" }, {t("PatternProxy.hasGlobalDictionary"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pause.kr", name = "Pause.kr", dscr = "Snippet for Pause.kr, auto generated by SCNvim" }, {t("Pause.kr"),t("("),t("gate:"),i(1, "nil"),t(", "), t("id:"),i(2, "nil"), t(")"),}),
s( {trig = "PauseSelf.kr", name = "PauseSelf.kr", dscr = "Snippet for PauseSelf.kr, auto generated by SCNvim" }, {t("PauseSelf.kr"),t("("),t("in:"),i(1, "nil"), t(")"),}),
s( {trig = "PauseSelfWhenDone.kr", name = "PauseSelfWhenDone.kr", dscr = "Snippet for PauseSelfWhenDone.kr, auto generated by SCNvim" }, {t("PauseSelfWhenDone.kr"),t("("),t("src:"),i(1, "nil"), t(")"),}),
s( {trig = "PauseStream.new", name = "PauseStream.new", dscr = "Snippet for PauseStream.new, auto generated by SCNvim" }, {t("PauseStream.new"),t("("),t("argStream:"),i(1, "nil"),t(", "), t("clock:"),i(2, "nil"), t(")"),}),
s( {trig = "Pavaroh.new", name = "Pavaroh.new", dscr = "Snippet for Pavaroh.new, auto generated by SCNvim" }, {t("Pavaroh.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("aroh:"),i(2, "nil"),t(", "), t("avaroh:"),i(3, "nil"),t(", "), t("stepsPerOctave:"),i(4, "12"), t(")"),}),
s( {trig = "Pbeta.new", name = "Pbeta.new", dscr = "Snippet for Pbeta.new, auto generated by SCNvim" }, {t("Pbeta.new"),t("("),t("lo:"),i(1, "0.0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("prob1:"),i(3, "1"),t(", "), t("prob2:"),i(4, "1"),t(", "), t("length:"),i(5, "inf"), t(")"),}),
s( {trig = "Pbind.new", name = "Pbind.new", dscr = "Snippet for Pbind.new, auto generated by SCNvim" }, {t("Pbind.new"),t("("),t("pairs:"),i(1, "[]"), t(")"),}),
s( {trig = "PbindProxy.new", name = "PbindProxy.new", dscr = "Snippet for PbindProxy.new, auto generated by SCNvim" }, {t("PbindProxy.new"),t("("),t("pairs:"),i(1, "[]"), t(")"),}),
s( {trig = "Pbindef.new", name = "Pbindef.new", dscr = "Snippet for Pbindef.new, auto generated by SCNvim" }, {t("Pbindef.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("pairs:"),i(2, "[]"), t(")"),}),
s( {trig = "Pbindef.hasGlobalDictionary", name = "Pbindef.hasGlobalDictionary", dscr = "Snippet for Pbindef.hasGlobalDictionary, auto generated by SCNvim" }, {t("Pbindef.hasGlobalDictionary"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pbindf.new", name = "Pbindf.new", dscr = "Snippet for Pbindf.new, auto generated by SCNvim" }, {t("Pbindf.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("pairs:"),i(2, "[]"), t(")"),}),
s( {trig = "Pbinop.new", name = "Pbinop.new", dscr = "Snippet for Pbinop.new, auto generated by SCNvim" }, {t("Pbinop.new"),t("("),t("operator:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("b:"),i(3, "nil"),t(", "), t("adverb:"),i(4, "nil"), t(")"),}),
s( {trig = "Pboolnet.new", name = "Pboolnet.new", dscr = "Snippet for Pboolnet.new, auto generated by SCNvim" }, {t("Pboolnet.new"),t("("),t("nodes:"),i(1, "nil"),t(", "), t("repeats:"),i(2, "1"),t(", "), t("loops:"),i(3, "1"), t(")"),}),
s( {trig = "Pbrown.new", name = "Pbrown.new", dscr = "Snippet for Pbrown.new, auto generated by SCNvim" }, {t("Pbrown.new"),t("("),t("lo:"),i(1, "0.0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("step:"),i(3, "0.125"),t(", "), t("length:"),i(4, "inf"), t(")"),}),
s( {trig = "Pbus.new", name = "Pbus.new", dscr = "Snippet for Pbus.new, auto generated by SCNvim" }, {t("Pbus.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("dur:"),i(2, "2.0"),t(", "), t("fadeTime:"),i(3, "0.02"),t(", "), t("numChannels:"),i(4, "2"),t(", "), t("rate:"),i(5, "audio"), t(")"),}),
s( {trig = "Pcauchy.new", name = "Pcauchy.new", dscr = "Snippet for Pcauchy.new, auto generated by SCNvim" }, {t("Pcauchy.new"),t("("),t("mean:"),i(1, "0.0"),t(", "), t("spread:"),i(2, "1.0"),t(", "), t("length:"),i(3, "inf"), t(")"),}),
s( {trig = "Pchain.new", name = "Pchain.new", dscr = "Snippet for Pchain.new, auto generated by SCNvim" }, {t("Pchain.new"),t("("),t("patterns:"),i(1, "[]"), t(")"),}),
s( {trig = "Pclump.new", name = "Pclump.new", dscr = "Snippet for Pclump.new, auto generated by SCNvim" }, {t("Pclump.new"),t("("),t("n:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"), t(")"),}),
s( {trig = "Pclutch.new", name = "Pclutch.new", dscr = "Snippet for Pclutch.new, auto generated by SCNvim" }, {t("Pclutch.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("connected:"),i(2, "true"), t(")"),}),
s( {trig = "Pcollatz.new", name = "Pcollatz.new", dscr = "Snippet for Pcollatz.new, auto generated by SCNvim" }, {t("Pcollatz.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("rules:"),i(2, "nil"),t(", "), t("endCondition:"),i(3, "false"), t(")"),}),
s( {trig = "PcollatzLike.new", name = "PcollatzLike.new", dscr = "Snippet for PcollatzLike.new, auto generated by SCNvim" }, {t("PcollatzLike.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("mod:"),i(2, "2"),t(", "), t("muls:"),i(3, "nil"),t(", "), t("adds:"),i(4, "nil"),t(", "), t("endCondition:"),i(5, "false"), t(")"),}),
s( {trig = "Pconst.new", name = "Pconst.new", dscr = "Snippet for Pconst.new, auto generated by SCNvim" }, {t("Pconst.new"),t("("),t("sum:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"),t(", "), t("tolerance:"),i(3, "0.001"), t(")"),}),
s( {trig = "Pdef.new", name = "Pdef.new", dscr = "Snippet for Pdef.new, auto generated by SCNvim" }, {t("Pdef.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("item:"),i(2, "nil"), t(")"),}),
s( {trig = "Pdef.hasGlobalDictionary", name = "Pdef.hasGlobalDictionary", dscr = "Snippet for Pdef.hasGlobalDictionary, auto generated by SCNvim" }, {t("Pdef.hasGlobalDictionary"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pdef.initClass", name = "Pdef.initClass", dscr = "Snippet for Pdef.initClass, auto generated by SCNvim" }, {t("Pdef.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pdef.gui", name = "Pdef.gui", dscr = "Snippet for Pdef.gui, auto generated by SCNvim" }, {t("Pdef.gui"),t("("),t("numItems:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("preset:"),i(3, "nil"), t(")"),}),
s( {trig = "PdefAllGui.observedClass", name = "PdefAllGui.observedClass", dscr = "Snippet for PdefAllGui.observedClass, auto generated by SCNvim" }, {t("PdefAllGui.observedClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PdefAllGui.tpGuiClass", name = "PdefAllGui.tpGuiClass", dscr = "Snippet for PdefAllGui.tpGuiClass, auto generated by SCNvim" }, {t("PdefAllGui.tpGuiClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PdefGui.observedClass", name = "PdefGui.observedClass", dscr = "Snippet for PdefGui.observedClass, auto generated by SCNvim" }, {t("PdefGui.observedClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pdefn.initClass", name = "Pdefn.initClass", dscr = "Snippet for Pdefn.initClass, auto generated by SCNvim" }, {t("Pdefn.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pdefn.new", name = "Pdefn.new", dscr = "Snippet for Pdefn.new, auto generated by SCNvim" }, {t("Pdefn.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("item:"),i(2, "nil"), t(")"),}),
s( {trig = "Pdefn.hasGlobalDictionary", name = "Pdefn.hasGlobalDictionary", dscr = "Snippet for Pdefn.hasGlobalDictionary, auto generated by SCNvim" }, {t("Pdefn.hasGlobalDictionary"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PdefnAllGui.observedClass", name = "PdefnAllGui.observedClass", dscr = "Snippet for PdefnAllGui.observedClass, auto generated by SCNvim" }, {t("PdefnAllGui.observedClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PdefnAllGui.tpGuiClass", name = "PdefnAllGui.tpGuiClass", dscr = "Snippet for PdefnAllGui.tpGuiClass, auto generated by SCNvim" }, {t("PdefnAllGui.tpGuiClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PdefnGui.observedClass", name = "PdefnGui.observedClass", dscr = "Snippet for PdefnGui.observedClass, auto generated by SCNvim" }, {t("PdefnGui.observedClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PdegreeToKey.new", name = "PdegreeToKey.new", dscr = "Snippet for PdegreeToKey.new, auto generated by SCNvim" }, {t("PdegreeToKey.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("scale:"),i(2, "nil"),t(", "), t("stepsPerOctave:"),i(3, "12"), t(")"),}),
s( {trig = "Pdfsm.new", name = "Pdfsm.new", dscr = "Snippet for Pdfsm.new, auto generated by SCNvim" }, {t("Pdfsm.new"),t("("),t("list:"),i(1, "nil"),t(", "), t("startState:"),i(2, "0"),t(", "), t("repeats:"),i(3, "1"), t(")"),}),
s( {trig = "Pdict.new", name = "Pdict.new", dscr = "Snippet for Pdict.new, auto generated by SCNvim" }, {t("Pdict.new"),t("("),t("dict:"),i(1, "nil"),t(", "), t("which:"),i(2, "nil"),t(", "), t("repeats:"),i(3, "inf"),t(", "), t("default:"),i(4, "nil"), t(")"),}),
s( {trig = "Pdrop.new", name = "Pdrop.new", dscr = "Snippet for Pdrop.new, auto generated by SCNvim" }, {t("Pdrop.new"),t("("),t("count:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"), t(")"),}),
s( {trig = "Pdup.new", name = "Pdup.new", dscr = "Snippet for Pdup.new, auto generated by SCNvim" }, {t("Pdup.new"),t("("),t("n:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"), t(")"),}),
s( {trig = "PdurStutter.initClass", name = "PdurStutter.initClass", dscr = "Snippet for PdurStutter.initClass, auto generated by SCNvim" }, {t("PdurStutter.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PdurStutter.new", name = "PdurStutter.new", dscr = "Snippet for PdurStutter.new, auto generated by SCNvim" }, {t("PdurStutter.new"),t("("),t("n:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"), t(")"),}),
s( {trig = "Peak.ar", name = "Peak.ar", dscr = "Snippet for Peak.ar, auto generated by SCNvim" }, {t("Peak.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trig:"),i(2, "0.0"), t(")"),}),
s( {trig = "Peak.kr", name = "Peak.kr", dscr = "Snippet for Peak.kr, auto generated by SCNvim" }, {t("Peak.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trig:"),i(2, "0.0"), t(")"),}),
s( {trig = "PeakEQ2.ar", name = "PeakEQ2.ar", dscr = "Snippet for PeakEQ2.ar, auto generated by SCNvim" }, {t("PeakEQ2.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rs:"),i(3, "1.0"),t(", "), t("db:"),i(4, "0.0"), t(")"),}),
s( {trig = "PeakEQ4.ar", name = "PeakEQ4.ar", dscr = "Snippet for PeakEQ4.ar, auto generated by SCNvim" }, {t("PeakEQ4.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "1200.0"),t(", "), t("rs:"),i(3, "1.0"),t(", "), t("db:"),i(4, "0.0"), t(")"),}),
s( {trig = "PeakFollower.ar", name = "PeakFollower.ar", dscr = "Snippet for PeakFollower.ar, auto generated by SCNvim" }, {t("PeakFollower.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("decay:"),i(2, "0.999"), t(")"),}),
s( {trig = "PeakFollower.kr", name = "PeakFollower.kr", dscr = "Snippet for PeakFollower.kr, auto generated by SCNvim" }, {t("PeakFollower.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("decay:"),i(2, "0.999"), t(")"),}),
s( {trig = "Pen.push", name = "Pen.push", dscr = "Snippet for Pen.push, auto generated by SCNvim" }, {t("Pen.push"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.pop", name = "Pen.pop", dscr = "Snippet for Pen.pop, auto generated by SCNvim" }, {t("Pen.pop"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.use", name = "Pen.use", dscr = "Snippet for Pen.use, auto generated by SCNvim" }, {t("Pen.use"),t("("),t("aFunction:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.fillColor_", name = "Pen.fillColor_", dscr = "Snippet for Pen.fillColor_, auto generated by SCNvim" }, {t("Pen.fillColor_"),t("("),t("aColor:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.strokeColor_", name = "Pen.strokeColor_", dscr = "Snippet for Pen.strokeColor_, auto generated by SCNvim" }, {t("Pen.strokeColor_"),t("("),t("aColor:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.color_", name = "Pen.color_", dscr = "Snippet for Pen.color_, auto generated by SCNvim" }, {t("Pen.color_"),t("("),t("aColor:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.width_", name = "Pen.width_", dscr = "Snippet for Pen.width_, auto generated by SCNvim" }, {t("Pen.width_"),t("("),t("width:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.joinStyle_", name = "Pen.joinStyle_", dscr = "Snippet for Pen.joinStyle_, auto generated by SCNvim" }, {t("Pen.joinStyle_"),t("("),t("style:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.capStyle_", name = "Pen.capStyle_", dscr = "Snippet for Pen.capStyle_, auto generated by SCNvim" }, {t("Pen.capStyle_"),t("("),t("style:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.lineDash_", name = "Pen.lineDash_", dscr = "Snippet for Pen.lineDash_, auto generated by SCNvim" }, {t("Pen.lineDash_"),t("("),t("pattern:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.alpha_", name = "Pen.alpha_", dscr = "Snippet for Pen.alpha_, auto generated by SCNvim" }, {t("Pen.alpha_"),t("("),t("value:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.blendMode_", name = "Pen.blendMode_", dscr = "Snippet for Pen.blendMode_, auto generated by SCNvim" }, {t("Pen.blendMode_"),t("("),t("mode:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.beginTransparencyLayer", name = "Pen.beginTransparencyLayer", dscr = "Snippet for Pen.beginTransparencyLayer, auto generated by SCNvim" }, {t("Pen.beginTransparencyLayer"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.endTransparencyLayer", name = "Pen.endTransparencyLayer", dscr = "Snippet for Pen.endTransparencyLayer, auto generated by SCNvim" }, {t("Pen.endTransparencyLayer"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.clip", name = "Pen.clip", dscr = "Snippet for Pen.clip, auto generated by SCNvim" }, {t("Pen.clip"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.smoothing_", name = "Pen.smoothing_", dscr = "Snippet for Pen.smoothing_, auto generated by SCNvim" }, {t("Pen.smoothing_"),t("("),t("flag:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.font_", name = "Pen.font_", dscr = "Snippet for Pen.font_, auto generated by SCNvim" }, {t("Pen.font_"),t("("),t("aFont:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.prSetFont", name = "Pen.prSetFont", dscr = "Snippet for Pen.prSetFont, auto generated by SCNvim" }, {t("Pen.prSetFont"),t("("),t("aFont:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.translate", name = "Pen.translate", dscr = "Snippet for Pen.translate, auto generated by SCNvim" }, {t("Pen.translate"),t("("),t("x:"),i(1, "0"),t(", "), t("y:"),i(2, "0"), t(")"),}),
s( {trig = "Pen.scale", name = "Pen.scale", dscr = "Snippet for Pen.scale, auto generated by SCNvim" }, {t("Pen.scale"),t("("),t("x:"),i(1, "0"),t(", "), t("y:"),i(2, "0"), t(")"),}),
s( {trig = "Pen.skew", name = "Pen.skew", dscr = "Snippet for Pen.skew, auto generated by SCNvim" }, {t("Pen.skew"),t("("),t("x:"),i(1, "0"),t(", "), t("y:"),i(2, "0"), t(")"),}),
s( {trig = "Pen.rotate", name = "Pen.rotate", dscr = "Snippet for Pen.rotate, auto generated by SCNvim" }, {t("Pen.rotate"),t("("),t("angle:"),i(1, "0"),t(", "), t("x:"),i(2, "0"),t(", "), t("y:"),i(3, "0"), t(")"),}),
s( {trig = "Pen.rotateDeg", name = "Pen.rotateDeg", dscr = "Snippet for Pen.rotateDeg, auto generated by SCNvim" }, {t("Pen.rotateDeg"),t("("),t("angle:"),i(1, "0"),t(", "), t("x:"),i(2, "0"),t(", "), t("y:"),i(3, "0"), t(")"),}),
s( {trig = "Pen.matrix", name = "Pen.matrix", dscr = "Snippet for Pen.matrix, auto generated by SCNvim" }, {t("Pen.matrix"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.matrix_", name = "Pen.matrix_", dscr = "Snippet for Pen.matrix_, auto generated by SCNvim" }, {t("Pen.matrix_"),t("("),t("matrixArray:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.beginPath", name = "Pen.beginPath", dscr = "Snippet for Pen.beginPath, auto generated by SCNvim" }, {t("Pen.beginPath"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.path", name = "Pen.path", dscr = "Snippet for Pen.path, auto generated by SCNvim" }, {t("Pen.path"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.moveTo", name = "Pen.moveTo", dscr = "Snippet for Pen.moveTo, auto generated by SCNvim" }, {t("Pen.moveTo"),t("("),t("point:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.lineTo", name = "Pen.lineTo", dscr = "Snippet for Pen.lineTo, auto generated by SCNvim" }, {t("Pen.lineTo"),t("("),t("point:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.line", name = "Pen.line", dscr = "Snippet for Pen.line, auto generated by SCNvim" }, {t("Pen.line"),t("("),t("p1:"),i(1, "nil"),t(", "), t("p2:"),i(2, "nil"), t(")"),}),
s( {trig = "Pen.curveTo", name = "Pen.curveTo", dscr = "Snippet for Pen.curveTo, auto generated by SCNvim" }, {t("Pen.curveTo"),t("("),t("endPoint:"),i(1, "nil"),t(", "), t("cPoint1:"),i(2, "nil"),t(", "), t("cPoint2:"),i(3, "nil"), t(")"),}),
s( {trig = "Pen.quadCurveTo", name = "Pen.quadCurveTo", dscr = "Snippet for Pen.quadCurveTo, auto generated by SCNvim" }, {t("Pen.quadCurveTo"),t("("),t("endPoint:"),i(1, "nil"),t(", "), t("cPoint:"),i(2, "nil"), t(")"),}),
s( {trig = "Pen.arcTo", name = "Pen.arcTo", dscr = "Snippet for Pen.arcTo, auto generated by SCNvim" }, {t("Pen.arcTo"),t("("),t("point1:"),i(1, "nil"),t(", "), t("point2:"),i(2, "nil"),t(", "), t("radius:"),i(3, "nil"), t(")"),}),
s( {trig = "Pen.addRect", name = "Pen.addRect", dscr = "Snippet for Pen.addRect, auto generated by SCNvim" }, {t("Pen.addRect"),t("("),t("aRect:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.addRoundedRect", name = "Pen.addRoundedRect", dscr = "Snippet for Pen.addRoundedRect, auto generated by SCNvim" }, {t("Pen.addRoundedRect"),t("("),t("aRect:"),i(1, "nil"),t(", "), t("radiusX:"),i(2, "nil"),t(", "), t("radiusY:"),i(3, "nil"), t(")"),}),
s( {trig = "Pen.addOval", name = "Pen.addOval", dscr = "Snippet for Pen.addOval, auto generated by SCNvim" }, {t("Pen.addOval"),t("("),t("rect:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.addArc", name = "Pen.addArc", dscr = "Snippet for Pen.addArc, auto generated by SCNvim" }, {t("Pen.addArc"),t("("),t("center:"),i(1, "nil"),t(", "), t("radius:"),i(2, "nil"),t(", "), t("startAngle:"),i(3, "nil"),t(", "), t("arcAngle:"),i(4, "nil"), t(")"),}),
s( {trig = "Pen.prAddArc", name = "Pen.prAddArc", dscr = "Snippet for Pen.prAddArc, auto generated by SCNvim" }, {t("Pen.prAddArc"),t("("),t("center:"),i(1, "nil"),t(", "), t("radius:"),i(2, "nil"),t(", "), t("startAngle:"),i(3, "nil"),t(", "), t("arcAngle:"),i(4, "nil"), t(")"),}),
s( {trig = "Pen.addWedge", name = "Pen.addWedge", dscr = "Snippet for Pen.addWedge, auto generated by SCNvim" }, {t("Pen.addWedge"),t("("),t("center:"),i(1, "nil"),t(", "), t("radius:"),i(2, "nil"),t(", "), t("startAngle:"),i(3, "nil"),t(", "), t("sweepLength:"),i(4, "nil"), t(")"),}),
s( {trig = "Pen.addWedge_Deg", name = "Pen.addWedge_Deg", dscr = "Snippet for Pen.addWedge_Deg, auto generated by SCNvim" }, {t("Pen.addWedge_Deg"),t("("),t("center:"),i(1, "nil"),t(", "), t("radius:"),i(2, "nil"),t(", "), t("startAngle:"),i(3, "nil"),t(", "), t("sweepLength:"),i(4, "nil"), t(")"),}),
s( {trig = "Pen.addAnnularWedge", name = "Pen.addAnnularWedge", dscr = "Snippet for Pen.addAnnularWedge, auto generated by SCNvim" }, {t("Pen.addAnnularWedge"),t("("),t("center:"),i(1, "nil"),t(", "), t("innerRadius:"),i(2, "nil"),t(", "), t("outerRadius:"),i(3, "nil"),t(", "), t("startAngle:"),i(4, "nil"),t(", "), t("sweepLength:"),i(5, "nil"), t(")"),}),
s( {trig = "Pen.prAddAnnularWedge", name = "Pen.prAddAnnularWedge", dscr = "Snippet for Pen.prAddAnnularWedge, auto generated by SCNvim" }, {t("Pen.prAddAnnularWedge"),t("("),t("center:"),i(1, "nil"),t(", "), t("innerRadius:"),i(2, "nil"),t(", "), t("outerRadius:"),i(3, "nil"),t(", "), t("startAngle:"),i(4, "nil"),t(", "), t("sweepLength:"),i(5, "nil"), t(")"),}),
s( {trig = "Pen.fill", name = "Pen.fill", dscr = "Snippet for Pen.fill, auto generated by SCNvim" }, {t("Pen.fill"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.stroke", name = "Pen.stroke", dscr = "Snippet for Pen.stroke, auto generated by SCNvim" }, {t("Pen.stroke"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.draw", name = "Pen.draw", dscr = "Snippet for Pen.draw, auto generated by SCNvim" }, {t("Pen.draw"),t("("),t("style:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.fillStroke", name = "Pen.fillStroke", dscr = "Snippet for Pen.fillStroke, auto generated by SCNvim" }, {t("Pen.fillStroke"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.strokeRect", name = "Pen.strokeRect", dscr = "Snippet for Pen.strokeRect, auto generated by SCNvim" }, {t("Pen.strokeRect"),t("("),t("rect:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.fillRect", name = "Pen.fillRect", dscr = "Snippet for Pen.fillRect, auto generated by SCNvim" }, {t("Pen.fillRect"),t("("),t("rect:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.strokeOval", name = "Pen.strokeOval", dscr = "Snippet for Pen.strokeOval, auto generated by SCNvim" }, {t("Pen.strokeOval"),t("("),t("rect:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.fillOval", name = "Pen.fillOval", dscr = "Snippet for Pen.fillOval, auto generated by SCNvim" }, {t("Pen.fillOval"),t("("),t("rect:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.fillAxialGradient", name = "Pen.fillAxialGradient", dscr = "Snippet for Pen.fillAxialGradient, auto generated by SCNvim" }, {t("Pen.fillAxialGradient"),t("("),t("startPoint:"),i(1, "nil"),t(", "), t("endPoint:"),i(2, "nil"),t(", "), t("startColor:"),i(3, "nil"),t(", "), t("endColor:"),i(4, "nil"), t(")"),}),
s( {trig = "Pen.fillRadialGradient", name = "Pen.fillRadialGradient", dscr = "Snippet for Pen.fillRadialGradient, auto generated by SCNvim" }, {t("Pen.fillRadialGradient"),t("("),t("innerCircleCenter:"),i(1, "nil"),t(", "), t("outerCircleCenter:"),i(2, "nil"),t(", "), t("startRadius:"),i(3, "nil"),t(", "), t("endRadius:"),i(4, "nil"),t(", "), t("startColor:"),i(5, "nil"),t(", "), t("endColor:"),i(6, "nil"), t(")"),}),
s( {trig = "Pen.setShadow", name = "Pen.setShadow", dscr = "Snippet for Pen.setShadow, auto generated by SCNvim" }, {t("Pen.setShadow"),t("("),t("offsetPoint:"),i(1, "nil"),t(", "), t("blur:"),i(2, "nil"),t(", "), t("color:"),i(3, "nil"), t(")"),}),
s( {trig = "Pen.string", name = "Pen.string", dscr = "Snippet for Pen.string, auto generated by SCNvim" }, {t("Pen.string"),t("("),t("aString:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.stringAtPoint", name = "Pen.stringAtPoint", dscr = "Snippet for Pen.stringAtPoint, auto generated by SCNvim" }, {t("Pen.stringAtPoint"),t("("),t("string:"),i(1, "nil"),t(", "), t("point:"),i(2, "nil"),t(", "), t("font:"),i(3, "nil"),t(", "), t("color:"),i(4, "nil"), t(")"),}),
s( {trig = "Pen.stringInRect", name = "Pen.stringInRect", dscr = "Snippet for Pen.stringInRect, auto generated by SCNvim" }, {t("Pen.stringInRect"),t("("),t("string:"),i(1, "nil"),t(", "), t("rect:"),i(2, "nil"),t(", "), t("font:"),i(3, "nil"),t(", "), t("color:"),i(4, "nil"),t(", "), t("alignment:"),i(5, "nil"), t(")"),}),
s( {trig = "Pen.stringCenteredIn", name = "Pen.stringCenteredIn", dscr = "Snippet for Pen.stringCenteredIn, auto generated by SCNvim" }, {t("Pen.stringCenteredIn"),t("("),t("string:"),i(1, "nil"),t(", "), t("rect:"),i(2, "nil"),t(", "), t("font:"),i(3, "nil"),t(", "), t("color:"),i(4, "nil"), t(")"),}),
s( {trig = "Pen.stringLeftJustIn", name = "Pen.stringLeftJustIn", dscr = "Snippet for Pen.stringLeftJustIn, auto generated by SCNvim" }, {t("Pen.stringLeftJustIn"),t("("),t("string:"),i(1, "nil"),t(", "), t("rect:"),i(2, "nil"),t(", "), t("font:"),i(3, "nil"),t(", "), t("color:"),i(4, "nil"), t(")"),}),
s( {trig = "Pen.stringRightJustIn", name = "Pen.stringRightJustIn", dscr = "Snippet for Pen.stringRightJustIn, auto generated by SCNvim" }, {t("Pen.stringRightJustIn"),t("("),t("string:"),i(1, "nil"),t(", "), t("rect:"),i(2, "nil"),t(", "), t("font:"),i(3, "nil"),t(", "), t("color:"),i(4, "nil"), t(")"),}),
s( {trig = "Pen.drawImage", name = "Pen.drawImage", dscr = "Snippet for Pen.drawImage, auto generated by SCNvim" }, {t("Pen.drawImage"),t("("),t("target:"),i(1, "nil"),t(", "), t("image:"),i(2, "nil"),t(", "), t("source:"),i(3, "nil"),t(", "), t("operation:"),i(4, "sourceOver"),t(", "), t("opacity:"),i(5, "1.0"), t(")"),}),
s( {trig = "Pen.tileImage", name = "Pen.tileImage", dscr = "Snippet for Pen.tileImage, auto generated by SCNvim" }, {t("Pen.tileImage"),t("("),t("target:"),i(1, "nil"),t(", "), t("image:"),i(2, "nil"),t(", "), t("source:"),i(3, "nil"),t(", "), t("operation:"),i(4, "sourceOver"),t(", "), t("opacity:"),i(5, "1.0"), t(")"),}),
s( {trig = "Pen.prBegin", name = "Pen.prBegin", dscr = "Snippet for Pen.prBegin, auto generated by SCNvim" }, {t("Pen.prBegin"),t("("),t("aView:"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.prEnd", name = "Pen.prEnd", dscr = "Snippet for Pen.prEnd, auto generated by SCNvim" }, {t("Pen.prEnd"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pen.prDrawImage", name = "Pen.prDrawImage", dscr = "Snippet for Pen.prDrawImage, auto generated by SCNvim" }, {t("Pen.prDrawImage"),t("("),t("target:"),i(1, "nil"),t(", "), t("image:"),i(2, "nil"),t(", "), t("source:"),i(3, "nil"),t(", "), t("operation:"),i(4, "nil"),t(", "), t("opacity:"),i(5, "nil"), t(")"),}),
s( {trig = "Pen.prTileImage", name = "Pen.prTileImage", dscr = "Snippet for Pen.prTileImage, auto generated by SCNvim" }, {t("Pen.prTileImage"),t("("),t("target:"),i(1, "nil"),t(", "), t("image:"),i(2, "nil"),t(", "), t("source:"),i(3, "nil"),t(", "), t("operation:"),i(4, "nil"),t(", "), t("opacity:"),i(5, "nil"), t(")"),}),
s( {trig = "Pen.nonimpl", name = "Pen.nonimpl", dscr = "Snippet for Pen.nonimpl, auto generated by SCNvim" }, {t("Pen.nonimpl"),t("("),t("methodName:"),i(1, "nil"), t(")"),}),
s( {trig = "Penvir.new", name = "Penvir.new", dscr = "Snippet for Penvir.new, auto generated by SCNvim" }, {t("Penvir.new"),t("("),t("envir:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"),t(", "), t("independent:"),i(3, "true"), t(")"),}),
s( {trig = "Perlin3.ar", name = "Perlin3.ar", dscr = "Snippet for Perlin3.ar, auto generated by SCNvim" }, {t("Perlin3.ar"),t("("),t("x:"),i(1, "0"),t(", "), t("y:"),i(2, "0"),t(", "), t("z:"),i(3, "0"), t(")"),}),
s( {trig = "Perlin3.kr", name = "Perlin3.kr", dscr = "Snippet for Perlin3.kr, auto generated by SCNvim" }, {t("Perlin3.kr"),t("("),t("x:"),i(1, "0"),t(", "), t("y:"),i(2, "0"),t(", "), t("z:"),i(3, "0"), t(")"),}),
s( {trig = "PermMod.ar", name = "PermMod.ar", dscr = "Snippet for PermMod.ar, auto generated by SCNvim" }, {t("PermMod.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "100"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "PermModArray.ar", name = "PermModArray.ar", dscr = "Snippet for PermModArray.ar, auto generated by SCNvim" }, {t("PermModArray.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "50"),t(", "), t("pattern:"),i(3, "nil"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "PermModT.ar", name = "PermModT.ar", dscr = "Snippet for PermModT.ar, auto generated by SCNvim" }, {t("PermModT.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("outfreq:"),i(2, "440"),t(", "), t("infreq:"),i(3, "5000"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Pevent.new", name = "Pevent.new", dscr = "Snippet for Pevent.new, auto generated by SCNvim" }, {t("Pevent.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("event:"),i(2, "nil"), t(")"),}),
s( {trig = "Peventmod.new", name = "Peventmod.new", dscr = "Snippet for Peventmod.new, auto generated by SCNvim" }, {t("Peventmod.new"),t("("),t("func:"),i(1, "nil"),t(", "), t("event:"),i(2, "nil"),t(", "), t("repeats:"),i(3, "inf"), t(")"),}),
s( {trig = "Pexprand.new", name = "Pexprand.new", dscr = "Snippet for Pexprand.new, auto generated by SCNvim" }, {t("Pexprand.new"),t("("),t("lo:"),i(1, "0.0001"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("length:"),i(3, "inf"), t(")"),}),
s( {trig = "PfadeIn.new", name = "PfadeIn.new", dscr = "Snippet for PfadeIn.new, auto generated by SCNvim" }, {t("PfadeIn.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("fadeTime:"),i(2, "1.0"),t(", "), t("holdTime:"),i(3, "0.0"),t(", "), t("tolerance:"),i(4, "0.0001"), t(")"),}),
s( {trig = "Pfhn.new", name = "Pfhn.new", dscr = "Snippet for Pfhn.new, auto generated by SCNvim" }, {t("Pfhn.new"),t("("),t("a:"),i(1, "0.7"),t(", "), t("b:"),i(2, "0.8"),t(", "), t("c:"),i(3, "1.0"),t(", "), t("d:"),i(4, "1.0"),t(", "), t("i:"),i(5, "nil"),t(", "), t("u:"),i(6, "-0.1"),t(", "), t("v:"),i(7, "0.1"),t(", "), t("n:"),i(8, "true"), t(")"),}),
s( {trig = "Pfin.new", name = "Pfin.new", dscr = "Snippet for Pfin.new, auto generated by SCNvim" }, {t("Pfin.new"),t("("),t("count:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"), t(")"),}),
s( {trig = "PfinQuant.new", name = "PfinQuant.new", dscr = "Snippet for PfinQuant.new, auto generated by SCNvim" }, {t("PfinQuant.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("quant:"),i(2, "nil"),t(", "), t("clock:"),i(3, "nil"), t(")"),}),
s( {trig = "Pfindur.new", name = "Pfindur.new", dscr = "Snippet for Pfindur.new, auto generated by SCNvim" }, {t("Pfindur.new"),t("("),t("dur:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"),t(", "), t("tolerance:"),i(3, "0.001"), t(")"),}),
s( {trig = "Pfset.new", name = "Pfset.new", dscr = "Snippet for Pfset.new, auto generated by SCNvim" }, {t("Pfset.new"),t("("),t("func:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"),t(", "), t("cleanupFunc:"),i(3, "nil"), t(")"),}),
s( {trig = "Pfsm2.new", name = "Pfsm2.new", dscr = "Snippet for Pfsm2.new, auto generated by SCNvim" }, {t("Pfsm2.new"),t("("),t("markovset:"),i(1, "nil"),t(", "), t("repeats:"),i(2, "1"), t(")"),}),
s( {trig = "Pfunc.new", name = "Pfunc.new", dscr = "Snippet for Pfunc.new, auto generated by SCNvim" }, {t("Pfunc.new"),t("("),t("nextFunc:"),i(1, "nil"),t(", "), t("resetFunc:"),i(2, "nil"), t(")"),}),
s( {trig = "Pfuncn.new", name = "Pfuncn.new", dscr = "Snippet for Pfuncn.new, auto generated by SCNvim" }, {t("Pfuncn.new"),t("("),t("func:"),i(1, "nil"),t(", "), t("repeats:"),i(2, "1"), t(")"),}),
s( {trig = "Pfx.new", name = "Pfx.new", dscr = "Snippet for Pfx.new, auto generated by SCNvim" }, {t("Pfx.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("fxname:"),i(2, "nil"),t(", "), t("pairs:"),i(3, "[]"), t(")"),}),
s( {trig = "Pfxb.new", name = "Pfxb.new", dscr = "Snippet for Pfxb.new, auto generated by SCNvim" }, {t("Pfxb.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("fxname:"),i(2, "nil"),t(", "), t("pairs:"),i(3, "[]"), t(")"),}),
s( {trig = "Pgate.new", name = "Pgate.new", dscr = "Snippet for Pgate.new, auto generated by SCNvim" }, {t("Pgate.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("repeats:"),i(2, "inf"),t(", "), t("key:"),i(3, "nil"), t(")"),}),
s( {trig = "Pgauss.new", name = "Pgauss.new", dscr = "Snippet for Pgauss.new, auto generated by SCNvim" }, {t("Pgauss.new"),t("("),t("mean:"),i(1, "0.0"),t(", "), t("dev:"),i(2, "1"),t(", "), t("length:"),i(3, "inf"), t(")"),}),
s( {trig = "Pgbman.new", name = "Pgbman.new", dscr = "Snippet for Pgbman.new, auto generated by SCNvim" }, {t("Pgbman.new"),t("("),t("x:"),i(1, "1.2"),t(", "), t("y:"),i(2, "2.1"),t(", "), t("n:"),i(3, "true"), t(")"),}),
s( {trig = "Pgeom.new", name = "Pgeom.new", dscr = "Snippet for Pgeom.new, auto generated by SCNvim" }, {t("Pgeom.new"),t("("),t("start:"),i(1, "0"),t(", "), t("grow:"),i(2, "1"),t(", "), t("length:"),i(3, "inf"), t(")"),}),
s( {trig = "Pget.new", name = "Pget.new", dscr = "Snippet for Pget.new, auto generated by SCNvim" }, {t("Pget.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("default:"),i(2, "nil"),t(", "), t("repeats:"),i(3, "1"), t(")"),}),
s( {trig = "Pgpar.implClass", name = "Pgpar.implClass", dscr = "Snippet for Pgpar.implClass, auto generated by SCNvim" }, {t("Pgpar.implClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pgroup.eventType", name = "Pgroup.eventType", dscr = "Snippet for Pgroup.eventType, auto generated by SCNvim" }, {t("Pgroup.eventType"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pgtpar.implClass", name = "Pgtpar.implClass", dscr = "Snippet for Pgtpar.implClass, auto generated by SCNvim" }, {t("Pgtpar.implClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Phaser.help", name = "Phaser.help", dscr = "Snippet for Phaser.help, auto generated by SCNvim" }, {t("Phaser.help"),t("("),t("method:"),i(1, "nil"),t(", "), t("argument:"),i(2, "nil"), t(")"),}),
s( {trig = "Phaser.kr", name = "Phaser.kr", dscr = "Snippet for Phaser.kr, auto generated by SCNvim" }, {t("Phaser.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("phase:"),i(2, "0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Phaser.ar", name = "Phaser.ar", dscr = "Snippet for Phaser.ar, auto generated by SCNvim" }, {t("Phaser.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("phase:"),i(2, "0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Phasor.ar", name = "Phasor.ar", dscr = "Snippet for Phasor.ar, auto generated by SCNvim" }, {t("Phasor.ar"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("rate:"),i(2, "1.0"),t(", "), t("start:"),i(3, "0.0"),t(", "), t("end:"),i(4, "1.0"),t(", "), t("resetPos:"),i(5, "0.0"), t(")"),}),
s( {trig = "Phasor.kr", name = "Phasor.kr", dscr = "Snippet for Phasor.kr, auto generated by SCNvim" }, {t("Phasor.kr"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("rate:"),i(2, "1.0"),t(", "), t("start:"),i(3, "0.0"),t(", "), t("end:"),i(4, "1.0"),t(", "), t("resetPos:"),i(5, "0.0"), t(")"),}),
s( {trig = "Phenon.new", name = "Phenon.new", dscr = "Snippet for Phenon.new, auto generated by SCNvim" }, {t("Phenon.new"),t("("),t("a:"),i(1, "1.3"),t(", "), t("b:"),i(2, "0.3"),t(", "), t("x:"),i(3, "0.30501993062401"),t(", "), t("y:"),i(4, "0.20938865431933"),t(", "), t("n:"),i(5, "true"), t(")"),}),
s( {trig = "Phrase.new", name = "Phrase.new", dscr = "Snippet for Phrase.new, auto generated by SCNvim" }, {t("Phrase.new"),t("("),t("phrase:"),i(1, "nil"),t(", "), t("returnProbs:"),i(2, "nil"),t(", "), t("loopReturns:"),i(3, "true"), t(")"),}),
s( {trig = "Pif.new", name = "Pif.new", dscr = "Snippet for Pif.new, auto generated by SCNvim" }, {t("Pif.new"),t("("),t("condition:"),i(1, "nil"),t(", "), t("iftrue:"),i(2, "nil"),t(", "), t("iffalse:"),i(3, "nil"),t(", "), t("default:"),i(4, "nil"), t(")"),}),
s( {trig = "Pindex.new", name = "Pindex.new", dscr = "Snippet for Pindex.new, auto generated by SCNvim" }, {t("Pindex.new"),t("("),t("listPat:"),i(1, "nil"),t(", "), t("indexPat:"),i(2, "nil"),t(", "), t("repeats:"),i(3, "1"), t(")"),}),
s( {trig = "PingPong.ar", name = "PingPong.ar", dscr = "Snippet for PingPong.ar, auto generated by SCNvim" }, {t("PingPong.ar"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("inputs:"),i(2, "nil"),t(", "), t("delayTime:"),i(3, "nil"),t(", "), t("feedback:"),i(4, "0.7"),t(", "), t("rotate:"),i(5, "1"), t(")"),}),
s( {trig = "Pipe.new", name = "Pipe.new", dscr = "Snippet for Pipe.new, auto generated by SCNvim" }, {t("Pipe.new"),t("("),t("commandLine:"),i(1, "nil"),t(", "), t("mode:"),i(2, "nil"), t(")"),}),
s( {trig = "Pipe.argv", name = "Pipe.argv", dscr = "Snippet for Pipe.argv, auto generated by SCNvim" }, {t("Pipe.argv"),t("("),t("args:"),i(1, "nil"),t(", "), t("mode:"),i(2, "nil"), t(")"),}),
s( {trig = "Pipe.call", name = "Pipe.call", dscr = "Snippet for Pipe.call, auto generated by SCNvim" }, {t("Pipe.call"),t("("),t("command:"),i(1, "nil"),t(", "), t("onSuccess:"),i(2, "nil"),t(", "), t("onError:"),i(3, "nil"),t(", "), t("maxLineLength:"),i(4, "4096"), t(")"),}),
s( {trig = "Pipe.callSync", name = "Pipe.callSync", dscr = "Snippet for Pipe.callSync, auto generated by SCNvim" }, {t("Pipe.callSync"),t("("),t("command:"),i(1, "nil"),t(", "), t("onSuccess:"),i(2, "nil"),t(", "), t("onError:"),i(3, "nil"),t(", "), t("maxLineLength:"),i(4, "4096"), t(")"),}),
s( {trig = "Pitch.kr", name = "Pitch.kr", dscr = "Snippet for Pitch.kr, auto generated by SCNvim" }, {t("Pitch.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("initFreq:"),i(2, "440.0"),t(", "), t("minFreq:"),i(3, "60.0"),t(", "), t("maxFreq:"),i(4, "4000.0"),t(", "), t("execFreq:"),i(5, "100.0"),t(", "), t("maxBinsPerOctave:"),i(6, "16"),t(", "), t("median:"),i(7, "1"),t(", "), t("ampThreshold:"),i(8, "0.01"),t(", "), t("peakThreshold:"),i(9, "0.5"),t(", "), t("downSample:"),i(10, "1"),t(", "), t("clar:"),i(11, "0"), t(")"),}),
s( {trig = "PitchShift.ar", name = "PitchShift.ar", dscr = "Snippet for PitchShift.ar, auto generated by SCNvim" }, {t("PitchShift.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("windowSize:"),i(2, "0.2"),t(", "), t("pitchRatio:"),i(3, "1.0"),t(", "), t("pitchDispersion:"),i(4, "0.0"),t(", "), t("timeDispersion:"),i(5, "0.0"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "Pkey.new", name = "Pkey.new", dscr = "Snippet for Pkey.new, auto generated by SCNvim" }, {t("Pkey.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("repeats:"),i(2, "nil"), t(")"),}),
s( {trig = "Plag.new", name = "Plag.new", dscr = "Snippet for Plag.new, auto generated by SCNvim" }, {t("Plag.new"),t("("),t("lag:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"), t(")"),}),
s( {trig = "Plambda.new", name = "Plambda.new", dscr = "Snippet for Plambda.new, auto generated by SCNvim" }, {t("Plambda.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("scope:"),i(2, "nil"), t(")"),}),
s( {trig = "PlaneTree.kr", name = "PlaneTree.kr", dscr = "Snippet for PlaneTree.kr, auto generated by SCNvim" }, {t("PlaneTree.kr"),t("("),t("treebuf:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("gate:"),i(3, "1"), t(")"),}),
s( {trig = "PlaneTree.categories", name = "PlaneTree.categories", dscr = "Snippet for PlaneTree.categories, auto generated by SCNvim" }, {t("PlaneTree.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PlaneTree.classify", name = "PlaneTree.classify", dscr = "Snippet for PlaneTree.classify, auto generated by SCNvim" }, {t("PlaneTree.classify"),t("("),t("point:"),i(1, "nil"),t(", "), t("treedata:"),i(2, "nil"),t(", "), t("pathInt:"),i(3, "1"), t(")"),}),
s( {trig = "PlaneTree.treedist", name = "PlaneTree.treedist", dscr = "Snippet for PlaneTree.treedist, auto generated by SCNvim" }, {t("PlaneTree.treedist"),t("("),t("path1:"),i(1, "nil"),t(", "), t("path2:"),i(2, "nil"), t(")"),}),
s( {trig = "Platform.initClass", name = "Platform.initClass", dscr = "Snippet for Platform.initClass, auto generated by SCNvim" }, {t("Platform.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.case", name = "Platform.case", dscr = "Snippet for Platform.case, auto generated by SCNvim" }, {t("Platform.case"),t("("),t("cases:"),i(1, "[]"), t(")"),}),
s( {trig = "Platform.classLibraryDir", name = "Platform.classLibraryDir", dscr = "Snippet for Platform.classLibraryDir, auto generated by SCNvim" }, {t("Platform.classLibraryDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.helpDir", name = "Platform.helpDir", dscr = "Snippet for Platform.helpDir, auto generated by SCNvim" }, {t("Platform.helpDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.userHomeDir", name = "Platform.userHomeDir", dscr = "Snippet for Platform.userHomeDir, auto generated by SCNvim" }, {t("Platform.userHomeDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.systemAppSupportDir", name = "Platform.systemAppSupportDir", dscr = "Snippet for Platform.systemAppSupportDir, auto generated by SCNvim" }, {t("Platform.systemAppSupportDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.userAppSupportDir", name = "Platform.userAppSupportDir", dscr = "Snippet for Platform.userAppSupportDir, auto generated by SCNvim" }, {t("Platform.userAppSupportDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.systemExtensionDir", name = "Platform.systemExtensionDir", dscr = "Snippet for Platform.systemExtensionDir, auto generated by SCNvim" }, {t("Platform.systemExtensionDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.userExtensionDir", name = "Platform.userExtensionDir", dscr = "Snippet for Platform.userExtensionDir, auto generated by SCNvim" }, {t("Platform.userExtensionDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.userConfigDir", name = "Platform.userConfigDir", dscr = "Snippet for Platform.userConfigDir, auto generated by SCNvim" }, {t("Platform.userConfigDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.resourceDir", name = "Platform.resourceDir", dscr = "Snippet for Platform.resourceDir, auto generated by SCNvim" }, {t("Platform.resourceDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.recordingsDir", name = "Platform.recordingsDir", dscr = "Snippet for Platform.recordingsDir, auto generated by SCNvim" }, {t("Platform.recordingsDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.defaultTempDir", name = "Platform.defaultTempDir", dscr = "Snippet for Platform.defaultTempDir, auto generated by SCNvim" }, {t("Platform.defaultTempDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.ideName", name = "Platform.ideName", dscr = "Snippet for Platform.ideName, auto generated by SCNvim" }, {t("Platform.ideName"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.platformDir", name = "Platform.platformDir", dscr = "Snippet for Platform.platformDir, auto generated by SCNvim" }, {t("Platform.platformDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.pathSeparator", name = "Platform.pathSeparator", dscr = "Snippet for Platform.pathSeparator, auto generated by SCNvim" }, {t("Platform.pathSeparator"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.pathDelimiter", name = "Platform.pathDelimiter", dscr = "Snippet for Platform.pathDelimiter, auto generated by SCNvim" }, {t("Platform.pathDelimiter"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.isPathSeparator", name = "Platform.isPathSeparator", dscr = "Snippet for Platform.isPathSeparator, auto generated by SCNvim" }, {t("Platform.isPathSeparator"),t("("),t("char:"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.clearMetadata", name = "Platform.clearMetadata", dscr = "Snippet for Platform.clearMetadata, auto generated by SCNvim" }, {t("Platform.clearMetadata"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.deprecatedStartupFiles", name = "Platform.deprecatedStartupFiles", dscr = "Snippet for Platform.deprecatedStartupFiles, auto generated by SCNvim" }, {t("Platform.deprecatedStartupFiles"),t("("),t("paths:"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.when", name = "Platform.when", dscr = "Snippet for Platform.when, auto generated by SCNvim" }, {t("Platform.when"),t("("),t("features:"),i(1, "nil"),t(", "), t("ifFunction:"),i(2, "nil"),t(", "), t("elseFunction:"),i(3, "nil"), t(")"),}),
s( {trig = "Platform.hasQt", name = "Platform.hasQt", dscr = "Snippet for Platform.hasQt, auto generated by SCNvim" }, {t("Platform.hasQt"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.hasQtWebEngine", name = "Platform.hasQtWebEngine", dscr = "Snippet for Platform.hasQtWebEngine, auto generated by SCNvim" }, {t("Platform.hasQtWebEngine"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.architecture", name = "Platform.architecture", dscr = "Snippet for Platform.architecture, auto generated by SCNvim" }, {t("Platform.architecture"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platform.hasBelaSupport", name = "Platform.hasBelaSupport", dscr = "Snippet for Platform.hasBelaSupport, auto generated by SCNvim" }, {t("Platform.hasBelaSupport"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Platoo.new", name = "Platoo.new", dscr = "Snippet for Platoo.new, auto generated by SCNvim" }, {t("Platoo.new"),t("("),t("a:"),i(1, "3.0"),t(", "), t("b:"),i(2, "-2.0"),t(", "), t("c:"),i(3, "0.7"),t(", "), t("d:"),i(4, "0.9"),t(", "), t("x:"),i(5, "0.34082301375036"),t(", "), t("y:"),i(6, "-0.38270086971332"),t(", "), t("n:"),i(7, "true"), t(")"),}),
s( {trig = "PlayBuf.ar", name = "PlayBuf.ar", dscr = "Snippet for PlayBuf.ar, auto generated by SCNvim" }, {t("PlayBuf.ar"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("rate:"),i(3, "1.0"),t(", "), t("trigger:"),i(4, "1.0"),t(", "), t("startPos:"),i(5, "0.0"),t(", "), t("loop:"),i(6, "0.0"),t(", "), t("doneAction:"),i(7, "0"), t(")"),}),
s( {trig = "PlayBuf.kr", name = "PlayBuf.kr", dscr = "Snippet for PlayBuf.kr, auto generated by SCNvim" }, {t("PlayBuf.kr"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("rate:"),i(3, "1.0"),t(", "), t("trigger:"),i(4, "1.0"),t(", "), t("startPos:"),i(5, "0.0"),t(", "), t("loop:"),i(6, "0.0"),t(", "), t("doneAction:"),i(7, "0"), t(")"),}),
s( {trig = "Plazy.new", name = "Plazy.new", dscr = "Snippet for Plazy.new, auto generated by SCNvim" }, {t("Plazy.new"),t("("),t("func:"),i(1, "nil"), t(")"),}),
s( {trig = "PlazyEnvirN.new", name = "PlazyEnvirN.new", dscr = "Snippet for PlazyEnvirN.new, auto generated by SCNvim" }, {t("PlazyEnvirN.new"),t("("),t("func:"),i(1, "nil"), t(")"),}),
s( {trig = "Plet.new", name = "Plet.new", dscr = "Snippet for Plet.new, auto generated by SCNvim" }, {t("Plet.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"),t(", "), t("return:"),i(3, "nil"), t(")"),}),
s( {trig = "PlinCong.new", name = "PlinCong.new", dscr = "Snippet for PlinCong.new, auto generated by SCNvim" }, {t("PlinCong.new"),t("("),t("a:"),i(1, "1.1"),t(", "), t("c:"),i(2, "0.1"),t(", "), t("m:"),i(3, "0.5"),t(", "), t("x:"),i(4, "0.0"),t(", "), t("n:"),i(5, "true"), t(")"),}),
s( {trig = "Plorenz.new", name = "Plorenz.new", dscr = "Snippet for Plorenz.new, auto generated by SCNvim" }, {t("Plorenz.new"),t("("),t("s:"),i(1, "10"),t(", "), t("r:"),i(2, "28"),t(", "), t("b:"),i(3, "2.66666666667"),t(", "), t("h:"),i(4, "0.01"),t(", "), t("x:"),i(5, "0.090879182417163"),t(", "), t("y:"),i(6, "2.97077458055"),t(", "), t("z:"),i(7, "24.282041054363"), t(")"),}),
s( {trig = "Plot.initClass", name = "Plot.initClass", dscr = "Snippet for Plot.initClass, auto generated by SCNvim" }, {t("Plot.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Plot.doOnStartUp", name = "Plot.doOnStartUp", dscr = "Snippet for Plot.doOnStartUp, auto generated by SCNvim" }, {t("Plot.doOnStartUp"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Plot.new", name = "Plot.new", dscr = "Snippet for Plot.new, auto generated by SCNvim" }, {t("Plot.new"),t("("),t("plotter:"),i(1, "nil"), t(")"),}),
s( {trig = "Plotter.new", name = "Plotter.new", dscr = "Snippet for Plotter.new, auto generated by SCNvim" }, {t("Plotter.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("parent:"),i(3, "nil"), t(")"),}),
s( {trig = "Plsys.new", name = "Plsys.new", dscr = "Snippet for Plsys.new, auto generated by SCNvim" }, {t("Plsys.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("rules:"),i(2, "nil"),t(", "), t("level:"),i(3, "1"),t(", "), t("contextSize:"),i(4, "nil"), t(")"),}),
s( {trig = "Pluck.ar", name = "Pluck.ar", dscr = "Snippet for Pluck.ar, auto generated by SCNvim" }, {t("Pluck.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trig:"),i(2, "1.0"),t(", "), t("maxdelaytime:"),i(3, "0.2"),t(", "), t("delaytime:"),i(4, "0.2"),t(", "), t("decaytime:"),i(5, "1.0"),t(", "), t("coef:"),i(6, "0.5"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "Plugins.initClass", name = "Plugins.initClass", dscr = "Snippet for Plugins.initClass, auto generated by SCNvim" }, {t("Plugins.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Plugins.createSupportDirIfNecessary", name = "Plugins.createSupportDirIfNecessary", dscr = "Snippet for Plugins.createSupportDirIfNecessary, auto generated by SCNvim" }, {t("Plugins.createSupportDirIfNecessary"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Plugins.loadPackageDescriptions", name = "Plugins.loadPackageDescriptions", dscr = "Snippet for Plugins.loadPackageDescriptions, auto generated by SCNvim" }, {t("Plugins.loadPackageDescriptions"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Plugins.gui", name = "Plugins.gui", dscr = "Snippet for Plugins.gui, auto generated by SCNvim" }, {t("Plugins.gui"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Plugins.installPlugin", name = "Plugins.installPlugin", dscr = "Snippet for Plugins.installPlugin, auto generated by SCNvim" }, {t("Plugins.installPlugin"),t("("),t("key:"),i(1, "nil"), t(")"),}),
s( {trig = "Plugins.cloneGitDir", name = "Plugins.cloneGitDir", dscr = "Snippet for Plugins.cloneGitDir, auto generated by SCNvim" }, {t("Plugins.cloneGitDir"),t("("),t("url:"),i(1, "nil"),t(", "), t("targetDir:"),i(2, "nil"), t(")"),}),
s( {trig = "Pmono.new", name = "Pmono.new", dscr = "Snippet for Pmono.new, auto generated by SCNvim" }, {t("Pmono.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("pairs:"),i(2, "[]"), t(")"),}),
s( {trig = "PmonoStream.new", name = "PmonoStream.new", dscr = "Snippet for PmonoStream.new, auto generated by SCNvim" }, {t("PmonoStream.new"),t("("),t("pattern:"),i(1, "nil"), t(")"),}),
s( {trig = "Pmswitch.new", name = "Pmswitch.new", dscr = "Snippet for Pmswitch.new, auto generated by SCNvim" }, {t("Pmswitch.new"),t("("),t("markovset:"),i(1, "nil"),t(", "), t("which:"),i(2, "nil"),t(", "), t("repeats:"),i(3, "1"), t(")"),}),
s( {trig = "Pn.new", name = "Pn.new", dscr = "Snippet for Pn.new, auto generated by SCNvim" }, {t("Pn.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("repeats:"),i(2, "inf"),t(", "), t("key:"),i(3, "nil"), t(")"),}),
s( {trig = "Pnaryop.new", name = "Pnaryop.new", dscr = "Snippet for Pnaryop.new, auto generated by SCNvim" }, {t("Pnaryop.new"),t("("),t("operator:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"),t(", "), t("arglist:"),i(3, "nil"), t(")"),}),
s( {trig = "Point.new", name = "Point.new", dscr = "Snippet for Point.new, auto generated by SCNvim" }, {t("Point.new"),t("("),t("x:"),i(1, "0"),t(", "), t("y:"),i(2, "0"), t(")"),}),
s( {trig = "Point.big", name = "Point.big", dscr = "Snippet for Point.big, auto generated by SCNvim" }, {t("Point.big"),t("("),t("x:"),i(1, "nil"),t(", "), t("y:"),i(2, "nil"), t(")"),}),
s( {trig = "PointArray.new", name = "PointArray.new", dscr = "Snippet for PointArray.new, auto generated by SCNvim" }, {t("PointArray.new"),t("("),t("n:"),i(1, "nil"), t(")"),}),
s( {trig = "PointSource.new", name = "PointSource.new", dscr = "Snippet for PointSource.new, auto generated by SCNvim" }, {t("PointSource.new"),t("("),t("argsig:"),i(1, "nil"),t(", "), t("argthepolar:"),i(2, "nil"), t(")"),}),
s( {trig = "PointSource.newt", name = "PointSource.newt", dscr = "Snippet for PointSource.newt, auto generated by SCNvim" }, {t("PointSource.newt"),t("("),t("argsig:"),i(1, "nil"),t(", "), t("rho:"),i(2, "0.0"),t(", "), t("theta:"),i(3, "0.0"),t(", "), t("phi:"),i(4, "nil"), t(")"),}),
s( {trig = "Polar.new", name = "Polar.new", dscr = "Snippet for Polar.new, auto generated by SCNvim" }, {t("Polar.new"),t("("),t("rho:"),i(1, "nil"),t(", "), t("theta:"),i(2, "nil"), t(")"),}),
s( {trig = "Poll.ar", name = "Poll.ar", dscr = "Snippet for Poll.ar, auto generated by SCNvim" }, {t("Poll.ar"),t("("),t("trig:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("trigid:"),i(4, "-1"), t(")"),}),
s( {trig = "Poll.kr", name = "Poll.kr", dscr = "Snippet for Poll.kr, auto generated by SCNvim" }, {t("Poll.kr"),t("("),t("trig:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("trigid:"),i(4, "-1"), t(")"),}),
s( {trig = "Poll.new", name = "Poll.new", dscr = "Snippet for Poll.new, auto generated by SCNvim" }, {t("Poll.new"),t("("),t("trig:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("trigid:"),i(4, "-1"), t(")"),}),
s( {trig = "Poll.new1", name = "Poll.new1", dscr = "Snippet for Poll.new1, auto generated by SCNvim" }, {t("Poll.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("trig:"),i(2, "nil"),t(", "), t("in:"),i(3, "nil"),t(", "), t("label:"),i(4, "nil"),t(", "), t("trigid:"),i(5, "nil"), t(")"),}),
s( {trig = "Polynomial.expandBinomialFactors", name = "Polynomial.expandBinomialFactors", dscr = "Snippet for Polynomial.expandBinomialFactors, auto generated by SCNvim" }, {t("Polynomial.expandBinomialFactors"),t("("),t("factors:"),i(1, "nil"), t(")"),}),
s( {trig = "Polynomial.newReverseBessel", name = "Polynomial.newReverseBessel", dscr = "Snippet for Polynomial.newReverseBessel, auto generated by SCNvim" }, {t("Polynomial.newReverseBessel"),t("("),t("degree:"),i(1, "nil"), t(")"),}),
s( {trig = "PopUpMenu.qtClass", name = "PopUpMenu.qtClass", dscr = "Snippet for PopUpMenu.qtClass, auto generated by SCNvim" }, {t("PopUpMenu.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PosRatio.ar", name = "PosRatio.ar", dscr = "Snippet for PosRatio.ar, auto generated by SCNvim" }, {t("PosRatio.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("period:"),i(2, "100"),t(", "), t("thresh:"),i(3, "0.1"), t(")"),}),
s( {trig = "Post.initClass", name = "Post.initClass", dscr = "Snippet for Post.initClass, auto generated by SCNvim" }, {t("Post.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Post.put", name = "Post.put", dscr = "Snippet for Post.put, auto generated by SCNvim" }, {t("Post.put"),t("("),t("item:"),i(1, "nil"), t(")"),}),
s( {trig = "Post.putAll", name = "Post.putAll", dscr = "Snippet for Post.putAll, auto generated by SCNvim" }, {t("Post.putAll"),t("("),t("aCollection:"),i(1, "nil"), t(")"),}),
s( {trig = "Post.comma", name = "Post.comma", dscr = "Snippet for Post.comma, auto generated by SCNvim" }, {t("Post.comma"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Post.space", name = "Post.space", dscr = "Snippet for Post.space, auto generated by SCNvim" }, {t("Post.space"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Post.nl", name = "Post.nl", dscr = "Snippet for Post.nl, auto generated by SCNvim" }, {t("Post.nl"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Post.ff", name = "Post.ff", dscr = "Snippet for Post.ff, auto generated by SCNvim" }, {t("Post.ff"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Post.tab", name = "Post.tab", dscr = "Snippet for Post.tab, auto generated by SCNvim" }, {t("Post.tab"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Post.close", name = "Post.close", dscr = "Snippet for Post.close, auto generated by SCNvim" }, {t("Post.close"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "PowerOfTwoAllocator.new", name = "PowerOfTwoAllocator.new", dscr = "Snippet for PowerOfTwoAllocator.new, auto generated by SCNvim" }, {t("PowerOfTwoAllocator.new"),t("("),t("size:"),i(1, "nil"),t(", "), t("pos:"),i(2, "0"), t(")"),}),
s( {trig = "PowerOfTwoBlock.new", name = "PowerOfTwoBlock.new", dscr = "Snippet for PowerOfTwoBlock.new, auto generated by SCNvim" }, {t("PowerOfTwoBlock.new"),t("("),t("address:"),i(1, "nil"),t(", "), t("size:"),i(2, "nil"), t(")"),}),
s( {trig = "PparGroup.eventType", name = "PparGroup.eventType", dscr = "Snippet for PparGroup.eventType, auto generated by SCNvim" }, {t("PparGroup.eventType"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Ppatmod.new", name = "Ppatmod.new", dscr = "Snippet for Ppatmod.new, auto generated by SCNvim" }, {t("Ppatmod.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("repeats:"),i(3, "nil"), t(")"),}),
s( {trig = "Pperform.new", name = "Pperform.new", dscr = "Snippet for Pperform.new, auto generated by SCNvim" }, {t("Pperform.new"),t("("),t("selectorPattern:"),i(1, "nil"),t(", "), t("arguments:"),i(2, "[]"), t(")"),}),
s( {trig = "Pplayer.new", name = "Pplayer.new", dscr = "Snippet for Pplayer.new, auto generated by SCNvim" }, {t("Pplayer.new"),t("("),t("playerPattern:"),i(1, "nil"),t(", "), t("subPattern:"),i(2, "nil"), t(")"),}),
s( {trig = "Ppoisson.new", name = "Ppoisson.new", dscr = "Snippet for Ppoisson.new, auto generated by SCNvim" }, {t("Ppoisson.new"),t("("),t("mean:"),i(1, "1"),t(", "), t("length:"),i(2, "inf"), t(")"),}),
s( {trig = "Pprob.new", name = "Pprob.new", dscr = "Snippet for Pprob.new, auto generated by SCNvim" }, {t("Pprob.new"),t("("),t("distribution:"),i(1, "nil"),t(", "), t("lo:"),i(2, "0.0"),t(", "), t("hi:"),i(3, "1.0"),t(", "), t("length:"),i(4, "inf"),t(", "), t("tableSize:"),i(5, "nil"), t(")"),}),
s( {trig = "Pprotect.new", name = "Pprotect.new", dscr = "Snippet for Pprotect.new, auto generated by SCNvim" }, {t("Pprotect.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"), t(")"),}),
s( {trig = "Pproto.new", name = "Pproto.new", dscr = "Snippet for Pproto.new, auto generated by SCNvim" }, {t("Pproto.new"),t("("),t("makeFunction:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"),t(", "), t("cleanupFunc:"),i(3, "nil"), t(")"),}),
s( {trig = "Pquad.new", name = "Pquad.new", dscr = "Snippet for Pquad.new, auto generated by SCNvim" }, {t("Pquad.new"),t("("),t("a:"),i(1, "-3.741"),t(", "), t("b:"),i(2, "3.741"),t(", "), t("c:"),i(3, "0"),t(", "), t("x:"),i(4, "0.1"),t(", "), t("n:"),i(5, "true"), t(")"),}),
s( {trig = "Preduce.new", name = "Preduce.new", dscr = "Snippet for Preduce.new, auto generated by SCNvim" }, {t("Preduce.new"),t("("),t("selectorPattern:"),i(1, "nil"),t(", "), t("patterns:"),i(2, "[]"), t(")"),}),
s( {trig = "Pretty.new", name = "Pretty.new", dscr = "Snippet for Pretty.new, auto generated by SCNvim" }, {t("Pretty.new"),t("("),t("out:"),i(1, "nil"), t(")"),}),
s( {trig = "PrettyState.new", name = "PrettyState.new", dscr = "Snippet for PrettyState.new, auto generated by SCNvim" }, {t("PrettyState.new"),t("("),t("pretty:"),i(1, "nil"), t(")"),}),
s( {trig = "Prewrite.new", name = "Prewrite.new", dscr = "Snippet for Prewrite.new, auto generated by SCNvim" }, {t("Prewrite.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("dict:"),i(2, "nil"),t(", "), t("levels:"),i(3, "1"), t(")"),}),
s( {trig = "PrimitiveFailedError.new", name = "PrimitiveFailedError.new", dscr = "Snippet for PrimitiveFailedError.new, auto generated by SCNvim" }, {t("PrimitiveFailedError.new"),t("("),t("receiver:"),i(1, "nil"), t(")"),}),
s( {trig = "PrintVal.kr", name = "PrintVal.kr", dscr = "Snippet for PrintVal.kr, auto generated by SCNvim" }, {t("PrintVal.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("numblocks:"),i(2, "100"),t(", "), t("id:"),i(3, "0"), t(")"),}),
s( {trig = "Process.tailCallOptimize", name = "Process.tailCallOptimize", dscr = "Snippet for Process.tailCallOptimize, auto generated by SCNvim" }, {t("Process.tailCallOptimize"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Process.tailCallOptimize_", name = "Process.tailCallOptimize_", dscr = "Snippet for Process.tailCallOptimize_, auto generated by SCNvim" }, {t("Process.tailCallOptimize_"),t("("),t("bool:"),i(1, "nil"), t(")"),}),
s( {trig = "Process.elapsedTime", name = "Process.elapsedTime", dscr = "Snippet for Process.elapsedTime, auto generated by SCNvim" }, {t("Process.elapsedTime"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Process.monotonicClockTime", name = "Process.monotonicClockTime", dscr = "Snippet for Process.monotonicClockTime, auto generated by SCNvim" }, {t("Process.monotonicClockTime"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ProgramChangeResponder.new", name = "ProgramChangeResponder.new", dscr = "Snippet for ProgramChangeResponder.new, auto generated by SCNvim" }, {t("ProgramChangeResponder.new"),t("("),t("function:"),i(1, "nil"),t(", "), t("src:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("value:"),i(4, "nil"),t(", "), t("install:"),i(5, "true"), t(")"),}),
s( {trig = "ProgramChangeResponder.init", name = "ProgramChangeResponder.init", dscr = "Snippet for ProgramChangeResponder.init, auto generated by SCNvim" }, {t("ProgramChangeResponder.init"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ProgramChangeResponder.initialized", name = "ProgramChangeResponder.initialized", dscr = "Snippet for ProgramChangeResponder.initialized, auto generated by SCNvim" }, {t("ProgramChangeResponder.initialized"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ProgramChangeResponder.responders", name = "ProgramChangeResponder.responders", dscr = "Snippet for ProgramChangeResponder.responders, auto generated by SCNvim" }, {t("ProgramChangeResponder.responders"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ProgramChangeResponder.add", name = "ProgramChangeResponder.add", dscr = "Snippet for ProgramChangeResponder.add, auto generated by SCNvim" }, {t("ProgramChangeResponder.add"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "ProgramChangeResponder.remove", name = "ProgramChangeResponder.remove", dscr = "Snippet for ProgramChangeResponder.remove, auto generated by SCNvim" }, {t("ProgramChangeResponder.remove"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "Prorate.new", name = "Prorate.new", dscr = "Snippet for Prorate.new, auto generated by SCNvim" }, {t("Prorate.new"),t("("),t("proportion:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "1"), t(")"),}),
s( {trig = "Prout.new", name = "Prout.new", dscr = "Snippet for Prout.new, auto generated by SCNvim" }, {t("Prout.new"),t("("),t("routineFunc:"),i(1, "nil"), t(")"),}),
s( {trig = "ProxyMixer.new", name = "ProxyMixer.new", dscr = "Snippet for ProxyMixer.new, auto generated by SCNvim" }, {t("ProxyMixer.new"),t("("),t("obj:"),i(1, "nil"),t(", "), t("numItems:"),i(2, "16"),t(", "), t("parent:"),i(3, "nil"),t(", "), t("bounds:"),i(4, "nil"),t(", "), t("makeSkip:"),i(5, "true"),t(", "), t("options:"),i(6, "nil"), t(")"),}),
s( {trig = "ProxyMixer.small", name = "ProxyMixer.small", dscr = "Snippet for ProxyMixer.small, auto generated by SCNvim" }, {t("ProxyMixer.small"),t("("),t("obj:"),i(1, "nil"),t(", "), t("numItems:"),i(2, "16"),t(", "), t("parent:"),i(3, "nil"),t(", "), t("bounds:"),i(4, "nil"),t(", "), t("makeSkip:"),i(5, "true"), t(")"),}),
s( {trig = "ProxyMonitorGui.new", name = "ProxyMonitorGui.new", dscr = "Snippet for ProxyMonitorGui.new, auto generated by SCNvim" }, {t("ProxyMonitorGui.new"),t("("),t("proxy:"),i(1, "nil"),t(", "), t("w:"),i(2, "nil"),t(", "), t("bounds:"),i(3, "nil"),t(", "), t("showLevel:"),i(4, "false"),t(", "), t("showPlayN:"),i(5, "true"),t(", "), t("showName:"),i(6, "true"),t(", "), t("showPauseSend:"),i(7, "true"),t(", "), t("makeWatcher:"),i(8, "true"),t(", "), t("skin:"),i(9, "nil"), t(")"),}),
s( {trig = "ProxyMonitorGui.initClass", name = "ProxyMonitorGui.initClass", dscr = "Snippet for ProxyMonitorGui.initClass, auto generated by SCNvim" }, {t("ProxyMonitorGui.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ProxySpace.initClass", name = "ProxySpace.initClass", dscr = "Snippet for ProxySpace.initClass, auto generated by SCNvim" }, {t("ProxySpace.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ProxySpace.new", name = "ProxySpace.new", dscr = "Snippet for ProxySpace.new, auto generated by SCNvim" }, {t("ProxySpace.new"),t("("),t("server:"),i(1, "nil"),t(", "), t("name:"),i(2, "nil"),t(", "), t("clock:"),i(3, "nil"), t(")"),}),
s( {trig = "ProxySpace.push", name = "ProxySpace.push", dscr = "Snippet for ProxySpace.push, auto generated by SCNvim" }, {t("ProxySpace.push"),t("("),t("server:"),i(1, "nil"),t(", "), t("name:"),i(2, "nil"),t(", "), t("clock:"),i(3, "nil"), t(")"),}),
s( {trig = "ProxySpace.clearAll", name = "ProxySpace.clearAll", dscr = "Snippet for ProxySpace.clearAll, auto generated by SCNvim" }, {t("ProxySpace.clearAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ProxySpace.findSpace", name = "ProxySpace.findSpace", dscr = "Snippet for ProxySpace.findSpace, auto generated by SCNvim" }, {t("ProxySpace.findSpace"),t("("),t("proxy:"),i(1, "nil"),t(", "), t("getCode:"),i(2, "false"), t(")"),}),
s( {trig = "ProxySynthDef.new", name = "ProxySynthDef.new", dscr = "Snippet for ProxySynthDef.new, auto generated by SCNvim" }, {t("ProxySynthDef.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("rates:"),i(3, "nil"),t(", "), t("prependArgs:"),i(4, "nil"),t(", "), t("makeFadeEnv:"),i(5, "true"),t(", "), t("channelOffset:"),i(6, "0"),t(", "), t("chanConstraint:"),i(7, "nil"),t(", "), t("rateConstraint:"),i(8, "nil"), t(")"),}),
s( {trig = "Pseed.new", name = "Pseed.new", dscr = "Snippet for Pseed.new, auto generated by SCNvim" }, {t("Pseed.new"),t("("),t("randSeed:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"), t(")"),}),
s( {trig = "Pseg.new", name = "Pseg.new", dscr = "Snippet for Pseg.new, auto generated by SCNvim" }, {t("Pseg.new"),t("("),t("levels:"),i(1, "nil"),t(", "), t("durs:"),i(2, "1"),t(", "), t("curves:"),i(3, "lin"),t(", "), t("repeats:"),i(4, "1"), t(")"),}),
s( {trig = "Pseq.new", name = "Pseq.new", dscr = "Snippet for Pseq.new, auto generated by SCNvim" }, {t("Pseq.new"),t("("),t("list:"),i(1, "nil"),t(", "), t("repeats:"),i(2, "1"),t(", "), t("offset:"),i(3, "0"), t(")"),}),
s( {trig = "Pseries.new", name = "Pseries.new", dscr = "Snippet for Pseries.new, auto generated by SCNvim" }, {t("Pseries.new"),t("("),t("start:"),i(1, "0"),t(", "), t("step:"),i(2, "1"),t(", "), t("length:"),i(3, "inf"), t(")"),}),
s( {trig = "Pset.new", name = "Pset.new", dscr = "Snippet for Pset.new, auto generated by SCNvim" }, {t("Pset.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("value:"),i(2, "nil"),t(", "), t("pattern:"),i(3, "nil"), t(")"),}),
s( {trig = "Psetpre.new", name = "Psetpre.new", dscr = "Snippet for Psetpre.new, auto generated by SCNvim" }, {t("Psetpre.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("value:"),i(2, "nil"),t(", "), t("pattern:"),i(3, "nil"), t(")"),}),
s( {trig = "Pslide.new", name = "Pslide.new", dscr = "Snippet for Pslide.new, auto generated by SCNvim" }, {t("Pslide.new"),t("("),t("list:"),i(1, "nil"),t(", "), t("repeats:"),i(2, "1"),t(", "), t("len:"),i(3, "3"),t(", "), t("step:"),i(4, "1"),t(", "), t("start:"),i(5, "0"),t(", "), t("wrapAtEnd:"),i(6, "true"), t(")"),}),
s( {trig = "Pspawn.new", name = "Pspawn.new", dscr = "Snippet for Pspawn.new, auto generated by SCNvim" }, {t("Pspawn.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("spawnProtoEvent:"),i(2, "nil"), t(")"),}),
s( {trig = "Pspy.new", name = "Pspy.new", dscr = "Snippet for Pspy.new, auto generated by SCNvim" }, {t("Pspy.new"),t("("),t("markovset:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"),t(", "), t("repeats:"),i(3, "inf"), t(")"),}),
s( {trig = "Pstandard.new", name = "Pstandard.new", dscr = "Snippet for Pstandard.new, auto generated by SCNvim" }, {t("Pstandard.new"),t("("),t("k:"),i(1, "1.5"),t(", "), t("x:"),i(2, "4.9789799812499"),t(", "), t("y:"),i(3, "5.7473416156381"),t(", "), t("n:"),i(4, "true"), t(")"),}),
s( {trig = "Pstep.new", name = "Pstep.new", dscr = "Snippet for Pstep.new, auto generated by SCNvim" }, {t("Pstep.new"),t("("),t("levels:"),i(1, "nil"),t(", "), t("durs:"),i(2, "1"),t(", "), t("repeats:"),i(3, "1"), t(")"),}),
s( {trig = "Pstep2add.new", name = "Pstep2add.new", dscr = "Snippet for Pstep2add.new, auto generated by SCNvim" }, {t("Pstep2add.new"),t("("),t("pattern1:"),i(1, "nil"),t(", "), t("pattern2:"),i(2, "nil"), t(")"),}),
s( {trig = "Pstep3add.new", name = "Pstep3add.new", dscr = "Snippet for Pstep3add.new, auto generated by SCNvim" }, {t("Pstep3add.new"),t("("),t("pattern1:"),i(1, "nil"),t(", "), t("pattern2:"),i(2, "nil"),t(", "), t("pattern3:"),i(3, "nil"), t(")"),}),
s( {trig = "PstepNadd.new", name = "PstepNadd.new", dscr = "Snippet for PstepNadd.new, auto generated by SCNvim" }, {t("PstepNadd.new"),t("("),t("patterns:"),i(1, "[]"), t(")"),}),
s( {trig = "PstepNfunc.new", name = "PstepNfunc.new", dscr = "Snippet for PstepNfunc.new, auto generated by SCNvim" }, {t("PstepNfunc.new"),t("("),t("function:"),i(1, "nil"),t(", "), t("patterns:"),i(2, "nil"), t(")"),}),
s( {trig = "Pstretch.new", name = "Pstretch.new", dscr = "Snippet for Pstretch.new, auto generated by SCNvim" }, {t("Pstretch.new"),t("("),t("value:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"), t(")"),}),
s( {trig = "Pstutter.initClass", name = "Pstutter.initClass", dscr = "Snippet for Pstutter.initClass, auto generated by SCNvim" }, {t("Pstutter.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Pstutter.new", name = "Pstutter.new", dscr = "Snippet for Pstutter.new, auto generated by SCNvim" }, {t("Pstutter.new"),t("("),t("n:"),i(1, "nil"),t(", "), t("pattern:"),i(2, "nil"), t(")"),}),
s( {trig = "Pswitch.new", name = "Pswitch.new", dscr = "Snippet for Pswitch.new, auto generated by SCNvim" }, {t("Pswitch.new"),t("("),t("list:"),i(1, "nil"),t(", "), t("which:"),i(2, "0"), t(")"),}),
s( {trig = "Psym.new", name = "Psym.new", dscr = "Snippet for Psym.new, auto generated by SCNvim" }, {t("Psym.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("dict:"),i(2, "nil"), t(")"),}),
s( {trig = "Psync.new", name = "Psync.new", dscr = "Snippet for Psync.new, auto generated by SCNvim" }, {t("Psync.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("quant:"),i(2, "nil"),t(", "), t("maxdur:"),i(3, "nil"),t(", "), t("tolerance:"),i(4, "0.001"),t(", "), t("mindur:"),i(5, "0"), t(")"),}),
s( {trig = "Ptime.new", name = "Ptime.new", dscr = "Snippet for Ptime.new, auto generated by SCNvim" }, {t("Ptime.new"),t("("),t("repeats:"),i(1, "inf"), t(")"),}),
s( {trig = "Ptrace.new", name = "Ptrace.new", dscr = "Snippet for Ptrace.new, auto generated by SCNvim" }, {t("Ptrace.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("key:"),i(2, "nil"),t(", "), t("printStream:"),i(3, "nil"),t(", "), t("prefix:"),i(4, ""), t(")"),}),
s( {trig = "Ptsym.new", name = "Ptsym.new", dscr = "Snippet for Ptsym.new, auto generated by SCNvim" }, {t("Ptsym.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("dict:"),i(2, "nil"),t(", "), t("quant:"),i(3, "nil"),t(", "), t("dur:"),i(4, "nil"),t(", "), t("tolerance:"),i(5, "0.001"), t(")"),}),
s( {trig = "Pulse.ar", name = "Pulse.ar", dscr = "Snippet for Pulse.ar, auto generated by SCNvim" }, {t("Pulse.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("width:"),i(2, "0.5"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Pulse.kr", name = "Pulse.kr", dscr = "Snippet for Pulse.kr, auto generated by SCNvim" }, {t("Pulse.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("width:"),i(2, "0.5"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "PulseCount.ar", name = "PulseCount.ar", dscr = "Snippet for PulseCount.ar, auto generated by SCNvim" }, {t("PulseCount.ar"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("reset:"),i(2, "0.0"), t(")"),}),
s( {trig = "PulseCount.kr", name = "PulseCount.kr", dscr = "Snippet for PulseCount.kr, auto generated by SCNvim" }, {t("PulseCount.kr"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("reset:"),i(2, "0.0"), t(")"),}),
s( {trig = "PulseDPW.ar", name = "PulseDPW.ar", dscr = "Snippet for PulseDPW.ar, auto generated by SCNvim" }, {t("PulseDPW.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("width:"),i(2, "0.5"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "PulseDPW.kr", name = "PulseDPW.kr", dscr = "Snippet for PulseDPW.kr, auto generated by SCNvim" }, {t("PulseDPW.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("width:"),i(2, "0.5"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "PulseDPW.new", name = "PulseDPW.new", dscr = "Snippet for PulseDPW.new, auto generated by SCNvim" }, {t("PulseDPW.new"),t("("),t("rate:"),i(1, "ar"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("width:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "PulseDivider.ar", name = "PulseDivider.ar", dscr = "Snippet for PulseDivider.ar, auto generated by SCNvim" }, {t("PulseDivider.ar"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("div:"),i(2, "2.0"),t(", "), t("start:"),i(3, "0.0"), t(")"),}),
s( {trig = "PulseDivider.kr", name = "PulseDivider.kr", dscr = "Snippet for PulseDivider.kr, auto generated by SCNvim" }, {t("PulseDivider.kr"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("div:"),i(2, "2.0"),t(", "), t("start:"),i(3, "0.0"), t(")"),}),
s( {trig = "Punop.new", name = "Punop.new", dscr = "Snippet for Punop.new, auto generated by SCNvim" }, {t("Punop.new"),t("("),t("operator:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"), t(")"),}),
s( {trig = "Pwalk.new", name = "Pwalk.new", dscr = "Snippet for Pwalk.new, auto generated by SCNvim" }, {t("Pwalk.new"),t("("),t("list:"),i(1, "nil"),t(", "), t("stepPattern:"),i(2, "nil"),t(", "), t("directionPattern:"),i(3, "1"),t(", "), t("startPos:"),i(4, "0"), t(")"),}),
s( {trig = "Pwhite.new", name = "Pwhite.new", dscr = "Snippet for Pwhite.new, auto generated by SCNvim" }, {t("Pwhite.new"),t("("),t("lo:"),i(1, "0.0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("length:"),i(3, "inf"), t(")"),}),
s( {trig = "Pwrand.new", name = "Pwrand.new", dscr = "Snippet for Pwrand.new, auto generated by SCNvim" }, {t("Pwrand.new"),t("("),t("list:"),i(1, "nil"),t(", "), t("weights:"),i(2, "nil"),t(", "), t("repeats:"),i(3, "1"), t(")"),}),
s( {trig = "Pwrap.new", name = "Pwrap.new", dscr = "Snippet for Pwrap.new, auto generated by SCNvim" }, {t("Pwrap.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("lo:"),i(2, "nil"),t(", "), t("hi:"),i(3, "nil"), t(")"),}),
s( {trig = "QAlignment.initClass", name = "QAlignment.initClass", dscr = "Snippet for QAlignment.initClass, auto generated by SCNvim" }, {t("QAlignment.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QAlignment.new", name = "QAlignment.new", dscr = "Snippet for QAlignment.new, auto generated by SCNvim" }, {t("QAlignment.new"),t("("),t("alignment:"),i(1, "nil"), t(")"),}),
s( {trig = "QCallback.qtClass", name = "QCallback.qtClass", dscr = "Snippet for QCallback.qtClass, auto generated by SCNvim" }, {t("QCallback.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QCallback.new", name = "QCallback.new", dscr = "Snippet for QCallback.new, auto generated by SCNvim" }, {t("QCallback.new"),t("("),t("func:"),i(1, "nil"), t(")"),}),
s( {trig = "QCallback.newFrom", name = "QCallback.newFrom", dscr = "Snippet for QCallback.newFrom, auto generated by SCNvim" }, {t("QCallback.newFrom"),t("("),t("other:"),i(1, "nil"), t(")"),}),
s( {trig = "QColorGroup.new", name = "QColorGroup.new", dscr = "Snippet for QColorGroup.new, auto generated by SCNvim" }, {t("QColorGroup.new"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "QColorRole.new", name = "QColorRole.new", dscr = "Snippet for QColorRole.new, auto generated by SCNvim" }, {t("QColorRole.new"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "QCurve.new", name = "QCurve.new", dscr = "Snippet for QCurve.new, auto generated by SCNvim" }, {t("QCurve.new"),t("("),t("curve:"),i(1, "nil"), t(")"),}),
s( {trig = "QKeyModifiers.toCocoa", name = "QKeyModifiers.toCocoa", dscr = "Snippet for QKeyModifiers.toCocoa, auto generated by SCNvim" }, {t("QKeyModifiers.toCocoa"),t("("),t("mods:"),i(1, "nil"), t(")"),}),
s( {trig = "QLevelIndicatorStyle.new", name = "QLevelIndicatorStyle.new", dscr = "Snippet for QLevelIndicatorStyle.new, auto generated by SCNvim" }, {t("QLevelIndicatorStyle.new"),t("("),t("style:"),i(1, "nil"), t(")"),}),
s( {trig = "QLimits.initClass", name = "QLimits.initClass", dscr = "Snippet for QLimits.initClass, auto generated by SCNvim" }, {t("QLimits.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QLimits.new", name = "QLimits.new", dscr = "Snippet for QLimits.new, auto generated by SCNvim" }, {t("QLimits.new"),t("("),t("limit:"),i(1, "nil"), t(")"),}),
s( {trig = "QMenuRole.new", name = "QMenuRole.new", dscr = "Snippet for QMenuRole.new, auto generated by SCNvim" }, {t("QMenuRole.new"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "QMetaObject.new", name = "QMetaObject.new", dscr = "Snippet for QMetaObject.new, auto generated by SCNvim" }, {t("QMetaObject.new"),t("("),t("className:"),i(1, "nil"), t(")"),}),
s( {trig = "QObject.qtClass", name = "QObject.qtClass", dscr = "Snippet for QObject.qtClass, auto generated by SCNvim" }, {t("QObject.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QObject.meta", name = "QObject.meta", dscr = "Snippet for QObject.meta, auto generated by SCNvim" }, {t("QObject.meta"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QObject.new", name = "QObject.new", dscr = "Snippet for QObject.new, auto generated by SCNvim" }, {t("QObject.new"),t("("),t("argumentArray:"),i(1, "nil"), t(")"),}),
s( {trig = "QObject.heap", name = "QObject.heap", dscr = "Snippet for QObject.heap, auto generated by SCNvim" }, {t("QObject.heap"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QOrientation.initClass", name = "QOrientation.initClass", dscr = "Snippet for QOrientation.initClass, auto generated by SCNvim" }, {t("QOrientation.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QOrientation.new", name = "QOrientation.new", dscr = "Snippet for QOrientation.new, auto generated by SCNvim" }, {t("QOrientation.new"),t("("),t("alignment:"),i(1, "nil"), t(")"),}),
s( {trig = "QPalette.new", name = "QPalette.new", dscr = "Snippet for QPalette.new, auto generated by SCNvim" }, {t("QPalette.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QPalette.auto", name = "QPalette.auto", dscr = "Snippet for QPalette.auto, auto generated by SCNvim" }, {t("QPalette.auto"),t("("),t("buttonColor:"),i(1, "nil"),t(", "), t("windowColor:"),i(2, "nil"), t(")"),}),
s( {trig = "QPalette.system", name = "QPalette.system", dscr = "Snippet for QPalette.system, auto generated by SCNvim" }, {t("QPalette.system"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QPalette.light", name = "QPalette.light", dscr = "Snippet for QPalette.light, auto generated by SCNvim" }, {t("QPalette.light"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QPalette.dark", name = "QPalette.dark", dscr = "Snippet for QPalette.dark, auto generated by SCNvim" }, {t("QPalette.dark"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QPenPrinter.qtClass", name = "QPenPrinter.qtClass", dscr = "Snippet for QPenPrinter.qtClass, auto generated by SCNvim" }, {t("QPenPrinter.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QPenPrinter.new", name = "QPenPrinter.new", dscr = "Snippet for QPenPrinter.new, auto generated by SCNvim" }, {t("QPenPrinter.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QPenPrinter.print", name = "QPenPrinter.print", dscr = "Snippet for QPenPrinter.print, auto generated by SCNvim" }, {t("QPenPrinter.print"),t("("),t("printFunc:"),i(1, "nil"),t(", "), t("cancelFunc:"),i(2, "nil"), t(")"),}),
s( {trig = "QRenderProcessTerminationStatus.new", name = "QRenderProcessTerminationStatus.new", dscr = "Snippet for QRenderProcessTerminationStatus.new, auto generated by SCNvim" }, {t("QRenderProcessTerminationStatus.new"),t("("),t("symbol:"),i(1, "nil"), t(")"),}),
s( {trig = "QToolButtonStyle.new", name = "QToolButtonStyle.new", dscr = "Snippet for QToolButtonStyle.new, auto generated by SCNvim" }, {t("QToolButtonStyle.new"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "QWebAttribute.new", name = "QWebAttribute.new", dscr = "Snippet for QWebAttribute.new, auto generated by SCNvim" }, {t("QWebAttribute.new"),t("("),t("symbol:"),i(1, "nil"), t(")"),}),
s( {trig = "QWebFontFamily.new", name = "QWebFontFamily.new", dscr = "Snippet for QWebFontFamily.new, auto generated by SCNvim" }, {t("QWebFontFamily.new"),t("("),t("symbol:"),i(1, "nil"), t(")"),}),
s( {trig = "QWebPageAction.new", name = "QWebPageAction.new", dscr = "Snippet for QWebPageAction.new, auto generated by SCNvim" }, {t("QWebPageAction.new"),t("("),t("symbol:"),i(1, "nil"), t(")"),}),
s( {trig = "Qitch.kr", name = "Qitch.kr", dscr = "Snippet for Qitch.kr, auto generated by SCNvim" }, {t("Qitch.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("databufnum:"),i(2, "nil"),t(", "), t("ampThreshold:"),i(3, "0.01"),t(", "), t("algoflag:"),i(4, "1"),t(", "), t("ampbufnum:"),i(5, "nil"),t(", "), t("minfreq:"),i(6, "0"),t(", "), t("maxfreq:"),i(7, "2500"), t(")"),}),
s( {trig = "QtGUI.initClass", name = "QtGUI.initClass", dscr = "Snippet for QtGUI.initClass, auto generated by SCNvim" }, {t("QtGUI.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.id", name = "QtGUI.id", dscr = "Snippet for QtGUI.id, auto generated by SCNvim" }, {t("QtGUI.id"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.stop", name = "QtGUI.stop", dscr = "Snippet for QtGUI.stop, auto generated by SCNvim" }, {t("QtGUI.stop"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.debugLevel", name = "QtGUI.debugLevel", dscr = "Snippet for QtGUI.debugLevel, auto generated by SCNvim" }, {t("QtGUI.debugLevel"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.debugLevel_", name = "QtGUI.debugLevel_", dscr = "Snippet for QtGUI.debugLevel_, auto generated by SCNvim" }, {t("QtGUI.debugLevel_"),t("("),t("level:"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.view", name = "QtGUI.view", dscr = "Snippet for QtGUI.view, auto generated by SCNvim" }, {t("QtGUI.view"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.compositeView", name = "QtGUI.compositeView", dscr = "Snippet for QtGUI.compositeView, auto generated by SCNvim" }, {t("QtGUI.compositeView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.hLayoutView", name = "QtGUI.hLayoutView", dscr = "Snippet for QtGUI.hLayoutView, auto generated by SCNvim" }, {t("QtGUI.hLayoutView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.vLayoutView", name = "QtGUI.vLayoutView", dscr = "Snippet for QtGUI.vLayoutView, auto generated by SCNvim" }, {t("QtGUI.vLayoutView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.window", name = "QtGUI.window", dscr = "Snippet for QtGUI.window, auto generated by SCNvim" }, {t("QtGUI.window"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.scrollView", name = "QtGUI.scrollView", dscr = "Snippet for QtGUI.scrollView, auto generated by SCNvim" }, {t("QtGUI.scrollView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.staticText", name = "QtGUI.staticText", dscr = "Snippet for QtGUI.staticText, auto generated by SCNvim" }, {t("QtGUI.staticText"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.button", name = "QtGUI.button", dscr = "Snippet for QtGUI.button, auto generated by SCNvim" }, {t("QtGUI.button"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.checkBox", name = "QtGUI.checkBox", dscr = "Snippet for QtGUI.checkBox, auto generated by SCNvim" }, {t("QtGUI.checkBox"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.textField", name = "QtGUI.textField", dscr = "Snippet for QtGUI.textField, auto generated by SCNvim" }, {t("QtGUI.textField"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.numberBox", name = "QtGUI.numberBox", dscr = "Snippet for QtGUI.numberBox, auto generated by SCNvim" }, {t("QtGUI.numberBox"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.slider", name = "QtGUI.slider", dscr = "Snippet for QtGUI.slider, auto generated by SCNvim" }, {t("QtGUI.slider"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.multiSliderView", name = "QtGUI.multiSliderView", dscr = "Snippet for QtGUI.multiSliderView, auto generated by SCNvim" }, {t("QtGUI.multiSliderView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.rangeSlider", name = "QtGUI.rangeSlider", dscr = "Snippet for QtGUI.rangeSlider, auto generated by SCNvim" }, {t("QtGUI.rangeSlider"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.slider2D", name = "QtGUI.slider2D", dscr = "Snippet for QtGUI.slider2D, auto generated by SCNvim" }, {t("QtGUI.slider2D"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.knob", name = "QtGUI.knob", dscr = "Snippet for QtGUI.knob, auto generated by SCNvim" }, {t("QtGUI.knob"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.listView", name = "QtGUI.listView", dscr = "Snippet for QtGUI.listView, auto generated by SCNvim" }, {t("QtGUI.listView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.treeView", name = "QtGUI.treeView", dscr = "Snippet for QtGUI.treeView, auto generated by SCNvim" }, {t("QtGUI.treeView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.popUpMenu", name = "QtGUI.popUpMenu", dscr = "Snippet for QtGUI.popUpMenu, auto generated by SCNvim" }, {t("QtGUI.popUpMenu"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.textView", name = "QtGUI.textView", dscr = "Snippet for QtGUI.textView, auto generated by SCNvim" }, {t("QtGUI.textView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.freqScope", name = "QtGUI.freqScope", dscr = "Snippet for QtGUI.freqScope, auto generated by SCNvim" }, {t("QtGUI.freqScope"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.freqScopeView", name = "QtGUI.freqScopeView", dscr = "Snippet for QtGUI.freqScopeView, auto generated by SCNvim" }, {t("QtGUI.freqScopeView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.scopeView", name = "QtGUI.scopeView", dscr = "Snippet for QtGUI.scopeView, auto generated by SCNvim" }, {t("QtGUI.scopeView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.stethoscope1", name = "QtGUI.stethoscope1", dscr = "Snippet for QtGUI.stethoscope1, auto generated by SCNvim" }, {t("QtGUI.stethoscope1"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.stethoscope", name = "QtGUI.stethoscope", dscr = "Snippet for QtGUI.stethoscope, auto generated by SCNvim" }, {t("QtGUI.stethoscope"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.soundFileView", name = "QtGUI.soundFileView", dscr = "Snippet for QtGUI.soundFileView, auto generated by SCNvim" }, {t("QtGUI.soundFileView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.envelopeView", name = "QtGUI.envelopeView", dscr = "Snippet for QtGUI.envelopeView, auto generated by SCNvim" }, {t("QtGUI.envelopeView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.levelIndicator", name = "QtGUI.levelIndicator", dscr = "Snippet for QtGUI.levelIndicator, auto generated by SCNvim" }, {t("QtGUI.levelIndicator"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.webView", name = "QtGUI.webView", dscr = "Snippet for QtGUI.webView, auto generated by SCNvim" }, {t("QtGUI.webView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.userView", name = "QtGUI.userView", dscr = "Snippet for QtGUI.userView, auto generated by SCNvim" }, {t("QtGUI.userView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.dragSource", name = "QtGUI.dragSource", dscr = "Snippet for QtGUI.dragSource, auto generated by SCNvim" }, {t("QtGUI.dragSource"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.dragSink", name = "QtGUI.dragSink", dscr = "Snippet for QtGUI.dragSink, auto generated by SCNvim" }, {t("QtGUI.dragSink"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.dragBoth", name = "QtGUI.dragBoth", dscr = "Snippet for QtGUI.dragBoth, auto generated by SCNvim" }, {t("QtGUI.dragBoth"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.dialog", name = "QtGUI.dialog", dscr = "Snippet for QtGUI.dialog, auto generated by SCNvim" }, {t("QtGUI.dialog"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.ezScroller", name = "QtGUI.ezScroller", dscr = "Snippet for QtGUI.ezScroller, auto generated by SCNvim" }, {t("QtGUI.ezScroller"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.ezSlider", name = "QtGUI.ezSlider", dscr = "Snippet for QtGUI.ezSlider, auto generated by SCNvim" }, {t("QtGUI.ezSlider"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.ezListView", name = "QtGUI.ezListView", dscr = "Snippet for QtGUI.ezListView, auto generated by SCNvim" }, {t("QtGUI.ezListView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.ezPopUpMenu", name = "QtGUI.ezPopUpMenu", dscr = "Snippet for QtGUI.ezPopUpMenu, auto generated by SCNvim" }, {t("QtGUI.ezPopUpMenu"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.ezNumber", name = "QtGUI.ezNumber", dscr = "Snippet for QtGUI.ezNumber, auto generated by SCNvim" }, {t("QtGUI.ezNumber"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.ezRanger", name = "QtGUI.ezRanger", dscr = "Snippet for QtGUI.ezRanger, auto generated by SCNvim" }, {t("QtGUI.ezRanger"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.hLayout", name = "QtGUI.hLayout", dscr = "Snippet for QtGUI.hLayout, auto generated by SCNvim" }, {t("QtGUI.hLayout"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.vLayout", name = "QtGUI.vLayout", dscr = "Snippet for QtGUI.vLayout, auto generated by SCNvim" }, {t("QtGUI.vLayout"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.gridLayout", name = "QtGUI.gridLayout", dscr = "Snippet for QtGUI.gridLayout, auto generated by SCNvim" }, {t("QtGUI.gridLayout"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.stackLayout", name = "QtGUI.stackLayout", dscr = "Snippet for QtGUI.stackLayout, auto generated by SCNvim" }, {t("QtGUI.stackLayout"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.pen", name = "QtGUI.pen", dscr = "Snippet for QtGUI.pen, auto generated by SCNvim" }, {t("QtGUI.pen"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.font", name = "QtGUI.font", dscr = "Snippet for QtGUI.font, auto generated by SCNvim" }, {t("QtGUI.font"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.image", name = "QtGUI.image", dscr = "Snippet for QtGUI.image, auto generated by SCNvim" }, {t("QtGUI.image"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.qcView", name = "QtGUI.qcView", dscr = "Snippet for QtGUI.qcView, auto generated by SCNvim" }, {t("QtGUI.qcView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.notImplemented", name = "QtGUI.notImplemented", dscr = "Snippet for QtGUI.notImplemented, auto generated by SCNvim" }, {t("QtGUI.notImplemented"),t("("),t("class:"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.cursorPosition", name = "QtGUI.cursorPosition", dscr = "Snippet for QtGUI.cursorPosition, auto generated by SCNvim" }, {t("QtGUI.cursorPosition"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.availableStyles", name = "QtGUI.availableStyles", dscr = "Snippet for QtGUI.availableStyles, auto generated by SCNvim" }, {t("QtGUI.availableStyles"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.style_", name = "QtGUI.style_", dscr = "Snippet for QtGUI.style_, auto generated by SCNvim" }, {t("QtGUI.style_"),t("("),t("styleName:"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.stringBounds", name = "QtGUI.stringBounds", dscr = "Snippet for QtGUI.stringBounds, auto generated by SCNvim" }, {t("QtGUI.stringBounds"),t("("),t("aString:"),i(1, "nil"),t(", "), t("aFont:"),i(2, "nil"), t(")"),}),
s( {trig = "QtGUI.palette", name = "QtGUI.palette", dscr = "Snippet for QtGUI.palette, auto generated by SCNvim" }, {t("QtGUI.palette"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.palette_", name = "QtGUI.palette_", dscr = "Snippet for QtGUI.palette_, auto generated by SCNvim" }, {t("QtGUI.palette_"),t("("),t("p:"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.focusView", name = "QtGUI.focusView", dscr = "Snippet for QtGUI.focusView, auto generated by SCNvim" }, {t("QtGUI.focusView"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.selectedText", name = "QtGUI.selectedText", dscr = "Snippet for QtGUI.selectedText, auto generated by SCNvim" }, {t("QtGUI.selectedText"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QtGUI.prStringBounds", name = "QtGUI.prStringBounds", dscr = "Snippet for QtGUI.prStringBounds, auto generated by SCNvim" }, {t("QtGUI.prStringBounds"),t("("),t("aString:"),i(1, "nil"),t(", "), t("aFont:"),i(2, "nil"), t(")"),}),
s( {trig = "QtGUI.prSetStyle", name = "QtGUI.prSetStyle", dscr = "Snippet for QtGUI.prSetStyle, auto generated by SCNvim" }, {t("QtGUI.prSetStyle"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "QuadN.ar", name = "QuadN.ar", dscr = "Snippet for QuadN.ar, auto generated by SCNvim" }, {t("QuadN.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a:"),i(2, "1"),t(", "), t("b:"),i(3, "-1"),t(", "), t("c:"),i(4, "-0.75"),t(", "), t("xi:"),i(5, "0"),t(", "), t("mul:"),i(6, "1"),t(", "), t("add:"),i(7, "0"), t(")"),}),
s( {trig = "Quant.default", name = "Quant.default", dscr = "Snippet for Quant.default, auto generated by SCNvim" }, {t("Quant.default"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quant.default_", name = "Quant.default_", dscr = "Snippet for Quant.default_, auto generated by SCNvim" }, {t("Quant.default_"),t("("),t("quant:"),i(1, "nil"), t(")"),}),
s( {trig = "Quant.new", name = "Quant.new", dscr = "Snippet for Quant.new, auto generated by SCNvim" }, {t("Quant.new"),t("("),t("quant:"),i(1, "0"),t(", "), t("phase:"),i(2, "nil"),t(", "), t("timingOffset:"),i(3, "nil"), t(")"),}),
s( {trig = "Quark.new", name = "Quark.new", dscr = "Snippet for Quark.new, auto generated by SCNvim" }, {t("Quark.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("refspec:"),i(2, "nil"),t(", "), t("url:"),i(3, "nil"),t(", "), t("localPath:"),i(4, "nil"), t(")"),}),
s( {trig = "Quark.fromLocalPath", name = "Quark.fromLocalPath", dscr = "Snippet for Quark.fromLocalPath, auto generated by SCNvim" }, {t("Quark.fromLocalPath"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "Quark.fromDirectoryEntry", name = "Quark.fromDirectoryEntry", dscr = "Snippet for Quark.fromDirectoryEntry, auto generated by SCNvim" }, {t("Quark.fromDirectoryEntry"),t("("),t("name:"),i(1, "nil"),t(", "), t("directoryEntry:"),i(2, "nil"), t(")"),}),
s( {trig = "Quark.parseDependency", name = "Quark.parseDependency", dscr = "Snippet for Quark.parseDependency, auto generated by SCNvim" }, {t("Quark.parseDependency"),t("("),t("dep:"),i(1, "nil"),t(", "), t("forQuark:"),i(2, "nil"), t(")"),}),
s( {trig = "Quark.prMakeDep", name = "Quark.prMakeDep", dscr = "Snippet for Quark.prMakeDep, auto generated by SCNvim" }, {t("Quark.prMakeDep"),t("("),t("name:"),i(1, "nil"),t(", "), t("refspec:"),i(2, "nil"), t(")"),}),
s( {trig = "Quark.parseQuarkName", name = "Quark.parseQuarkName", dscr = "Snippet for Quark.parseQuarkName, auto generated by SCNvim" }, {t("Quark.parseQuarkName"),t("("),t("name:"),i(1, "nil"),t(", "), t("refspec:"),i(2, "nil"),t(", "), t("url:"),i(3, "nil"),t(", "), t("localPath:"),i(4, "nil"), t(")"),}),
s( {trig = "QuarkRowView.new", name = "QuarkRowView.new", dscr = "Snippet for QuarkRowView.new, auto generated by SCNvim" }, {t("QuarkRowView.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("quark:"),i(2, "nil"),t(", "), t("quarksGui:"),i(3, "nil"), t(")"),}),
s( {trig = "Quarks.install", name = "Quarks.install", dscr = "Snippet for Quarks.install, auto generated by SCNvim" }, {t("Quarks.install"),t("("),t("name:"),i(1, "nil"),t(", "), t("refspec:"),i(2, "nil"), t(")"),}),
s( {trig = "Quarks.uninstall", name = "Quarks.uninstall", dscr = "Snippet for Quarks.uninstall, auto generated by SCNvim" }, {t("Quarks.uninstall"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.uninstallQuark", name = "Quarks.uninstallQuark", dscr = "Snippet for Quarks.uninstallQuark, auto generated by SCNvim" }, {t("Quarks.uninstallQuark"),t("("),t("quark:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.clear", name = "Quarks.clear", dscr = "Snippet for Quarks.clear, auto generated by SCNvim" }, {t("Quarks.clear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.clearCache", name = "Quarks.clearCache", dscr = "Snippet for Quarks.clearCache, auto generated by SCNvim" }, {t("Quarks.clearCache"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.load", name = "Quarks.load", dscr = "Snippet for Quarks.load, auto generated by SCNvim" }, {t("Quarks.load"),t("("),t("path:"),i(1, "nil"),t(", "), t("done:"),i(2, "nil"), t(")"),}),
s( {trig = "Quarks.save", name = "Quarks.save", dscr = "Snippet for Quarks.save, auto generated by SCNvim" }, {t("Quarks.save"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.update", name = "Quarks.update", dscr = "Snippet for Quarks.update, auto generated by SCNvim" }, {t("Quarks.update"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.installed", name = "Quarks.installed", dscr = "Snippet for Quarks.installed, auto generated by SCNvim" }, {t("Quarks.installed"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.installedPaths", name = "Quarks.installedPaths", dscr = "Snippet for Quarks.installedPaths, auto generated by SCNvim" }, {t("Quarks.installedPaths"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.isInstalled", name = "Quarks.isInstalled", dscr = "Snippet for Quarks.isInstalled, auto generated by SCNvim" }, {t("Quarks.isInstalled"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.pathIsInstalled", name = "Quarks.pathIsInstalled", dscr = "Snippet for Quarks.pathIsInstalled, auto generated by SCNvim" }, {t("Quarks.pathIsInstalled"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.openFolder", name = "Quarks.openFolder", dscr = "Snippet for Quarks.openFolder, auto generated by SCNvim" }, {t("Quarks.openFolder"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.gui", name = "Quarks.gui", dscr = "Snippet for Quarks.gui, auto generated by SCNvim" }, {t("Quarks.gui"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.installQuark", name = "Quarks.installQuark", dscr = "Snippet for Quarks.installQuark, auto generated by SCNvim" }, {t("Quarks.installQuark"),t("("),t("quark:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.link", name = "Quarks.link", dscr = "Snippet for Quarks.link, auto generated by SCNvim" }, {t("Quarks.link"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.unlink", name = "Quarks.unlink", dscr = "Snippet for Quarks.unlink, auto generated by SCNvim" }, {t("Quarks.unlink"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.initClass", name = "Quarks.initClass", dscr = "Snippet for Quarks.initClass, auto generated by SCNvim" }, {t("Quarks.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.at", name = "Quarks.at", dscr = "Snippet for Quarks.at, auto generated by SCNvim" }, {t("Quarks.at"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.findQuarkURL", name = "Quarks.findQuarkURL", dscr = "Snippet for Quarks.findQuarkURL, auto generated by SCNvim" }, {t("Quarks.findQuarkURL"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.directory", name = "Quarks.directory", dscr = "Snippet for Quarks.directory, auto generated by SCNvim" }, {t("Quarks.directory"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.addFolder", name = "Quarks.addFolder", dscr = "Snippet for Quarks.addFolder, auto generated by SCNvim" }, {t("Quarks.addFolder"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.all", name = "Quarks.all", dscr = "Snippet for Quarks.all, auto generated by SCNvim" }, {t("Quarks.all"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.fetchDirectory", name = "Quarks.fetchDirectory", dscr = "Snippet for Quarks.fetchDirectory, auto generated by SCNvim" }, {t("Quarks.fetchDirectory"),t("("),t("force:"),i(1, "true"), t(")"),}),
s( {trig = "Quarks.checkForUpdates", name = "Quarks.checkForUpdates", dscr = "Snippet for Quarks.checkForUpdates, auto generated by SCNvim" }, {t("Quarks.checkForUpdates"),t("("),t("done:"),i(1, "nil"),t(", "), t("quarkAction:"),i(2, "nil"), t(")"),}),
s( {trig = "Quarks.prReadDirectoryFile", name = "Quarks.prReadDirectoryFile", dscr = "Snippet for Quarks.prReadDirectoryFile, auto generated by SCNvim" }, {t("Quarks.prReadDirectoryFile"),t("("),t("dirTxtPath:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.prFetchDirectory", name = "Quarks.prFetchDirectory", dscr = "Snippet for Quarks.prFetchDirectory, auto generated by SCNvim" }, {t("Quarks.prFetchDirectory"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.quarkNameAsLocalPath", name = "Quarks.quarkNameAsLocalPath", dscr = "Snippet for Quarks.quarkNameAsLocalPath, auto generated by SCNvim" }, {t("Quarks.quarkNameAsLocalPath"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.isPath", name = "Quarks.isPath", dscr = "Snippet for Quarks.isPath, auto generated by SCNvim" }, {t("Quarks.isPath"),t("("),t("string:"),i(1, "nil"), t(")"),}),
s( {trig = "Quarks.asAbsolutePath", name = "Quarks.asAbsolutePath", dscr = "Snippet for Quarks.asAbsolutePath, auto generated by SCNvim" }, {t("Quarks.asAbsolutePath"),t("("),t("path:"),i(1, "nil"),t(", "), t("relativeTo:"),i(2, "nil"), t(")"),}),
s( {trig = "Quarks.asRelativePath", name = "Quarks.asRelativePath", dscr = "Snippet for Quarks.asRelativePath, auto generated by SCNvim" }, {t("Quarks.asRelativePath"),t("("),t("path:"),i(1, "nil"),t(", "), t("relativeToDir:"),i(2, "nil"), t(")"),}),
s( {trig = "Quarks.classesInPackage", name = "Quarks.classesInPackage", dscr = "Snippet for Quarks.classesInPackage, auto generated by SCNvim" }, {t("Quarks.classesInPackage"),t("("),t("packageName:"),i(1, "nil"), t(")"),}),
s( {trig = "QuarksGui.new", name = "QuarksGui.new", dscr = "Snippet for QuarksGui.new, auto generated by SCNvim" }, {t("QuarksGui.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "QuartzComposerView.new", name = "QuartzComposerView.new", dscr = "Snippet for QuartzComposerView.new, auto generated by SCNvim" }, {t("QuartzComposerView.new"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "QuartzComposerView.qtClass", name = "QuartzComposerView.qtClass", dscr = "Snippet for QuartzComposerView.qtClass, auto generated by SCNvim" }, {t("QuartzComposerView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Quaternion.new", name = "Quaternion.new", dscr = "Snippet for Quaternion.new, auto generated by SCNvim" }, {t("Quaternion.new"),t("("),t("a:"),i(1, "nil"),t(", "), t("b:"),i(2, "nil"),t(", "), t("c:"),i(3, "nil"),t(", "), t("d:"),i(4, "nil"), t(")"),}),
s( {trig = "Quaternion.rand", name = "Quaternion.rand", dscr = "Snippet for Quaternion.rand, auto generated by SCNvim" }, {t("Quaternion.rand"),t("("),t("min:"),i(1, "nil"),t(", "), t("max:"),i(2, "nil"), t(")"),}),
s( {trig = "RLPF.ar", name = "RLPF.ar", dscr = "Snippet for RLPF.ar, auto generated by SCNvim" }, {t("RLPF.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "RLPF.kr", name = "RLPF.kr", dscr = "Snippet for RLPF.kr, auto generated by SCNvim" }, {t("RLPF.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("rq:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "RLPFD.ar", name = "RLPFD.ar", dscr = "Snippet for RLPFD.ar, auto generated by SCNvim" }, {t("RLPFD.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("ffreq:"),i(2, "440.0"),t(", "), t("res:"),i(3, "0.0"),t(", "), t("dist:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "RLPFD.kr", name = "RLPFD.kr", dscr = "Snippet for RLPFD.kr, auto generated by SCNvim" }, {t("RLPFD.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("ffreq:"),i(2, "440.0"),t(", "), t("res:"),i(3, "0.0"),t(", "), t("dist:"),i(4, "0.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "RMAFoodChainL.ar", name = "RMAFoodChainL.ar", dscr = "Snippet for RMAFoodChainL.ar, auto generated by SCNvim" }, {t("RMAFoodChainL.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a1:"),i(2, "5.0"),t(", "), t("b1:"),i(3, "3.0"),t(", "), t("d1:"),i(4, "0.4"),t(", "), t("a2:"),i(5, "0.1"),t(", "), t("b2:"),i(6, "2.0"),t(", "), t("d2:"),i(7, "0.01"),t(", "), t("k:"),i(8, "1.0943"),t(", "), t("r:"),i(9, "0.8904"),t(", "), t("h:"),i(10, "0.05"),t(", "), t("xi:"),i(11, "0.1"),t(", "), t("yi:"),i(12, "0"),t(", "), t("zi:"),i(13, "0"),t(", "), t("mul:"),i(14, "1.0"),t(", "), t("add:"),i(15, "0.0"), t(")"),}),
s( {trig = "RMAFoodChainL.categories", name = "RMAFoodChainL.categories", dscr = "Snippet for RMAFoodChainL.categories, auto generated by SCNvim" }, {t("RMAFoodChainL.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "RMEQ.ar", name = "RMEQ.ar", dscr = "Snippet for RMEQ.ar, auto generated by SCNvim" }, {t("RMEQ.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440"),t(", "), t("rq:"),i(3, "0.1"),t(", "), t("k:"),i(4, "0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "RMEQSuite.categories", name = "RMEQSuite.categories", dscr = "Snippet for RMEQSuite.categories, auto generated by SCNvim" }, {t("RMEQSuite.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "RMS.ar", name = "RMS.ar", dscr = "Snippet for RMS.ar, auto generated by SCNvim" }, {t("RMS.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("lpFreq:"),i(2, "10"), t(")"),}),
s( {trig = "RMS.kr", name = "RMS.kr", dscr = "Snippet for RMS.kr, auto generated by SCNvim" }, {t("RMS.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("lpFreq:"),i(2, "10"), t(")"),}),
s( {trig = "RMShelf.ar", name = "RMShelf.ar", dscr = "Snippet for RMShelf.ar, auto generated by SCNvim" }, {t("RMShelf.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("k:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "RMShelf2.ar", name = "RMShelf2.ar", dscr = "Snippet for RMShelf2.ar, auto generated by SCNvim" }, {t("RMShelf2.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("k:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Rand.new", name = "Rand.new", dscr = "Snippet for Rand.new, auto generated by SCNvim" }, {t("Rand.new"),t("("),t("lo:"),i(1, "0.0"),t(", "), t("hi:"),i(2, "1.0"), t(")"),}),
s( {trig = "RandID.kr", name = "RandID.kr", dscr = "Snippet for RandID.kr, auto generated by SCNvim" }, {t("RandID.kr"),t("("),t("id:"),i(1, "0"), t(")"),}),
s( {trig = "RandID.ir", name = "RandID.ir", dscr = "Snippet for RandID.ir, auto generated by SCNvim" }, {t("RandID.ir"),t("("),t("id:"),i(1, "0"), t(")"),}),
s( {trig = "RandSeed.ar", name = "RandSeed.ar", dscr = "Snippet for RandSeed.ar, auto generated by SCNvim" }, {t("RandSeed.ar"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("seed:"),i(2, "56789"), t(")"),}),
s( {trig = "RandSeed.kr", name = "RandSeed.kr", dscr = "Snippet for RandSeed.kr, auto generated by SCNvim" }, {t("RandSeed.kr"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("seed:"),i(2, "56789"), t(")"),}),
s( {trig = "RandSeed.ir", name = "RandSeed.ir", dscr = "Snippet for RandSeed.ir, auto generated by SCNvim" }, {t("RandSeed.ir"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("seed:"),i(2, "56789"), t(")"),}),
s( {trig = "Range.new", name = "Range.new", dscr = "Snippet for Range.new, auto generated by SCNvim" }, {t("Range.new"),t("("),t("start:"),i(1, "nil"),t(", "), t("size:"),i(2, "nil"), t(")"),}),
s( {trig = "RangeSlider.qtClass", name = "RangeSlider.qtClass", dscr = "Snippet for RangeSlider.qtClass, auto generated by SCNvim" }, {t("RangeSlider.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "RangeSlider.new", name = "RangeSlider.new", dscr = "Snippet for RangeSlider.new, auto generated by SCNvim" }, {t("RangeSlider.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "ReadableNodeIDAllocator.new", name = "ReadableNodeIDAllocator.new", dscr = "Snippet for ReadableNodeIDAllocator.new, auto generated by SCNvim" }, {t("ReadableNodeIDAllocator.new"),t("("),t("clientID:"),i(1, "0"),t(", "), t("lowestTempID:"),i(2, "1000"),t(", "), t("numClients:"),i(3, "32"), t(")"),}),
s( {trig = "RecordBuf.ar", name = "RecordBuf.ar", dscr = "Snippet for RecordBuf.ar, auto generated by SCNvim" }, {t("RecordBuf.ar"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("offset:"),i(3, "0.0"),t(", "), t("recLevel:"),i(4, "1.0"),t(", "), t("preLevel:"),i(5, "0.0"),t(", "), t("run:"),i(6, "1.0"),t(", "), t("loop:"),i(7, "1.0"),t(", "), t("trigger:"),i(8, "1.0"),t(", "), t("doneAction:"),i(9, "0"), t(")"),}),
s( {trig = "RecordBuf.kr", name = "RecordBuf.kr", dscr = "Snippet for RecordBuf.kr, auto generated by SCNvim" }, {t("RecordBuf.kr"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("offset:"),i(3, "0.0"),t(", "), t("recLevel:"),i(4, "1.0"),t(", "), t("preLevel:"),i(5, "0.0"),t(", "), t("run:"),i(6, "1.0"),t(", "), t("loop:"),i(7, "1.0"),t(", "), t("trigger:"),i(8, "1.0"),t(", "), t("doneAction:"),i(9, "0"), t(")"),}),
s( {trig = "Recorder.new", name = "Recorder.new", dscr = "Snippet for Recorder.new, auto generated by SCNvim" }, {t("Recorder.new"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "Rect.new", name = "Rect.new", dscr = "Snippet for Rect.new, auto generated by SCNvim" }, {t("Rect.new"),t("("),t("left:"),i(1, "0"),t(", "), t("top:"),i(2, "0"),t(", "), t("width:"),i(3, "0"),t(", "), t("height:"),i(4, "0"), t(")"),}),
s( {trig = "Rect.newSides", name = "Rect.newSides", dscr = "Snippet for Rect.newSides, auto generated by SCNvim" }, {t("Rect.newSides"),t("("),t("left:"),i(1, "0"),t(", "), t("top:"),i(2, "0"),t(", "), t("right:"),i(3, "0"),t(", "), t("bottom:"),i(4, "0"), t(")"),}),
s( {trig = "Rect.fromPoints", name = "Rect.fromPoints", dscr = "Snippet for Rect.fromPoints, auto generated by SCNvim" }, {t("Rect.fromPoints"),t("("),t("pt1:"),i(1, "nil"),t(", "), t("pt2:"),i(2, "nil"), t(")"),}),
s( {trig = "Rect.fromRect", name = "Rect.fromRect", dscr = "Snippet for Rect.fromRect, auto generated by SCNvim" }, {t("Rect.fromRect"),t("("),t("rect:"),i(1, "nil"), t(")"),}),
s( {trig = "Rect.fromArray", name = "Rect.fromArray", dscr = "Snippet for Rect.fromArray, auto generated by SCNvim" }, {t("Rect.fromArray"),t("("),t("array:"),i(1, "nil"), t(")"),}),
s( {trig = "Rect.aboutPoint", name = "Rect.aboutPoint", dscr = "Snippet for Rect.aboutPoint, auto generated by SCNvim" }, {t("Rect.aboutPoint"),t("("),t("point:"),i(1, "nil"),t(", "), t("dx:"),i(2, "nil"),t(", "), t("dy:"),i(3, "nil"), t(")"),}),
s( {trig = "Ref.new", name = "Ref.new", dscr = "Snippet for Ref.new, auto generated by SCNvim" }, {t("Ref.new"),t("("),t("thing:"),i(1, "nil"), t(")"),}),
s( {trig = "Reflections.ar", name = "Reflections.ar", dscr = "Snippet for Reflections.ar, auto generated by SCNvim" }, {t("Reflections.ar"),t("("),t("pointsource:"),i(1, "nil"),t(", "), t("rooml:"),i(2, "nil"),t(", "), t("roomw:"),i(3, "nil"),t(", "), t("absorbtion:"),i(4, "0.9"),t(", "), t("directivity:"),i(5, "nil"),t(", "), t("spkrs:"),i(6, "[]"), t(")"),}),
s( {trig = "Resonz.ar", name = "Resonz.ar", dscr = "Snippet for Resonz.ar, auto generated by SCNvim" }, {t("Resonz.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("bwr:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Resonz.kr", name = "Resonz.kr", dscr = "Snippet for Resonz.kr, auto generated by SCNvim" }, {t("Resonz.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("bwr:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Rest.new", name = "Rest.new", dscr = "Snippet for Rest.new, auto generated by SCNvim" }, {t("Rest.new"),t("("),t("value:"),i(1, "1"), t(")"),}),
s( {trig = "Rest.embedInStream", name = "Rest.embedInStream", dscr = "Snippet for Rest.embedInStream, auto generated by SCNvim" }, {t("Rest.embedInStream"),t("("),t("inval:"),i(1, "nil"), t(")"),}),
s( {trig = "Rest.asStream", name = "Rest.asStream", dscr = "Snippet for Rest.asStream, auto generated by SCNvim" }, {t("Rest.asStream"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "RingBuffer.new", name = "RingBuffer.new", dscr = "Snippet for RingBuffer.new, auto generated by SCNvim" }, {t("RingBuffer.new"),t("("),t("size:"),i(1, "nil"),t(", "), t("collectionClass:"),i(2, "nil"), t(")"),}),
s( {trig = "RingNumberAllocator.new", name = "RingNumberAllocator.new", dscr = "Snippet for RingNumberAllocator.new, auto generated by SCNvim" }, {t("RingNumberAllocator.new"),t("("),t("lo:"),i(1, "nil"),t(", "), t("hi:"),i(2, "nil"), t(")"),}),
s( {trig = "Ringz.ar", name = "Ringz.ar", dscr = "Snippet for Ringz.ar, auto generated by SCNvim" }, {t("Ringz.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("decaytime:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Ringz.kr", name = "Ringz.kr", dscr = "Snippet for Ringz.kr, auto generated by SCNvim" }, {t("Ringz.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("decaytime:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "RootFinder.findRoot", name = "RootFinder.findRoot", dscr = "Snippet for RootFinder.findRoot, auto generated by SCNvim" }, {t("RootFinder.findRoot"),t("("),t("func:"),i(1, "nil"),t(", "), t("jacobian:"),i(2, "nil"),t(", "), t("x0:"),i(3, "nil"),t(", "), t("param:"),i(4, "nil"),t(", "), t("opts:"),i(5, "nil"), t(")"),}),
s( {trig = "RootNode.new", name = "RootNode.new", dscr = "Snippet for RootNode.new, auto generated by SCNvim" }, {t("RootNode.new"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "RootNode.initClass", name = "RootNode.initClass", dscr = "Snippet for RootNode.initClass, auto generated by SCNvim" }, {t("RootNode.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "RootNode.freeAll", name = "RootNode.freeAll", dscr = "Snippet for RootNode.freeAll, auto generated by SCNvim" }, {t("RootNode.freeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "RosslerL.ar", name = "RosslerL.ar", dscr = "Snippet for RosslerL.ar, auto generated by SCNvim" }, {t("RosslerL.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("a:"),i(2, "0.2"),t(", "), t("b:"),i(3, "0.2"),t(", "), t("c:"),i(4, "5.7"),t(", "), t("h:"),i(5, "0.05"),t(", "), t("xi:"),i(6, "0.1"),t(", "), t("yi:"),i(7, "0"),t(", "), t("zi:"),i(8, "0"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "RosslerL.categories", name = "RosslerL.categories", dscr = "Snippet for RosslerL.categories, auto generated by SCNvim" }, {t("RosslerL.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "RosslerResL.ar", name = "RosslerResL.ar", dscr = "Snippet for RosslerResL.ar, auto generated by SCNvim" }, {t("RosslerResL.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("stiff:"),i(2, "1.0"),t(", "), t("freq:"),i(3, "22050"),t(", "), t("a:"),i(4, "0.2"),t(", "), t("b:"),i(5, "0.2"),t(", "), t("c:"),i(6, "5.7"),t(", "), t("h:"),i(7, "0.05"),t(", "), t("xi:"),i(8, "0.1"),t(", "), t("yi:"),i(9, "0"),t(", "), t("zi:"),i(10, "0"),t(", "), t("mul:"),i(11, "1.0"),t(", "), t("add:"),i(12, "0.0"), t(")"),}),
s( {trig = "Rotate.ar", name = "Rotate.ar", dscr = "Snippet for Rotate.ar, auto generated by SCNvim" }, {t("Rotate.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("rotate:"),i(5, "nil"), t(")"),}),
s( {trig = "Rotate2.ar", name = "Rotate2.ar", dscr = "Snippet for Rotate2.ar, auto generated by SCNvim" }, {t("Rotate2.ar"),t("("),t("x:"),i(1, "nil"),t(", "), t("y:"),i(2, "nil"),t(", "), t("pos:"),i(3, "0.0"), t(")"),}),
s( {trig = "Rotate2.kr", name = "Rotate2.kr", dscr = "Snippet for Rotate2.kr, auto generated by SCNvim" }, {t("Rotate2.kr"),t("("),t("x:"),i(1, "nil"),t(", "), t("y:"),i(2, "nil"),t(", "), t("pos:"),i(3, "0.0"), t(")"),}),
s( {trig = "Routine.run", name = "Routine.run", dscr = "Snippet for Routine.run, auto generated by SCNvim" }, {t("Routine.run"),t("("),t("func:"),i(1, "nil"),t(", "), t("stackSize:"),i(2, "nil"),t(", "), t("clock:"),i(3, "nil"),t(", "), t("quant:"),i(4, "nil"), t(")"),}),
s( {trig = "RunningSum.ar", name = "RunningSum.ar", dscr = "Snippet for RunningSum.ar, auto generated by SCNvim" }, {t("RunningSum.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamp:"),i(2, "40"), t(")"),}),
s( {trig = "RunningSum.kr", name = "RunningSum.kr", dscr = "Snippet for RunningSum.kr, auto generated by SCNvim" }, {t("RunningSum.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamp:"),i(2, "40"), t(")"),}),
s( {trig = "RunningSum.rms", name = "RunningSum.rms", dscr = "Snippet for RunningSum.rms, auto generated by SCNvim" }, {t("RunningSum.rms"),t("("),t("in:"),i(1, "nil"),t(", "), t("numsamp:"),i(2, "40"), t(")"),}),
s( {trig = "SCDoc.parseFileFull", name = "SCDoc.parseFileFull", dscr = "Snippet for SCDoc.parseFileFull, auto generated by SCNvim" }, {t("SCDoc.parseFileFull"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.parseFilePartial", name = "SCDoc.parseFilePartial", dscr = "Snippet for SCDoc.parseFilePartial, auto generated by SCNvim" }, {t("SCDoc.parseFilePartial"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.parseFileMetaData", name = "SCDoc.parseFileMetaData", dscr = "Snippet for SCDoc.parseFileMetaData, auto generated by SCNvim" }, {t("SCDoc.parseFileMetaData"),t("("),t("dir:"),i(1, "nil"),t(", "), t("path:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDoc.prParseFile", name = "SCDoc.prParseFile", dscr = "Snippet for SCDoc.prParseFile, auto generated by SCNvim" }, {t("SCDoc.prParseFile"),t("("),t("path:"),i(1, "nil"),t(", "), t("mode:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDoc.indexOldHelp", name = "SCDoc.indexOldHelp", dscr = "Snippet for SCDoc.indexOldHelp, auto generated by SCNvim" }, {t("SCDoc.indexOldHelp"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.indexAllDocuments", name = "SCDoc.indexAllDocuments", dscr = "Snippet for SCDoc.indexAllDocuments, auto generated by SCNvim" }, {t("SCDoc.indexAllDocuments"),t("("),t("clearCache:"),i(1, "false"), t(")"),}),
s( {trig = "SCDoc.didIndexDocuments", name = "SCDoc.didIndexDocuments", dscr = "Snippet for SCDoc.didIndexDocuments, auto generated by SCNvim" }, {t("SCDoc.didIndexDocuments"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.documents", name = "SCDoc.documents", dscr = "Snippet for SCDoc.documents, auto generated by SCNvim" }, {t("SCDoc.documents"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.prRescanHelpSourceDirs", name = "SCDoc.prRescanHelpSourceDirs", dscr = "Snippet for SCDoc.prRescanHelpSourceDirs, auto generated by SCNvim" }, {t("SCDoc.prRescanHelpSourceDirs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.helpSourceDirs", name = "SCDoc.helpSourceDirs", dscr = "Snippet for SCDoc.helpSourceDirs, auto generated by SCNvim" }, {t("SCDoc.helpSourceDirs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.exportDocMapJS", name = "SCDoc.exportDocMapJS", dscr = "Snippet for SCDoc.exportDocMapJS, auto generated by SCNvim" }, {t("SCDoc.exportDocMapJS"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.helpSourceDir_", name = "SCDoc.helpSourceDir_", dscr = "Snippet for SCDoc.helpSourceDir_, auto generated by SCNvim" }, {t("SCDoc.helpSourceDir_"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.helpTargetDir_", name = "SCDoc.helpTargetDir_", dscr = "Snippet for SCDoc.helpTargetDir_, auto generated by SCNvim" }, {t("SCDoc.helpTargetDir_"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.postMsg", name = "SCDoc.postMsg", dscr = "Snippet for SCDoc.postMsg, auto generated by SCNvim" }, {t("SCDoc.postMsg"),t("("),t("txt:"),i(1, "nil"),t(", "), t("lvl:"),i(2, "0"), t(")"),}),
s( {trig = "SCDoc.parseDoc", name = "SCDoc.parseDoc", dscr = "Snippet for SCDoc.parseDoc, auto generated by SCNvim" }, {t("SCDoc.parseDoc"),t("("),t("doc:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.parseAndRender", name = "SCDoc.parseAndRender", dscr = "Snippet for SCDoc.parseAndRender, auto generated by SCNvim" }, {t("SCDoc.parseAndRender"),t("("),t("doc:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.prepareHelpForURL", name = "SCDoc.prepareHelpForURL", dscr = "Snippet for SCDoc.prepareHelpForURL, auto generated by SCNvim" }, {t("SCDoc.prepareHelpForURL"),t("("),t("url:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.initClass", name = "SCDoc.initClass", dscr = "Snippet for SCDoc.initClass, auto generated by SCNvim" }, {t("SCDoc.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.classHasArKrIr", name = "SCDoc.classHasArKrIr", dscr = "Snippet for SCDoc.classHasArKrIr, auto generated by SCNvim" }, {t("SCDoc.classHasArKrIr"),t("("),t("c:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.checkVersion", name = "SCDoc.checkVersion", dscr = "Snippet for SCDoc.checkVersion, auto generated by SCNvim" }, {t("SCDoc.checkVersion"),t("("),t("clearCache:"),i(1, "false"), t(")"),}),
s( {trig = "SCDoc.renderAll", name = "SCDoc.renderAll", dscr = "Snippet for SCDoc.renderAll, auto generated by SCNvim" }, {t("SCDoc.renderAll"),t("("),t("includeExtensions:"),i(1, "true"), t(")"),}),
s( {trig = "SCDoc.makeClassTemplate", name = "SCDoc.makeClassTemplate", dscr = "Snippet for SCDoc.makeClassTemplate, auto generated by SCNvim" }, {t("SCDoc.makeClassTemplate"),t("("),t("doc:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.renderUndocClass", name = "SCDoc.renderUndocClass", dscr = "Snippet for SCDoc.renderUndocClass, auto generated by SCNvim" }, {t("SCDoc.renderUndocClass"),t("("),t("doc:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.getMethodDoc", name = "SCDoc.getMethodDoc", dscr = "Snippet for SCDoc.getMethodDoc, auto generated by SCNvim" }, {t("SCDoc.getMethodDoc"),t("("),t("classname:"),i(1, "nil"),t(", "), t("methodname:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDoc.handleCopyMethods", name = "SCDoc.handleCopyMethods", dscr = "Snippet for SCDoc.handleCopyMethods, auto generated by SCNvim" }, {t("SCDoc.handleCopyMethods"),t("("),t("node:"),i(1, "nil"),t(", "), t("doc:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDoc.findHelpFile", name = "SCDoc.findHelpFile", dscr = "Snippet for SCDoc.findHelpFile, auto generated by SCNvim" }, {t("SCDoc.findHelpFile"),t("("),t("str:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDoc.getOldWrapUrl", name = "SCDoc.getOldWrapUrl", dscr = "Snippet for SCDoc.getOldWrapUrl, auto generated by SCNvim" }, {t("SCDoc.getOldWrapUrl"),t("("),t("url:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDocEntry.new", name = "SCDocEntry.new", dscr = "Snippet for SCDocEntry.new, auto generated by SCNvim" }, {t("SCDocEntry.new"),t("("),t("node:"),i(1, "nil"),t(", "), t("path:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDocEntry.newUndocClass", name = "SCDocEntry.newUndocClass", dscr = "Snippet for SCDocEntry.newUndocClass, auto generated by SCNvim" }, {t("SCDocEntry.newUndocClass"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.escapeSpecialChars", name = "SCDocHTMLRenderer.escapeSpecialChars", dscr = "Snippet for SCDocHTMLRenderer.escapeSpecialChars, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.escapeSpecialChars"),t("("),t("str:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.escapeSpacesInAnchor", name = "SCDocHTMLRenderer.escapeSpacesInAnchor", dscr = "Snippet for SCDocHTMLRenderer.escapeSpacesInAnchor, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.escapeSpacesInAnchor"),t("("),t("str:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.prLinkTargetForInternalLink", name = "SCDocHTMLRenderer.prLinkTargetForInternalLink", dscr = "Snippet for SCDocHTMLRenderer.prLinkTargetForInternalLink, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.prLinkTargetForInternalLink"),t("("),t("linkBase:"),i(1, "nil"),t(", "), t("linkAnchor:"),i(2, "nil"),t(", "), t("originalLink:"),i(3, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.prLinkTargetForExternalLink", name = "SCDocHTMLRenderer.prLinkTargetForExternalLink", dscr = "Snippet for SCDocHTMLRenderer.prLinkTargetForExternalLink, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.prLinkTargetForExternalLink"),t("("),t("linkBase:"),i(1, "nil"),t(", "), t("linkAnchor:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.prLinkTextForInternalLink", name = "SCDocHTMLRenderer.prLinkTextForInternalLink", dscr = "Snippet for SCDocHTMLRenderer.prLinkTextForInternalLink, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.prLinkTextForInternalLink"),t("("),t("linkBase:"),i(1, "nil"),t(", "), t("linkAnchor:"),i(2, "nil"),t(", "), t("linkText:"),i(3, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.htmlForLink", name = "SCDocHTMLRenderer.htmlForLink", dscr = "Snippet for SCDocHTMLRenderer.htmlForLink, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.htmlForLink"),t("("),t("link:"),i(1, "nil"),t(", "), t("escape:"),i(2, "true"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.makeArgString", name = "SCDocHTMLRenderer.makeArgString", dscr = "Snippet for SCDocHTMLRenderer.makeArgString, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.makeArgString"),t("("),t("m:"),i(1, "nil"),t(", "), t("par:"),i(2, "true"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.renderHeader", name = "SCDocHTMLRenderer.renderHeader", dscr = "Snippet for SCDocHTMLRenderer.renderHeader, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.renderHeader"),t("("),t("stream:"),i(1, "nil"),t(", "), t("doc:"),i(2, "nil"),t(", "), t("body:"),i(3, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.renderChildren", name = "SCDocHTMLRenderer.renderChildren", dscr = "Snippet for SCDocHTMLRenderer.renderChildren, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.renderChildren"),t("("),t("stream:"),i(1, "nil"),t(", "), t("node:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.renderMethod", name = "SCDocHTMLRenderer.renderMethod", dscr = "Snippet for SCDocHTMLRenderer.renderMethod, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.renderMethod"),t("("),t("stream:"),i(1, "nil"),t(", "), t("node:"),i(2, "nil"),t(", "), t("methodType:"),i(3, "nil"),t(", "), t("cls:"),i(4, "nil"),t(", "), t("icls:"),i(5, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.renderSubTree", name = "SCDocHTMLRenderer.renderSubTree", dscr = "Snippet for SCDocHTMLRenderer.renderSubTree, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.renderSubTree"),t("("),t("stream:"),i(1, "nil"),t(", "), t("node:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.renderTOC", name = "SCDocHTMLRenderer.renderTOC", dscr = "Snippet for SCDocHTMLRenderer.renderTOC, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.renderTOC"),t("("),t("stream:"),i(1, "nil"),t(", "), t("node:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.addUndocumentedMethods", name = "SCDocHTMLRenderer.addUndocumentedMethods", dscr = "Snippet for SCDocHTMLRenderer.addUndocumentedMethods, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.addUndocumentedMethods"),t("("),t("list:"),i(1, "nil"),t(", "), t("body:"),i(2, "nil"),t(", "), t("id2:"),i(3, "nil"),t(", "), t("id:"),i(4, "nil"),t(", "), t("title:"),i(5, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.renderClassTree", name = "SCDocHTMLRenderer.renderClassTree", dscr = "Snippet for SCDocHTMLRenderer.renderClassTree, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.renderClassTree"),t("("),t("stream:"),i(1, "nil"),t(", "), t("cls:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.renderFootNotes", name = "SCDocHTMLRenderer.renderFootNotes", dscr = "Snippet for SCDocHTMLRenderer.renderFootNotes, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.renderFootNotes"),t("("),t("stream:"),i(1, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.renderFooter", name = "SCDocHTMLRenderer.renderFooter", dscr = "Snippet for SCDocHTMLRenderer.renderFooter, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.renderFooter"),t("("),t("stream:"),i(1, "nil"),t(", "), t("doc:"),i(2, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.renderOnStream", name = "SCDocHTMLRenderer.renderOnStream", dscr = "Snippet for SCDocHTMLRenderer.renderOnStream, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.renderOnStream"),t("("),t("stream:"),i(1, "nil"),t(", "), t("doc:"),i(2, "nil"),t(", "), t("root:"),i(3, "nil"), t(")"),}),
s( {trig = "SCDocHTMLRenderer.renderToFile", name = "SCDocHTMLRenderer.renderToFile", dscr = "Snippet for SCDocHTMLRenderer.renderToFile, auto generated by SCNvim" }, {t("SCDocHTMLRenderer.renderToFile"),t("("),t("filename:"),i(1, "nil"),t(", "), t("doc:"),i(2, "nil"),t(", "), t("root:"),i(3, "nil"), t(")"),}),
s( {trig = "SCNvim.sendJSON", name = "SCNvim.sendJSON", dscr = "Snippet for SCNvim.sendJSON, auto generated by SCNvim" }, {t("SCNvim.sendJSON"),t("("),t("data:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvim.luaeval", name = "SCNvim.luaeval", dscr = "Snippet for SCNvim.luaeval, auto generated by SCNvim" }, {t("SCNvim.luaeval"),t("("),t("luacode:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvim.eval", name = "SCNvim.eval", dscr = "Snippet for SCNvim.eval, auto generated by SCNvim" }, {t("SCNvim.eval"),t("("),t("expr:"),i(1, "nil"),t(", "), t("callback_id:"),i(2, "nil"), t(")"),}),
s( {trig = "SCNvim.updateStatusLine", name = "SCNvim.updateStatusLine", dscr = "Snippet for SCNvim.updateStatusLine, auto generated by SCNvim" }, {t("SCNvim.updateStatusLine"),t("("),t("interval:"),i(1, "1"), t(")"),}),
s( {trig = "SCNvim.generateAssets", name = "SCNvim.generateAssets", dscr = "Snippet for SCNvim.generateAssets, auto generated by SCNvim" }, {t("SCNvim.generateAssets"),t("("),t("cacheDir:"),i(1, "nil"),t(", "), t("snippetFormat:"),i(2, "ultisnips"), t(")"),}),
s( {trig = "SCNvim.generateSyntax", name = "SCNvim.generateSyntax", dscr = "Snippet for SCNvim.generateSyntax, auto generated by SCNvim" }, {t("SCNvim.generateSyntax"),t("("),t("outputPath:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvim.generateTags", name = "SCNvim.generateTags", dscr = "Snippet for SCNvim.generateTags, auto generated by SCNvim" }, {t("SCNvim.generateTags"),t("("),t("outputPath:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvim.generateSnippets", name = "SCNvim.generateSnippets", dscr = "Snippet for SCNvim.generateSnippets, auto generated by SCNvim" }, {t("SCNvim.generateSnippets"),t("("),t("outputPath:"),i(1, "nil"),t(", "), t("snippetFormat:"),i(2, "nil"), t(")"),}),
s( {trig = "SCNvim.getMethodArgs", name = "SCNvim.getMethodArgs", dscr = "Snippet for SCNvim.getMethodArgs, auto generated by SCNvim" }, {t("SCNvim.getMethodArgs"),t("("),t("string:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvim.methodArgs", name = "SCNvim.methodArgs", dscr = "Snippet for SCNvim.methodArgs, auto generated by SCNvim" }, {t("SCNvim.methodArgs"),t("("),t("method:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvim.prepareHelpFor", name = "SCNvim.prepareHelpFor", dscr = "Snippet for SCNvim.prepareHelpFor, auto generated by SCNvim" }, {t("SCNvim.prepareHelpFor"),t("("),t("text:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvim.getHelpUri", name = "SCNvim.getHelpUri", dscr = "Snippet for SCNvim.getHelpUri, auto generated by SCNvim" }, {t("SCNvim.getHelpUri"),t("("),t("subject:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvim.getFileNameFromUri", name = "SCNvim.getFileNameFromUri", dscr = "Snippet for SCNvim.getFileNameFromUri, auto generated by SCNvim" }, {t("SCNvim.getFileNameFromUri"),t("("),t("uri:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvimDoc.exportDocMapJson", name = "SCNvimDoc.exportDocMapJson", dscr = "Snippet for SCNvimDoc.exportDocMapJson, auto generated by SCNvim" }, {t("SCNvimDoc.exportDocMapJson"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvimDoc.parseFileMetaData", name = "SCNvimDoc.parseFileMetaData", dscr = "Snippet for SCNvimDoc.parseFileMetaData, auto generated by SCNvim" }, {t("SCNvimDoc.parseFileMetaData"),t("("),t("dir:"),i(1, "nil"),t(", "), t("path:"),i(2, "nil"), t(")"),}),
s( {trig = "SCNvimDoc.indexAllDocuments", name = "SCNvimDoc.indexAllDocuments", dscr = "Snippet for SCNvimDoc.indexAllDocuments, auto generated by SCNvim" }, {t("SCNvimDoc.indexAllDocuments"),t("("),t("clearCache:"),i(1, "false"), t(")"),}),
s( {trig = "SCNvimDoc.findHelpFile", name = "SCNvimDoc.findHelpFile", dscr = "Snippet for SCNvimDoc.findHelpFile, auto generated by SCNvim" }, {t("SCNvimDoc.findHelpFile"),t("("),t("str:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvimDoc.prepareHelpForURL", name = "SCNvimDoc.prepareHelpForURL", dscr = "Snippet for SCNvimDoc.prepareHelpForURL, auto generated by SCNvim" }, {t("SCNvimDoc.prepareHelpForURL"),t("("),t("url:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvimDocRenderer.renderTOC", name = "SCNvimDocRenderer.renderTOC", dscr = "Snippet for SCNvimDocRenderer.renderTOC, auto generated by SCNvim" }, {t("SCNvimDocRenderer.renderTOC"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvimDocRenderer.renderHeader", name = "SCNvimDocRenderer.renderHeader", dscr = "Snippet for SCNvimDocRenderer.renderHeader, auto generated by SCNvim" }, {t("SCNvimDocRenderer.renderHeader"),t("("),t("stream:"),i(1, "nil"),t(", "), t("doc:"),i(2, "nil"),t(", "), t("body:"),i(3, "nil"), t(")"),}),
s( {trig = "SCNvimDocRenderer.renderFooter", name = "SCNvimDocRenderer.renderFooter", dscr = "Snippet for SCNvimDocRenderer.renderFooter, auto generated by SCNvim" }, {t("SCNvimDocRenderer.renderFooter"),t("("),t("stream:"),i(1, "nil"),t(", "), t("doc:"),i(2, "nil"), t(")"),}),
s( {trig = "SCNvimDocRenderer.renderMethod", name = "SCNvimDocRenderer.renderMethod", dscr = "Snippet for SCNvimDocRenderer.renderMethod, auto generated by SCNvim" }, {t("SCNvimDocRenderer.renderMethod"),t("("),t("stream:"),i(1, "nil"),t(", "), t("node:"),i(2, "nil"),t(", "), t("methodType:"),i(3, "nil"),t(", "), t("cls:"),i(4, "nil"),t(", "), t("icls:"),i(5, "nil"), t(")"),}),
s( {trig = "SCNvimDocRenderer.renderSubTree", name = "SCNvimDocRenderer.renderSubTree", dscr = "Snippet for SCNvimDocRenderer.renderSubTree, auto generated by SCNvim" }, {t("SCNvimDocRenderer.renderSubTree"),t("("),t("stream:"),i(1, "nil"),t(", "), t("node:"),i(2, "nil"), t(")"),}),
s( {trig = "SCNvimJSON.initClass", name = "SCNvimJSON.initClass", dscr = "Snippet for SCNvimJSON.initClass, auto generated by SCNvim" }, {t("SCNvimJSON.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvimJSON.stringify", name = "SCNvimJSON.stringify", dscr = "Snippet for SCNvimJSON.stringify, auto generated by SCNvim" }, {t("SCNvimJSON.stringify"),t("("),t("object:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvimJSON.parse", name = "SCNvimJSON.parse", dscr = "Snippet for SCNvimJSON.parse, auto generated by SCNvim" }, {t("SCNvimJSON.parse"),t("("),t("string:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvimJSON.prParseRecursive", name = "SCNvimJSON.prParseRecursive", dscr = "Snippet for SCNvimJSON.prParseRecursive, auto generated by SCNvim" }, {t("SCNvimJSON.prParseRecursive"),t("("),t("object:"),i(1, "nil"), t(")"),}),
s( {trig = "SCNvimJSON.prAddAssoc", name = "SCNvimJSON.prAddAssoc", dscr = "Snippet for SCNvimJSON.prAddAssoc, auto generated by SCNvim" }, {t("SCNvimJSON.prAddAssoc"),t("("),t("key:"),i(1, "nil"),t(", "), t("value:"),i(2, "nil"),t(", "), t("isLastItem:"),i(3, "nil"), t(")"),}),
s( {trig = "SCScope.qtClass", name = "SCScope.qtClass", dscr = "Snippet for SCScope.qtClass, auto generated by SCNvim" }, {t("SCScope.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SLOnset.kr", name = "SLOnset.kr", dscr = "Snippet for SLOnset.kr, auto generated by SCNvim" }, {t("SLOnset.kr"),t("("),t("input:"),i(1, "nil"),t(", "), t("memorysize1:"),i(2, "20"),t(", "), t("before:"),i(3, "5"),t(", "), t("after:"),i(4, "5"),t(", "), t("threshold:"),i(5, "10"),t(", "), t("hysteresis:"),i(6, "10"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "SMS.ar", name = "SMS.ar", dscr = "Snippet for SMS.ar, auto generated by SCNvim" }, {t("SMS.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("maxpeaks:"),i(2, "80"),t(", "), t("currentpeaks:"),i(3, "80"),t(", "), t("tolerance:"),i(4, "4"),t(", "), t("noisefloor:"),i(5, "0.2"),t(", "), t("freqmult:"),i(6, "1.0"),t(", "), t("freqadd:"),i(7, "0.0"),t(", "), t("formantpreserve:"),i(8, "0"),t(", "), t("useifft:"),i(9, "0"),t(", "), t("ampmult:"),i(10, "1.0"),t(", "), t("graphicsbufnum:"),i(11, "nil"),t(", "), t("mul:"),i(12, "1.0"),t(", "), t("add:"),i(13, "0.0"), t(")"),}),
s( {trig = "SOMAreaWr.kr", name = "SOMAreaWr.kr", dscr = "Snippet for SOMAreaWr.kr, auto generated by SCNvim" }, {t("SOMAreaWr.kr"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("inputdata:"),i(2, "nil"),t(", "), t("coords:"),i(3, "nil"),t(", "), t("netsize:"),i(4, "10"),t(", "), t("numdims:"),i(5, "2"),t(", "), t("nhood:"),i(6, "0.5"),t(", "), t("gate:"),i(7, "1"), t(")"),}),
s( {trig = "SOMRd.kr", name = "SOMRd.kr", dscr = "Snippet for SOMRd.kr, auto generated by SCNvim" }, {t("SOMRd.kr"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("inputdata:"),i(2, "nil"),t(", "), t("netsize:"),i(3, "10"),t(", "), t("numdims:"),i(4, "2"),t(", "), t("gate:"),i(5, "1"), t(")"),}),
s( {trig = "SOMRd.ar", name = "SOMRd.ar", dscr = "Snippet for SOMRd.ar, auto generated by SCNvim" }, {t("SOMRd.ar"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("inputdata:"),i(2, "nil"),t(", "), t("netsize:"),i(3, "10"),t(", "), t("numdims:"),i(4, "2"),t(", "), t("gate:"),i(5, "1"), t(")"),}),
s( {trig = "SOMRd.coordsToBufIndex", name = "SOMRd.coordsToBufIndex", dscr = "Snippet for SOMRd.coordsToBufIndex, auto generated by SCNvim" }, {t("SOMRd.coordsToBufIndex"),t("("),t("coords:"),i(1, "nil"),t(", "), t("netsize:"),i(2, "10"), t(")"),}),
s( {trig = "SOMRd.bufIndexToCoords", name = "SOMRd.bufIndexToCoords", dscr = "Snippet for SOMRd.bufIndexToCoords, auto generated by SCNvim" }, {t("SOMRd.bufIndexToCoords"),t("("),t("bufindex:"),i(1, "nil"),t(", "), t("netsize:"),i(2, "10"),t(", "), t("numdims:"),i(3, "3"), t(")"),}),
s( {trig = "SOMTrain.kr", name = "SOMTrain.kr", dscr = "Snippet for SOMTrain.kr, auto generated by SCNvim" }, {t("SOMTrain.kr"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("inputdata:"),i(2, "nil"),t(", "), t("netsize:"),i(3, "10"),t(", "), t("numdims:"),i(4, "2"),t(", "), t("traindur:"),i(5, "5000"),t(", "), t("nhood:"),i(6, "0.5"),t(", "), t("gate:"),i(7, "1"),t(", "), t("initweight:"),i(8, "1"), t(")"),}),
s( {trig = "SOMTrain.categories", name = "SOMTrain.categories", dscr = "Snippet for SOMTrain.categories, auto generated by SCNvim" }, {t("SOMTrain.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SOMTrain.allocBuf", name = "SOMTrain.allocBuf", dscr = "Snippet for SOMTrain.allocBuf, auto generated by SCNvim" }, {t("SOMTrain.allocBuf"),t("("),t("server:"),i(1, "nil"),t(", "), t("netsize:"),i(2, "nil"),t(", "), t("numdims:"),i(3, "nil"),t(", "), t("numinputchannels:"),i(4, "nil"),t(", "), t("init:"),i(5, "nil"), t(")"),}),
s( {trig = "SOMTrain.initBufRand", name = "SOMTrain.initBufRand", dscr = "Snippet for SOMTrain.initBufRand, auto generated by SCNvim" }, {t("SOMTrain.initBufRand"),t("("),t("buf:"),i(1, "nil"),t(", "), t("minval:"),i(2, "-1"),t(", "), t("maxval:"),i(3, "1"), t(")"),}),
s( {trig = "SOMTrain.initBufGrid", name = "SOMTrain.initBufGrid", dscr = "Snippet for SOMTrain.initBufGrid, auto generated by SCNvim" }, {t("SOMTrain.initBufGrid"),t("("),t("buf:"),i(1, "nil"),t(", "), t("netsize:"),i(2, "nil"),t(", "), t("numdims:"),i(3, "nil"),t(", "), t("spinmatrix:"),i(4, "nil"),t(", "), t("offsets:"),i(5, "0"),t(", "), t("scales:"),i(6, "1"), t(")"),}),
s( {trig = "SOMTrain.makeGrid", name = "SOMTrain.makeGrid", dscr = "Snippet for SOMTrain.makeGrid, auto generated by SCNvim" }, {t("SOMTrain.makeGrid"),t("("),t("numchans:"),i(1, "nil"),t(", "), t("netsize:"),i(2, "nil"),t(", "), t("numdims:"),i(3, "nil"),t(", "), t("spinmatrix:"),i(4, "nil"),t(", "), t("offsets:"),i(5, "0"),t(", "), t("scales:"),i(6, "1"), t(")"),}),
s( {trig = "SOMTrain.initBufGridRand", name = "SOMTrain.initBufGridRand", dscr = "Snippet for SOMTrain.initBufGridRand, auto generated by SCNvim" }, {t("SOMTrain.initBufGridRand"),t("("),t("buf:"),i(1, "nil"),t(", "), t("netsize:"),i(2, "nil"),t(", "), t("numdims:"),i(3, "nil"),t(", "), t("offsets:"),i(4, "0"),t(", "), t("scales:"),i(5, "1"), t(")"),}),
s( {trig = "SOMTrain.pr_makegrid", name = "SOMTrain.pr_makegrid", dscr = "Snippet for SOMTrain.pr_makegrid, auto generated by SCNvim" }, {t("SOMTrain.pr_makegrid"),t("("),t("from:"),i(1, "nil"),t(", "), t("step:"),i(2, "nil"),t(", "), t("to:"),i(3, "nil"),t(", "), t("dims:"),i(4, "nil"), t(")"),}),
s( {trig = "SOMTrain.trainFromFile", name = "SOMTrain.trainFromFile", dscr = "Snippet for SOMTrain.trainFromFile, auto generated by SCNvim" }, {t("SOMTrain.trainFromFile"),t("("),t("path:"),i(1, "nil"),t(", "), t("init:"),i(2, "gridrand"),t(", "), t("numdims:"),i(3, "2"),t(", "), t("netsize:"),i(4, "10"),t(", "), t("numruns:"),i(5, "1"),t(", "), t("server:"),i(6, "nil"),t(", "), t("action:"),i(7, "nil"),t(", "), t("nhood:"),i(8, "0.5"),t(", "), t("initweight:"),i(9, "1"), t(")"),}),
s( {trig = "SOS.ar", name = "SOS.ar", dscr = "Snippet for SOS.ar, auto generated by SCNvim" }, {t("SOS.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("a0:"),i(2, "0.0"),t(", "), t("a1:"),i(3, "0.0"),t(", "), t("a2:"),i(4, "0.0"),t(", "), t("b1:"),i(5, "0.0"),t(", "), t("b2:"),i(6, "0.0"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "SOS.kr", name = "SOS.kr", dscr = "Snippet for SOS.kr, auto generated by SCNvim" }, {t("SOS.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("a0:"),i(2, "0.0"),t(", "), t("a1:"),i(3, "0.0"),t(", "), t("a2:"),i(4, "0.0"),t(", "), t("b1:"),i(5, "0.0"),t(", "), t("b2:"),i(6, "0.0"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "SVF.ar", name = "SVF.ar", dscr = "Snippet for SVF.ar, auto generated by SCNvim" }, {t("SVF.ar"),t("("),t("signal:"),i(1, "nil"),t(", "), t("cutoff:"),i(2, "2200.0"),t(", "), t("res:"),i(3, "0.1"),t(", "), t("lowpass:"),i(4, "1.0"),t(", "), t("bandpass:"),i(5, "0.0"),t(", "), t("highpass:"),i(6, "0.0"),t(", "), t("notch:"),i(7, "0.0"),t(", "), t("peak:"),i(8, "0.0"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "SVF.kr", name = "SVF.kr", dscr = "Snippet for SVF.kr, auto generated by SCNvim" }, {t("SVF.kr"),t("("),t("signal:"),i(1, "nil"),t(", "), t("cutoff:"),i(2, "2200.0"),t(", "), t("res:"),i(3, "0.1"),t(", "), t("lowpass:"),i(4, "1.0"),t(", "), t("bandpass:"),i(5, "0.0"),t(", "), t("highpass:"),i(6, "0.0"),t(", "), t("notch:"),i(7, "0.0"),t(", "), t("peak:"),i(8, "0.0"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "Sanitize.ar", name = "Sanitize.ar", dscr = "Snippet for Sanitize.ar, auto generated by SCNvim" }, {t("Sanitize.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("replace:"),i(2, "0.0"), t(")"),}),
s( {trig = "Sanitize.kr", name = "Sanitize.kr", dscr = "Snippet for Sanitize.kr, auto generated by SCNvim" }, {t("Sanitize.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("replace:"),i(2, "0.0"), t(")"),}),
s( {trig = "Saw.ar", name = "Saw.ar", dscr = "Snippet for Saw.ar, auto generated by SCNvim" }, {t("Saw.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Saw.kr", name = "Saw.kr", dscr = "Snippet for Saw.kr, auto generated by SCNvim" }, {t("Saw.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "SawDPW.ar", name = "SawDPW.ar", dscr = "Snippet for SawDPW.ar, auto generated by SCNvim" }, {t("SawDPW.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("iphase:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "SawDPW.kr", name = "SawDPW.kr", dscr = "Snippet for SawDPW.kr, auto generated by SCNvim" }, {t("SawDPW.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("iphase:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Scale.new", name = "Scale.new", dscr = "Snippet for Scale.new, auto generated by SCNvim" }, {t("Scale.new"),t("("),t("degrees:"),i(1, "ionian"),t(", "), t("pitchesPerOctave:"),i(2, "nil"),t(", "), t("tuning:"),i(3, "nil"),t(", "), t("name:"),i(4, "UnknownScale"), t(")"),}),
s( {trig = "Scale.at", name = "Scale.at", dscr = "Snippet for Scale.at, auto generated by SCNvim" }, {t("Scale.at"),t("("),t("key:"),i(1, "nil"), t(")"),}),
s( {trig = "Scale.doesNotUnderstand", name = "Scale.doesNotUnderstand", dscr = "Snippet for Scale.doesNotUnderstand, auto generated by SCNvim" }, {t("Scale.doesNotUnderstand"),t("("),t("selector:"),i(1, "nil"),t(", "), t("args:"),i(2, "nil"), t(")"),}),
s( {trig = "Scale.newFromKey", name = "Scale.newFromKey", dscr = "Snippet for Scale.newFromKey, auto generated by SCNvim" }, {t("Scale.newFromKey"),t("("),t("key:"),i(1, "nil"),t(", "), t("tuning:"),i(2, "nil"), t(")"),}),
s( {trig = "Scale.chromatic", name = "Scale.chromatic", dscr = "Snippet for Scale.chromatic, auto generated by SCNvim" }, {t("Scale.chromatic"),t("("),t("tuning:"),i(1, "et12"), t(")"),}),
s( {trig = "Scale.choose", name = "Scale.choose", dscr = "Snippet for Scale.choose, auto generated by SCNvim" }, {t("Scale.choose"),t("("),t("size:"),i(1, "7"),t(", "), t("pitchesPerOctave:"),i(2, "12"), t(")"),}),
s( {trig = "Scale.chooseFromSelected", name = "Scale.chooseFromSelected", dscr = "Snippet for Scale.chooseFromSelected, auto generated by SCNvim" }, {t("Scale.chooseFromSelected"),t("("),t("selectFunc:"),i(1, "nil"), t(")"),}),
s( {trig = "Scale.names", name = "Scale.names", dscr = "Snippet for Scale.names, auto generated by SCNvim" }, {t("Scale.names"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Scale.directory", name = "Scale.directory", dscr = "Snippet for Scale.directory, auto generated by SCNvim" }, {t("Scale.directory"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Scale.initClass", name = "Scale.initClass", dscr = "Snippet for Scale.initClass, auto generated by SCNvim" }, {t("Scale.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ScaleAD.new", name = "ScaleAD.new", dscr = "Snippet for ScaleAD.new, auto generated by SCNvim" }, {t("ScaleAD.new"),t("("),t("degrees:"),i(1, "nil"),t(", "), t("pitchesPerOctave:"),i(2, "nil"),t(", "), t("descDegrees:"),i(3, "nil"),t(", "), t("tuning:"),i(4, "nil"),t(", "), t("name:"),i(5, "UnknownScale"), t(")"),}),
s( {trig = "ScaleLP.new", name = "ScaleLP.new", dscr = "Snippet for ScaleLP.new, auto generated by SCNvim" }, {t("ScaleLP.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ScaleStream.new", name = "ScaleStream.new", dscr = "Snippet for ScaleStream.new, auto generated by SCNvim" }, {t("ScaleStream.new"),t("("),t("scale:"),i(1, "nil"),t(", "), t("startDegree:"),i(2, "0"), t(")"),}),
s( {trig = "ScatterView.new", name = "ScatterView.new", dscr = "Snippet for ScatterView.new, auto generated by SCNvim" }, {t("ScatterView.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("data:"),i(3, "nil"),t(", "), t("specX:"),i(4, "nil"),t(", "), t("specY:"),i(5, "nil"), t(")"),}),
s( {trig = "ScatterView2.new", name = "ScatterView2.new", dscr = "Snippet for ScatterView2.new, auto generated by SCNvim" }, {t("ScatterView2.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("data:"),i(3, "nil"),t(", "), t("specX:"),i(4, "nil"),t(", "), t("specY:"),i(5, "nil"), t(")"),}),
s( {trig = "ScatterView3d.new", name = "ScatterView3d.new", dscr = "Snippet for ScatterView3d.new, auto generated by SCNvim" }, {t("ScatterView3d.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("data:"),i(3, "nil"),t(", "), t("specX:"),i(4, "nil"),t(", "), t("specY:"),i(5, "nil"),t(", "), t("specZ:"),i(6, "nil"),t(", "), t("rotX:"),i(7, "0"),t(", "), t("rotY:"),i(8, "0"),t(", "), t("rotZ:"),i(9, "0"), t(")"),}),
s( {trig = "Scheduler.new", name = "Scheduler.new", dscr = "Snippet for Scheduler.new, auto generated by SCNvim" }, {t("Scheduler.new"),t("("),t("clock:"),i(1, "nil"),t(", "), t("drift:"),i(2, "false"),t(", "), t("recursive:"),i(3, "true"), t(")"),}),
s( {trig = "ScopeBuffer.alloc", name = "ScopeBuffer.alloc", dscr = "Snippet for ScopeBuffer.alloc, auto generated by SCNvim" }, {t("ScopeBuffer.alloc"),t("("),t("server:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "1"), t(")"),}),
s( {trig = "ScopeBuffer.new", name = "ScopeBuffer.new", dscr = "Snippet for ScopeBuffer.new, auto generated by SCNvim" }, {t("ScopeBuffer.new"),t("("),t("index:"),i(1, "0"),t(", "), t("numChannels:"),i(2, "1"),t(", "), t("server:"),i(3, "nil"), t(")"),}),
s( {trig = "ScopeOut.ar", name = "ScopeOut.ar", dscr = "Snippet for ScopeOut.ar, auto generated by SCNvim" }, {t("ScopeOut.ar"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"), t(")"),}),
s( {trig = "ScopeOut.kr", name = "ScopeOut.kr", dscr = "Snippet for ScopeOut.kr, auto generated by SCNvim" }, {t("ScopeOut.kr"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "0"), t(")"),}),
s( {trig = "ScopeOut2.ar", name = "ScopeOut2.ar", dscr = "Snippet for ScopeOut2.ar, auto generated by SCNvim" }, {t("ScopeOut2.ar"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("scopeNum:"),i(2, "0"),t(", "), t("maxFrames:"),i(3, "4096"),t(", "), t("scopeFrames:"),i(4, "nil"), t(")"),}),
s( {trig = "ScopeOut2.kr", name = "ScopeOut2.kr", dscr = "Snippet for ScopeOut2.kr, auto generated by SCNvim" }, {t("ScopeOut2.kr"),t("("),t("inputArray:"),i(1, "nil"),t(", "), t("scopeNum:"),i(2, "0"),t(", "), t("maxFrames:"),i(3, "4096"),t(", "), t("scopeFrames:"),i(4, "nil"), t(")"),}),
s( {trig = "ScopeView.qtClass", name = "ScopeView.qtClass", dscr = "Snippet for ScopeView.qtClass, auto generated by SCNvim" }, {t("ScopeView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Score.initClass", name = "Score.initClass", dscr = "Snippet for Score.initClass, auto generated by SCNvim" }, {t("Score.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Score.new", name = "Score.new", dscr = "Snippet for Score.new, auto generated by SCNvim" }, {t("Score.new"),t("("),t("list:"),i(1, "nil"), t(")"),}),
s( {trig = "Score.newFromFile", name = "Score.newFromFile", dscr = "Snippet for Score.newFromFile, auto generated by SCNvim" }, {t("Score.newFromFile"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "Score.playFromFile", name = "Score.playFromFile", dscr = "Snippet for Score.playFromFile, auto generated by SCNvim" }, {t("Score.playFromFile"),t("("),t("path:"),i(1, "nil"),t(", "), t("server:"),i(2, "nil"), t(")"),}),
s( {trig = "Score.play", name = "Score.play", dscr = "Snippet for Score.play, auto generated by SCNvim" }, {t("Score.play"),t("("),t("list:"),i(1, "nil"),t(", "), t("server:"),i(2, "nil"), t(")"),}),
s( {trig = "Score.recordNRT", name = "Score.recordNRT", dscr = "Snippet for Score.recordNRT, auto generated by SCNvim" }, {t("Score.recordNRT"),t("("),t("list:"),i(1, "nil"),t(", "), t("oscFilePath:"),i(2, "nil"),t(", "), t("outputFilePath:"),i(3, "nil"),t(", "), t("inputFilePath:"),i(4, "nil"),t(", "), t("sampleRate:"),i(5, "44100"),t(", "), t("headerFormat:"),i(6, "AIFF"),t(", "), t("sampleFormat:"),i(7, "int16"),t(", "), t("options:"),i(8, "nil"),t(", "), t("completionString:"),i(9, ""),t(", "), t("duration:"),i(10, "nil"),t(", "), t("action:"),i(11, "nil"), t(")"),}),
s( {trig = "Score.writeFromFile", name = "Score.writeFromFile", dscr = "Snippet for Score.writeFromFile, auto generated by SCNvim" }, {t("Score.writeFromFile"),t("("),t("path:"),i(1, "nil"),t(", "), t("oscFilePath:"),i(2, "nil"),t(", "), t("clock:"),i(3, "nil"), t(")"),}),
s( {trig = "Score.write", name = "Score.write", dscr = "Snippet for Score.write, auto generated by SCNvim" }, {t("Score.write"),t("("),t("list:"),i(1, "nil"),t(", "), t("oscFilePath:"),i(2, "nil"),t(", "), t("clock:"),i(3, "nil"), t(")"),}),
s( {trig = "ScoreStreamPlayer.new", name = "ScoreStreamPlayer.new", dscr = "Snippet for ScoreStreamPlayer.new, auto generated by SCNvim" }, {t("ScoreStreamPlayer.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ScrollCanvas.qtClass", name = "ScrollCanvas.qtClass", dscr = "Snippet for ScrollCanvas.qtClass, auto generated by SCNvim" }, {t("ScrollCanvas.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ScrollTopView.qtClass", name = "ScrollTopView.qtClass", dscr = "Snippet for ScrollTopView.qtClass, auto generated by SCNvim" }, {t("ScrollTopView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ScrollTopView.new", name = "ScrollTopView.new", dscr = "Snippet for ScrollTopView.new, auto generated by SCNvim" }, {t("ScrollTopView.new"),t("("),t("win:"),i(1, "nil"),t(", "), t("name:"),i(2, "nil"),t(", "), t("bounds:"),i(3, "nil"),t(", "), t("resizable:"),i(4, "nil"),t(", "), t("border:"),i(5, "nil"), t(")"),}),
s( {trig = "ScrollView.new", name = "ScrollView.new", dscr = "Snippet for ScrollView.new, auto generated by SCNvim" }, {t("ScrollView.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "ScrollView.qtClass", name = "ScrollView.qtClass", dscr = "Snippet for ScrollView.qtClass, auto generated by SCNvim" }, {t("ScrollView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Select.ar", name = "Select.ar", dscr = "Snippet for Select.ar, auto generated by SCNvim" }, {t("Select.ar"),t("("),t("which:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"), t(")"),}),
s( {trig = "Select.kr", name = "Select.kr", dscr = "Snippet for Select.kr, auto generated by SCNvim" }, {t("Select.kr"),t("("),t("which:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"), t(")"),}),
s( {trig = "SelectX.new1", name = "SelectX.new1", dscr = "Snippet for SelectX.new1, auto generated by SCNvim" }, {t("SelectX.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("which:"),i(2, "nil"),t(", "), t("array:"),i(3, "nil"), t(")"),}),
s( {trig = "SelectX.ar", name = "SelectX.ar", dscr = "Snippet for SelectX.ar, auto generated by SCNvim" }, {t("SelectX.ar"),t("("),t("which:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"),t(", "), t("wrap:"),i(3, "1"), t(")"),}),
s( {trig = "SelectX.kr", name = "SelectX.kr", dscr = "Snippet for SelectX.kr, auto generated by SCNvim" }, {t("SelectX.kr"),t("("),t("which:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"),t(", "), t("wrap:"),i(3, "1"), t(")"),}),
s( {trig = "SelectX.crossfadeClass", name = "SelectX.crossfadeClass", dscr = "Snippet for SelectX.crossfadeClass, auto generated by SCNvim" }, {t("SelectX.crossfadeClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SelectXFocus.new", name = "SelectXFocus.new", dscr = "Snippet for SelectXFocus.new, auto generated by SCNvim" }, {t("SelectXFocus.new"),t("("),t("which:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"),t(", "), t("focus:"),i(3, "1"),t(", "), t("wrap:"),i(4, "false"), t(")"),}),
s( {trig = "SelectXFocus.ar", name = "SelectXFocus.ar", dscr = "Snippet for SelectXFocus.ar, auto generated by SCNvim" }, {t("SelectXFocus.ar"),t("("),t("which:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"),t(", "), t("focus:"),i(3, "1"),t(", "), t("wrap:"),i(4, "false"), t(")"),}),
s( {trig = "SelectXFocus.kr", name = "SelectXFocus.kr", dscr = "Snippet for SelectXFocus.kr, auto generated by SCNvim" }, {t("SelectXFocus.kr"),t("("),t("which:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"),t(", "), t("focus:"),i(3, "1"),t(", "), t("wrap:"),i(4, "false"), t(")"),}),
s( {trig = "Semaphore.new", name = "Semaphore.new", dscr = "Snippet for Semaphore.new, auto generated by SCNvim" }, {t("Semaphore.new"),t("("),t("count:"),i(1, "1"), t(")"),}),
s( {trig = "SendPeakRMS.kr", name = "SendPeakRMS.kr", dscr = "Snippet for SendPeakRMS.kr, auto generated by SCNvim" }, {t("SendPeakRMS.kr"),t("("),t("sig:"),i(1, "nil"),t(", "), t("replyRate:"),i(2, "20.0"),t(", "), t("peakLag:"),i(3, "3"),t(", "), t("cmdName:"),i(4, "/reply"),t(", "), t("replyID:"),i(5, "-1"), t(")"),}),
s( {trig = "SendPeakRMS.ar", name = "SendPeakRMS.ar", dscr = "Snippet for SendPeakRMS.ar, auto generated by SCNvim" }, {t("SendPeakRMS.ar"),t("("),t("sig:"),i(1, "nil"),t(", "), t("replyRate:"),i(2, "20.0"),t(", "), t("peakLag:"),i(3, "3"),t(", "), t("cmdName:"),i(4, "/reply"),t(", "), t("replyID:"),i(5, "-1"), t(")"),}),
s( {trig = "SendPeakRMS.new1", name = "SendPeakRMS.new1", dscr = "Snippet for SendPeakRMS.new1, auto generated by SCNvim" }, {t("SendPeakRMS.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("sig:"),i(2, "nil"),t(", "), t("replyRate:"),i(3, "nil"),t(", "), t("peakLag:"),i(4, "nil"),t(", "), t("cmdName:"),i(5, "nil"),t(", "), t("replyID:"),i(6, "nil"), t(")"),}),
s( {trig = "SendReply.kr", name = "SendReply.kr", dscr = "Snippet for SendReply.kr, auto generated by SCNvim" }, {t("SendReply.kr"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("cmdName:"),i(2, "/reply"),t(", "), t("values:"),i(3, "nil"),t(", "), t("replyID:"),i(4, "-1"), t(")"),}),
s( {trig = "SendReply.ar", name = "SendReply.ar", dscr = "Snippet for SendReply.ar, auto generated by SCNvim" }, {t("SendReply.ar"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("cmdName:"),i(2, "/reply"),t(", "), t("values:"),i(3, "nil"),t(", "), t("replyID:"),i(4, "-1"), t(")"),}),
s( {trig = "SendReply.new1", name = "SendReply.new1", dscr = "Snippet for SendReply.new1, auto generated by SCNvim" }, {t("SendReply.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("trig:"),i(2, "0.0"),t(", "), t("cmdName:"),i(3, "/reply"),t(", "), t("values:"),i(4, "nil"),t(", "), t("replyID:"),i(5, "-1"), t(")"),}),
s( {trig = "SendTrig.ar", name = "SendTrig.ar", dscr = "Snippet for SendTrig.ar, auto generated by SCNvim" }, {t("SendTrig.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("id:"),i(2, "0"),t(", "), t("value:"),i(3, "0.0"), t(")"),}),
s( {trig = "SendTrig.kr", name = "SendTrig.kr", dscr = "Snippet for SendTrig.kr, auto generated by SCNvim" }, {t("SendTrig.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("id:"),i(2, "0"),t(", "), t("value:"),i(3, "0.0"), t(")"),}),
s( {trig = "SensoryDissonance.kr", name = "SensoryDissonance.kr", dscr = "Snippet for SensoryDissonance.kr, auto generated by SCNvim" }, {t("SensoryDissonance.kr"),t("("),t("fft:"),i(1, "nil"),t(", "), t("maxpeaks:"),i(2, "100"),t(", "), t("peakthreshold:"),i(3, "0.1"),t(", "), t("norm:"),i(4, "nil"),t(", "), t("clamp:"),i(5, "1.0"), t(")"),}),
s( {trig = "SequenceableCollection.series", name = "SequenceableCollection.series", dscr = "Snippet for SequenceableCollection.series, auto generated by SCNvim" }, {t("SequenceableCollection.series"),t("("),t("size:"),i(1, "nil"),t(", "), t("start:"),i(2, "0"),t(", "), t("step:"),i(3, "1"), t(")"),}),
s( {trig = "SequenceableCollection.geom", name = "SequenceableCollection.geom", dscr = "Snippet for SequenceableCollection.geom, auto generated by SCNvim" }, {t("SequenceableCollection.geom"),t("("),t("size:"),i(1, "nil"),t(", "), t("start:"),i(2, "nil"),t(", "), t("grow:"),i(3, "nil"), t(")"),}),
s( {trig = "SequenceableCollection.fib", name = "SequenceableCollection.fib", dscr = "Snippet for SequenceableCollection.fib, auto generated by SCNvim" }, {t("SequenceableCollection.fib"),t("("),t("size:"),i(1, "nil"),t(", "), t("a:"),i(2, "0.0"),t(", "), t("b:"),i(3, "1.0"), t(")"),}),
s( {trig = "SequenceableCollection.rand", name = "SequenceableCollection.rand", dscr = "Snippet for SequenceableCollection.rand, auto generated by SCNvim" }, {t("SequenceableCollection.rand"),t("("),t("size:"),i(1, "nil"),t(", "), t("minVal:"),i(2, "nil"),t(", "), t("maxVal:"),i(3, "nil"), t(")"),}),
s( {trig = "SequenceableCollection.exprand", name = "SequenceableCollection.exprand", dscr = "Snippet for SequenceableCollection.exprand, auto generated by SCNvim" }, {t("SequenceableCollection.exprand"),t("("),t("size:"),i(1, "nil"),t(", "), t("minVal:"),i(2, "nil"),t(", "), t("maxVal:"),i(3, "nil"), t(")"),}),
s( {trig = "SequenceableCollection.rand2", name = "SequenceableCollection.rand2", dscr = "Snippet for SequenceableCollection.rand2, auto generated by SCNvim" }, {t("SequenceableCollection.rand2"),t("("),t("size:"),i(1, "nil"),t(", "), t("val:"),i(2, "nil"), t(")"),}),
s( {trig = "SequenceableCollection.linrand", name = "SequenceableCollection.linrand", dscr = "Snippet for SequenceableCollection.linrand, auto generated by SCNvim" }, {t("SequenceableCollection.linrand"),t("("),t("size:"),i(1, "nil"),t(", "), t("minVal:"),i(2, "nil"),t(", "), t("maxVal:"),i(3, "nil"), t(")"),}),
s( {trig = "SequenceableCollection.interpolation", name = "SequenceableCollection.interpolation", dscr = "Snippet for SequenceableCollection.interpolation, auto generated by SCNvim" }, {t("SequenceableCollection.interpolation"),t("("),t("size:"),i(1, "nil"),t(", "), t("start:"),i(2, "0.0"),t(", "), t("end:"),i(3, "1.0"), t(")"),}),
s( {trig = "SequenceableCollection.streamContents", name = "SequenceableCollection.streamContents", dscr = "Snippet for SequenceableCollection.streamContents, auto generated by SCNvim" }, {t("SequenceableCollection.streamContents"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "SequenceableCollection.streamContentsLimit", name = "SequenceableCollection.streamContentsLimit", dscr = "Snippet for SequenceableCollection.streamContentsLimit, auto generated by SCNvim" }, {t("SequenceableCollection.streamContentsLimit"),t("("),t("function:"),i(1, "nil"),t(", "), t("limit:"),i(2, "2000"), t(")"),}),
s( {trig = "SequenceableCollection.newFromFile", name = "SequenceableCollection.newFromFile", dscr = "Snippet for SequenceableCollection.newFromFile, auto generated by SCNvim" }, {t("SequenceableCollection.newFromFile"),t("("),t("path:"),i(1, "nil"),t(", "), t("columnSeparator:"),i(2, ""),t(", "), t("rowSeparator:"),i(3, ""), t(")"),}),
s( {trig = "SequenceableCollection.tuningScale", name = "SequenceableCollection.tuningScale", dscr = "Snippet for SequenceableCollection.tuningScale, auto generated by SCNvim" }, {t("SequenceableCollection.tuningScale"),t("("),t("rootFreq:"),i(1, "440"),t(", "), t("stepRatios:"),i(2, "[1.5"),t(", "), t("2]:"),i(3, "nil"),t(", "), t("loFreqBound:"),i(4, "20"),t(", "), t("hiFreqBound:"),i(5, "20000"), t(")"),}),
s( {trig = "SequenceableCollection.meshgrid", name = "SequenceableCollection.meshgrid", dscr = "Snippet for SequenceableCollection.meshgrid, auto generated by SCNvim" }, {t("SequenceableCollection.meshgrid"),t("("),t("arrays:"),i(1, "nil"), t(")"),}),
s( {trig = "SerialPort.initClass", name = "SerialPort.initClass", dscr = "Snippet for SerialPort.initClass, auto generated by SCNvim" }, {t("SerialPort.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SerialPort.devices", name = "SerialPort.devices", dscr = "Snippet for SerialPort.devices, auto generated by SCNvim" }, {t("SerialPort.devices"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SerialPort.listDevices", name = "SerialPort.listDevices", dscr = "Snippet for SerialPort.listDevices, auto generated by SCNvim" }, {t("SerialPort.listDevices"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SerialPort.new", name = "SerialPort.new", dscr = "Snippet for SerialPort.new, auto generated by SCNvim" }, {t("SerialPort.new"),t("("),t("port:"),i(1, "nil"),t(", "), t("baudrate:"),i(2, "9600"),t(", "), t("databits:"),i(3, "8"),t(", "), t("stopbit:"),i(4, "true"),t(", "), t("parity:"),i(5, "nil"),t(", "), t("crtscts:"),i(6, "false"),t(", "), t("xonxoff:"),i(7, "false"),t(", "), t("exclusive:"),i(8, "false"), t(")"),}),
s( {trig = "SerialPort.closeAll", name = "SerialPort.closeAll", dscr = "Snippet for SerialPort.closeAll, auto generated by SCNvim" }, {t("SerialPort.closeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SerialPort.cleanupAll", name = "SerialPort.cleanupAll", dscr = "Snippet for SerialPort.cleanupAll, auto generated by SCNvim" }, {t("SerialPort.cleanupAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Server.initClass", name = "Server.initClass", dscr = "Snippet for Server.initClass, auto generated by SCNvim" }, {t("Server.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Server.fromName", name = "Server.fromName", dscr = "Snippet for Server.fromName, auto generated by SCNvim" }, {t("Server.fromName"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "Server.default_", name = "Server.default_", dscr = "Snippet for Server.default_, auto generated by SCNvim" }, {t("Server.default_"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "Server.new", name = "Server.new", dscr = "Snippet for Server.new, auto generated by SCNvim" }, {t("Server.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("addr:"),i(2, "nil"),t(", "), t("options:"),i(3, "nil"),t(", "), t("clientID:"),i(4, "nil"), t(")"),}),
s( {trig = "Server.remote", name = "Server.remote", dscr = "Snippet for Server.remote, auto generated by SCNvim" }, {t("Server.remote"),t("("),t("name:"),i(1, "nil"),t(", "), t("addr:"),i(2, "nil"),t(", "), t("options:"),i(3, "nil"),t(", "), t("clientID:"),i(4, "nil"), t(")"),}),
s( {trig = "Server.resumeThreads", name = "Server.resumeThreads", dscr = "Snippet for Server.resumeThreads, auto generated by SCNvim" }, {t("Server.resumeThreads"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Server.quitAll", name = "Server.quitAll", dscr = "Snippet for Server.quitAll, auto generated by SCNvim" }, {t("Server.quitAll"),t("("),t("watchShutDown:"),i(1, "true"), t(")"),}),
s( {trig = "Server.killAll", name = "Server.killAll", dscr = "Snippet for Server.killAll, auto generated by SCNvim" }, {t("Server.killAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Server.freeAll", name = "Server.freeAll", dscr = "Snippet for Server.freeAll, auto generated by SCNvim" }, {t("Server.freeAll"),t("("),t("evenRemote:"),i(1, "false"), t(")"),}),
s( {trig = "Server.hardFreeAll", name = "Server.hardFreeAll", dscr = "Snippet for Server.hardFreeAll, auto generated by SCNvim" }, {t("Server.hardFreeAll"),t("("),t("evenRemote:"),i(1, "false"), t(")"),}),
s( {trig = "Server.allBootedServers", name = "Server.allBootedServers", dscr = "Snippet for Server.allBootedServers, auto generated by SCNvim" }, {t("Server.allBootedServers"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Server.allRunningServers", name = "Server.allRunningServers", dscr = "Snippet for Server.allRunningServers, auto generated by SCNvim" }, {t("Server.allRunningServers"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Server.scsynth", name = "Server.scsynth", dscr = "Snippet for Server.scsynth, auto generated by SCNvim" }, {t("Server.scsynth"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Server.supernova", name = "Server.supernova", dscr = "Snippet for Server.supernova, auto generated by SCNvim" }, {t("Server.supernova"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Server.set", name = "Server.set", dscr = "Snippet for Server.set, auto generated by SCNvim" }, {t("Server.set"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Server.set_", name = "Server.set_", dscr = "Snippet for Server.set_, auto generated by SCNvim" }, {t("Server.set_"),t("("),t("item:"),i(1, "nil"), t(")"),}),
s( {trig = "ServerBoot.functionSelector", name = "ServerBoot.functionSelector", dscr = "Snippet for ServerBoot.functionSelector, auto generated by SCNvim" }, {t("ServerBoot.functionSelector"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ServerMeter.new", name = "ServerMeter.new", dscr = "Snippet for ServerMeter.new, auto generated by SCNvim" }, {t("ServerMeter.new"),t("("),t("server:"),i(1, "nil"),t(", "), t("numIns:"),i(2, "nil"),t(", "), t("numOuts:"),i(3, "nil"), t(")"),}),
s( {trig = "ServerMeterView.new", name = "ServerMeterView.new", dscr = "Snippet for ServerMeterView.new, auto generated by SCNvim" }, {t("ServerMeterView.new"),t("("),t("aserver:"),i(1, "nil"),t(", "), t("parent:"),i(2, "nil"),t(", "), t("leftUp:"),i(3, "nil"),t(", "), t("numIns:"),i(4, "nil"),t(", "), t("numOuts:"),i(5, "nil"), t(")"),}),
s( {trig = "ServerMeterView.getWidth", name = "ServerMeterView.getWidth", dscr = "Snippet for ServerMeterView.getWidth, auto generated by SCNvim" }, {t("ServerMeterView.getWidth"),t("("),t("numIns:"),i(1, "nil"),t(", "), t("numOuts:"),i(2, "nil"),t(", "), t("server:"),i(3, "nil"), t(")"),}),
s( {trig = "ServerOptions.initClass", name = "ServerOptions.initClass", dscr = "Snippet for ServerOptions.initClass, auto generated by SCNvim" }, {t("ServerOptions.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ServerOptions.new", name = "ServerOptions.new", dscr = "Snippet for ServerOptions.new, auto generated by SCNvim" }, {t("ServerOptions.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ServerOptions.prListDevices", name = "ServerOptions.prListDevices", dscr = "Snippet for ServerOptions.prListDevices, auto generated by SCNvim" }, {t("ServerOptions.prListDevices"),t("("),t("in:"),i(1, "nil"),t(", "), t("out:"),i(2, "nil"), t(")"),}),
s( {trig = "ServerOptions.devices", name = "ServerOptions.devices", dscr = "Snippet for ServerOptions.devices, auto generated by SCNvim" }, {t("ServerOptions.devices"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ServerOptions.inDevices", name = "ServerOptions.inDevices", dscr = "Snippet for ServerOptions.inDevices, auto generated by SCNvim" }, {t("ServerOptions.inDevices"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ServerOptions.outDevices", name = "ServerOptions.outDevices", dscr = "Snippet for ServerOptions.outDevices, auto generated by SCNvim" }, {t("ServerOptions.outDevices"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ServerQuit.functionSelector", name = "ServerQuit.functionSelector", dscr = "Snippet for ServerQuit.functionSelector, auto generated by SCNvim" }, {t("ServerQuit.functionSelector"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ServerShmInterface.new", name = "ServerShmInterface.new", dscr = "Snippet for ServerShmInterface.new, auto generated by SCNvim" }, {t("ServerShmInterface.new"),t("("),t("port:"),i(1, "nil"), t(")"),}),
s( {trig = "ServerStatusWatcher.new", name = "ServerStatusWatcher.new", dscr = "Snippet for ServerStatusWatcher.new, auto generated by SCNvim" }, {t("ServerStatusWatcher.new"),t("("),t("server:"),i(1, "nil"), t(")"),}),
s( {trig = "ServerTree.functionSelector", name = "ServerTree.functionSelector", dscr = "Snippet for ServerTree.functionSelector, auto generated by SCNvim" }, {t("ServerTree.functionSelector"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Set.new", name = "Set.new", dscr = "Snippet for Set.new, auto generated by SCNvim" }, {t("Set.new"),t("("),t("n:"),i(1, "2"), t(")"),}),
s( {trig = "SetBuf.new", name = "SetBuf.new", dscr = "Snippet for SetBuf.new, auto generated by SCNvim" }, {t("SetBuf.new"),t("("),t("buf:"),i(1, "nil"),t(", "), t("values:"),i(2, "nil"),t(", "), t("offset:"),i(3, "0"), t(")"),}),
s( {trig = "ShannonMarkovSet.new", name = "ShannonMarkovSet.new", dscr = "Snippet for ShannonMarkovSet.new, auto generated by SCNvim" }, {t("ShannonMarkovSet.new"),t("("),t("size:"),i(1, "8"), t(")"),}),
s( {trig = "ShannonMarkovSet.fill", name = "ShannonMarkovSet.fill", dscr = "Snippet for ShannonMarkovSet.fill, auto generated by SCNvim" }, {t("ShannonMarkovSet.fill"),t("("),t("size:"),i(1, "nil"),t(", "), t("stream:"),i(2, "nil"), t(")"),}),
s( {trig = "SharedIn.kr", name = "SharedIn.kr", dscr = "Snippet for SharedIn.kr, auto generated by SCNvim" }, {t("SharedIn.kr"),t("("),t("bus:"),i(1, "0"),t(", "), t("numChannels:"),i(2, "1"), t(")"),}),
s( {trig = "SharedOut.kr", name = "SharedOut.kr", dscr = "Snippet for SharedOut.kr, auto generated by SCNvim" }, {t("SharedOut.kr"),t("("),t("bus:"),i(1, "nil"),t(", "), t("channelsArray:"),i(2, "nil"), t(")"),}),
s( {trig = "SharedOut.numFixedArgs", name = "SharedOut.numFixedArgs", dscr = "Snippet for SharedOut.numFixedArgs, auto generated by SCNvim" }, {t("SharedOut.numFixedArgs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Shift90.filt", name = "Shift90.filt", dscr = "Snippet for Shift90.filt, auto generated by SCNvim" }, {t("Shift90.filt"),t("("),t("in:"),i(1, "nil"), t(")"),}),
s( {trig = "Shift90.fft", name = "Shift90.fft", dscr = "Snippet for Shift90.fft, auto generated by SCNvim" }, {t("Shift90.fft"),t("("),t("src:"),i(1, "nil"),t(", "), t("fftsize:"),i(2, "nil"),t(", "), t("numffts:"),i(3, "nil"), t(")"),}),
s( {trig = "ShouldNotImplementError.new", name = "ShouldNotImplementError.new", dscr = "Snippet for ShouldNotImplementError.new, auto generated by SCNvim" }, {t("ShouldNotImplementError.new"),t("("),t("receiver:"),i(1, "nil"),t(", "), t("method:"),i(2, "nil"),t(", "), t("class:"),i(3, "nil"), t(")"),}),
s( {trig = "ShutDown.run", name = "ShutDown.run", dscr = "Snippet for ShutDown.run, auto generated by SCNvim" }, {t("ShutDown.run"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Sieve1.ar", name = "Sieve1.ar", dscr = "Snippet for Sieve1.ar, auto generated by SCNvim" }, {t("Sieve1.ar"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("gap:"),i(2, "2"),t(", "), t("alternate:"),i(3, "1"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Sieve1.kr", name = "Sieve1.kr", dscr = "Snippet for Sieve1.kr, auto generated by SCNvim" }, {t("Sieve1.kr"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("gap:"),i(2, "2"),t(", "), t("alternate:"),i(3, "1"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Signal.sineFill", name = "Signal.sineFill", dscr = "Snippet for Signal.sineFill, auto generated by SCNvim" }, {t("Signal.sineFill"),t("("),t("size:"),i(1, "nil"),t(", "), t("amplitudes:"),i(2, "nil"),t(", "), t("phases:"),i(3, "nil"), t(")"),}),
s( {trig = "Signal.chebyFill", name = "Signal.chebyFill", dscr = "Snippet for Signal.chebyFill, auto generated by SCNvim" }, {t("Signal.chebyFill"),t("("),t("size:"),i(1, "nil"),t(", "), t("amplitudes:"),i(2, "nil"),t(", "), t("normalize:"),i(3, "true"),t(", "), t("zeroOffset:"),i(4, "false"), t(")"),}),
s( {trig = "Signal.hammingWindow_old", name = "Signal.hammingWindow_old", dscr = "Snippet for Signal.hammingWindow_old, auto generated by SCNvim" }, {t("Signal.hammingWindow_old"),t("("),t("size:"),i(1, "nil"),t(", "), t("pad:"),i(2, "0"), t(")"),}),
s( {trig = "Signal.hammingWindow", name = "Signal.hammingWindow", dscr = "Snippet for Signal.hammingWindow, auto generated by SCNvim" }, {t("Signal.hammingWindow"),t("("),t("size:"),i(1, "nil"),t(", "), t("pad:"),i(2, "0"), t(")"),}),
s( {trig = "Signal.hanningWindow", name = "Signal.hanningWindow", dscr = "Snippet for Signal.hanningWindow, auto generated by SCNvim" }, {t("Signal.hanningWindow"),t("("),t("size:"),i(1, "nil"),t(", "), t("pad:"),i(2, "0"), t(")"),}),
s( {trig = "Signal.welchWindow", name = "Signal.welchWindow", dscr = "Snippet for Signal.welchWindow, auto generated by SCNvim" }, {t("Signal.welchWindow"),t("("),t("size:"),i(1, "nil"),t(", "), t("pad:"),i(2, "0"), t(")"),}),
s( {trig = "Signal.rectWindow", name = "Signal.rectWindow", dscr = "Snippet for Signal.rectWindow, auto generated by SCNvim" }, {t("Signal.rectWindow"),t("("),t("size:"),i(1, "nil"),t(", "), t("pad:"),i(2, "0"), t(")"),}),
s( {trig = "Signal.readNew", name = "Signal.readNew", dscr = "Snippet for Signal.readNew, auto generated by SCNvim" }, {t("Signal.readNew"),t("("),t("file:"),i(1, "nil"), t(")"),}),
s( {trig = "Signal.fftCosTable", name = "Signal.fftCosTable", dscr = "Snippet for Signal.fftCosTable, auto generated by SCNvim" }, {t("Signal.fftCosTable"),t("("),t("fftsize:"),i(1, "nil"), t(")"),}),
s( {trig = "Silent.ar", name = "Silent.ar", dscr = "Snippet for Silent.ar, auto generated by SCNvim" }, {t("Silent.ar"),t("("),t("numChannels:"),i(1, "1"), t(")"),}),
s( {trig = "SimpleController.new", name = "SimpleController.new", dscr = "Snippet for SimpleController.new, auto generated by SCNvim" }, {t("SimpleController.new"),t("("),t("model:"),i(1, "nil"), t(")"),}),
s( {trig = "SimpleNumber.new", name = "SimpleNumber.new", dscr = "Snippet for SimpleNumber.new, auto generated by SCNvim" }, {t("SimpleNumber.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SinGrain.ar", name = "SinGrain.ar", dscr = "Snippet for SinGrain.ar, auto generated by SCNvim" }, {t("SinGrain.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("freq:"),i(3, "440"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "SinGrainB.ar", name = "SinGrainB.ar", dscr = "Snippet for SinGrainB.ar, auto generated by SCNvim" }, {t("SinGrainB.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("freq:"),i(3, "440"),t(", "), t("envbuf:"),i(4, "nil"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "SinGrainBBF.ar", name = "SinGrainBBF.ar", dscr = "Snippet for SinGrainBBF.ar, auto generated by SCNvim" }, {t("SinGrainBBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("freq:"),i(3, "440"),t(", "), t("envbuf:"),i(4, "nil"),t(", "), t("azimuth:"),i(5, "0"),t(", "), t("elevation:"),i(6, "0"),t(", "), t("rho:"),i(7, "1"),t(", "), t("wComp:"),i(8, "0"),t(", "), t("mul:"),i(9, "1"),t(", "), t("add:"),i(10, "0"), t(")"),}),
s( {trig = "SinGrainBF.ar", name = "SinGrainBF.ar", dscr = "Snippet for SinGrainBF.ar, auto generated by SCNvim" }, {t("SinGrainBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("freq:"),i(3, "440"),t(", "), t("azimuth:"),i(4, "0"),t(", "), t("elevation:"),i(5, "0"),t(", "), t("rho:"),i(6, "1"),t(", "), t("wComp:"),i(7, "0"),t(", "), t("mul:"),i(8, "1"),t(", "), t("add:"),i(9, "0"), t(")"),}),
s( {trig = "SinGrainI.ar", name = "SinGrainI.ar", dscr = "Snippet for SinGrainI.ar, auto generated by SCNvim" }, {t("SinGrainI.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("freq:"),i(3, "440"),t(", "), t("envbuf1:"),i(4, "nil"),t(", "), t("envbuf2:"),i(5, "nil"),t(", "), t("ifac:"),i(6, "0.5"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0"), t(")"),}),
s( {trig = "SinGrainIBF.ar", name = "SinGrainIBF.ar", dscr = "Snippet for SinGrainIBF.ar, auto generated by SCNvim" }, {t("SinGrainIBF.ar"),t("("),t("trigger:"),i(1, "0"),t(", "), t("dur:"),i(2, "1"),t(", "), t("freq:"),i(3, "440"),t(", "), t("envbuf1:"),i(4, "nil"),t(", "), t("envbuf2:"),i(5, "nil"),t(", "), t("ifac:"),i(6, "0.5"),t(", "), t("azimuth:"),i(7, "0"),t(", "), t("elevation:"),i(8, "0"),t(", "), t("rho:"),i(9, "1"),t(", "), t("wComp:"),i(10, "0"),t(", "), t("mul:"),i(11, "1"),t(", "), t("add:"),i(12, "0"), t(")"),}),
s( {trig = "SinOsc.ar", name = "SinOsc.ar", dscr = "Snippet for SinOsc.ar, auto generated by SCNvim" }, {t("SinOsc.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("phase:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "SinOsc.kr", name = "SinOsc.kr", dscr = "Snippet for SinOsc.kr, auto generated by SCNvim" }, {t("SinOsc.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("phase:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "SinOscFB.ar", name = "SinOscFB.ar", dscr = "Snippet for SinOscFB.ar, auto generated by SCNvim" }, {t("SinOscFB.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("feedback:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "SinOscFB.kr", name = "SinOscFB.kr", dscr = "Snippet for SinOscFB.kr, auto generated by SCNvim" }, {t("SinOscFB.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("feedback:"),i(2, "0.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "SinTone.ar", name = "SinTone.ar", dscr = "Snippet for SinTone.ar, auto generated by SCNvim" }, {t("SinTone.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("phase:"),i(2, "0"),t(", "), t("mul:"),i(3, "1"),t(", "), t("add:"),i(4, "0"), t(")"),}),
s( {trig = "SineShaper.ar", name = "SineShaper.ar", dscr = "Snippet for SineShaper.ar, auto generated by SCNvim" }, {t("SineShaper.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("limit:"),i(2, "1.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0"), t(")"),}),
s( {trig = "Size.new", name = "Size.new", dscr = "Snippet for Size.new, auto generated by SCNvim" }, {t("Size.new"),t("("),t("width:"),i(1, "0"),t(", "), t("height:"),i(2, "0"), t(")"),}),
s( {trig = "SkipJack.new", name = "SkipJack.new", dscr = "Snippet for SkipJack.new, auto generated by SCNvim" }, {t("SkipJack.new"),t("("),t("updateFunc:"),i(1, "nil"),t(", "), t("dt:"),i(2, "0.2"),t(", "), t("stopTest:"),i(3, "false"),t(", "), t("name:"),i(4, "anon"),t(", "), t("clock:"),i(5, "nil"),t(", "), t("autostart:"),i(6, "true"), t(")"),}),
s( {trig = "SkipJack.initClass", name = "SkipJack.initClass", dscr = "Snippet for SkipJack.initClass, auto generated by SCNvim" }, {t("SkipJack.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SkipJack.stop", name = "SkipJack.stop", dscr = "Snippet for SkipJack.stop, auto generated by SCNvim" }, {t("SkipJack.stop"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "SkipJack.stopAll", name = "SkipJack.stopAll", dscr = "Snippet for SkipJack.stopAll, auto generated by SCNvim" }, {t("SkipJack.stopAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SkipNeedle.ar", name = "SkipNeedle.ar", dscr = "Snippet for SkipNeedle.ar, auto generated by SCNvim" }, {t("SkipNeedle.ar"),t("("),t("range:"),i(1, "44100"),t(", "), t("rate:"),i(2, "10"),t(", "), t("offset:"),i(3, "0"), t(")"),}),
s( {trig = "Slew.ar", name = "Slew.ar", dscr = "Snippet for Slew.ar, auto generated by SCNvim" }, {t("Slew.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("up:"),i(2, "1.0"),t(", "), t("dn:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Slew.kr", name = "Slew.kr", dscr = "Snippet for Slew.kr, auto generated by SCNvim" }, {t("Slew.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("up:"),i(2, "1.0"),t(", "), t("dn:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Slider.qtClass", name = "Slider.qtClass", dscr = "Snippet for Slider.qtClass, auto generated by SCNvim" }, {t("Slider.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Slider.new", name = "Slider.new", dscr = "Snippet for Slider.new, auto generated by SCNvim" }, {t("Slider.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "Slider2D.qtClass", name = "Slider2D.qtClass", dscr = "Snippet for Slider2D.qtClass, auto generated by SCNvim" }, {t("Slider2D.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Slider2D.new", name = "Slider2D.new", dscr = "Snippet for Slider2D.new, auto generated by SCNvim" }, {t("Slider2D.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "Slope.ar", name = "Slope.ar", dscr = "Snippet for Slope.ar, auto generated by SCNvim" }, {t("Slope.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "Slope.kr", name = "Slope.kr", dscr = "Snippet for Slope.kr, auto generated by SCNvim" }, {t("Slope.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "SlotInspector.new", name = "SlotInspector.new", dscr = "Snippet for SlotInspector.new, auto generated by SCNvim" }, {t("SlotInspector.new"),t("("),t("inspector:"),i(1, "nil"),t(", "), t("index:"),i(2, "nil"),t(", "), t("vpos:"),i(3, "nil"), t(")"),}),
s( {trig = "SmoothDecimator.ar", name = "SmoothDecimator.ar", dscr = "Snippet for SmoothDecimator.ar, auto generated by SCNvim" }, {t("SmoothDecimator.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("rate:"),i(2, "44100.0"),t(", "), t("smoothing:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "SoftClipAmp.ar", name = "SoftClipAmp.ar", dscr = "Snippet for SoftClipAmp.ar, auto generated by SCNvim" }, {t("SoftClipAmp.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("pregain:"),i(2, "1"),t(", "), t("mul:"),i(3, "1"),t(", "), t("add:"),i(4, "0"), t(")"),}),
s( {trig = "SoftClipAmp4.ar", name = "SoftClipAmp4.ar", dscr = "Snippet for SoftClipAmp4.ar, auto generated by SCNvim" }, {t("SoftClipAmp4.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("pregain:"),i(2, "1"),t(", "), t("mul:"),i(3, "1"),t(", "), t("add:"),i(4, "0"), t(")"),}),
s( {trig = "SoftClipAmp8.ar", name = "SoftClipAmp8.ar", dscr = "Snippet for SoftClipAmp8.ar, auto generated by SCNvim" }, {t("SoftClipAmp8.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("pregain:"),i(2, "1"),t(", "), t("mul:"),i(3, "1"),t(", "), t("add:"),i(4, "0"), t(")"),}),
s( {trig = "SoftClipper4.ar", name = "SoftClipper4.ar", dscr = "Snippet for SoftClipper4.ar, auto generated by SCNvim" }, {t("SoftClipper4.ar"),t("("),t("in:"),i(1, "nil"), t(")"),}),
s( {trig = "SoftClipper8.ar", name = "SoftClipper8.ar", dscr = "Snippet for SoftClipper8.ar, auto generated by SCNvim" }, {t("SoftClipper8.ar"),t("("),t("in:"),i(1, "nil"), t(")"),}),
s( {trig = "Solver.new", name = "Solver.new", dscr = "Snippet for Solver.new, auto generated by SCNvim" }, {t("Solver.new"),t("("),t("f:"),i(1, "nil"),t(", "), t("dt:"),i(2, "nil"),t(", "), t("t:"),i(3, "0"),t(", "), t("y:"),i(4, "0"), t(")"),}),
s( {trig = "Solver.newHO", name = "Solver.newHO", dscr = "Snippet for Solver.newHO, auto generated by SCNvim" }, {t("Solver.newHO"),t("("),t("f:"),i(1, "nil"),t(", "), t("dt:"),i(2, "nil"),t(", "), t("t:"),i(3, "nil"),t(", "), t("y:"),i(4, "nil"), t(")"),}),
s( {trig = "SortBuf.ar", name = "SortBuf.ar", dscr = "Snippet for SortBuf.ar, auto generated by SCNvim" }, {t("SortBuf.ar"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("sortrate:"),i(2, "10"),t(", "), t("reset:"),i(3, "0"), t(")"),}),
s( {trig = "SortedList.new", name = "SortedList.new", dscr = "Snippet for SortedList.new, auto generated by SCNvim" }, {t("SortedList.new"),t("("),t("size:"),i(1, "8"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "SoundFile.closeAll", name = "SoundFile.closeAll", dscr = "Snippet for SoundFile.closeAll, auto generated by SCNvim" }, {t("SoundFile.closeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SoundFile.new", name = "SoundFile.new", dscr = "Snippet for SoundFile.new, auto generated by SCNvim" }, {t("SoundFile.new"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "SoundFile.openRead", name = "SoundFile.openRead", dscr = "Snippet for SoundFile.openRead, auto generated by SCNvim" }, {t("SoundFile.openRead"),t("("),t("pathName:"),i(1, "nil"), t(")"),}),
s( {trig = "SoundFile.openWrite", name = "SoundFile.openWrite", dscr = "Snippet for SoundFile.openWrite, auto generated by SCNvim" }, {t("SoundFile.openWrite"),t("("),t("pathName:"),i(1, "nil"),t(", "), t("headerFormat:"),i(2, "nil"),t(", "), t("sampleFormat:"),i(3, "nil"),t(", "), t("numChannels:"),i(4, "nil"),t(", "), t("sampleRate:"),i(5, "nil"), t(")"),}),
s( {trig = "SoundFile.use", name = "SoundFile.use", dscr = "Snippet for SoundFile.use, auto generated by SCNvim" }, {t("SoundFile.use"),t("("),t("path:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "SoundFile.normalize", name = "SoundFile.normalize", dscr = "Snippet for SoundFile.normalize, auto generated by SCNvim" }, {t("SoundFile.normalize"),t("("),t("path:"),i(1, "nil"),t(", "), t("outPath:"),i(2, "nil"),t(", "), t("newHeaderFormat:"),i(3, "nil"),t(", "), t("newSampleFormat:"),i(4, "nil"),t(", "), t("startFrame:"),i(5, "0"),t(", "), t("numFrames:"),i(6, "nil"),t(", "), t("maxAmp:"),i(7, "1.0"),t(", "), t("linkChannels:"),i(8, "true"),t(", "), t("chunkSize:"),i(9, "4194304"),t(", "), t("threaded:"),i(10, "false"), t(")"),}),
s( {trig = "SoundFile.groupNormalize", name = "SoundFile.groupNormalize", dscr = "Snippet for SoundFile.groupNormalize, auto generated by SCNvim" }, {t("SoundFile.groupNormalize"),t("("),t("paths:"),i(1, "nil"),t(", "), t("outDir:"),i(2, "nil"),t(", "), t("newHeaderFormat:"),i(3, "nil"),t(", "), t("newSampleFormat:"),i(4, "nil"),t(", "), t("maxAmp:"),i(5, "1.0"),t(", "), t("chunkSize:"),i(6, "4194304"),t(", "), t("threaded:"),i(7, "true"), t(")"),}),
s( {trig = "SoundFile.collect", name = "SoundFile.collect", dscr = "Snippet for SoundFile.collect, auto generated by SCNvim" }, {t("SoundFile.collect"),t("("),t("path:"),i(1, "sounds/*"), t(")"),}),
s( {trig = "SoundFile.collectIntoBuffers", name = "SoundFile.collectIntoBuffers", dscr = "Snippet for SoundFile.collectIntoBuffers, auto generated by SCNvim" }, {t("SoundFile.collectIntoBuffers"),t("("),t("path:"),i(1, "sounds/*"),t(", "), t("server:"),i(2, "nil"), t(")"),}),
s( {trig = "SoundFileView.qtClass", name = "SoundFileView.qtClass", dscr = "Snippet for SoundFileView.qtClass, auto generated by SCNvim" }, {t("SoundFileView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SoundIn.ar", name = "SoundIn.ar", dscr = "Snippet for SoundIn.ar, auto generated by SCNvim" }, {t("SoundIn.ar"),t("("),t("bus:"),i(1, "0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "SoundIn.channelOffset", name = "SoundIn.channelOffset", dscr = "Snippet for SoundIn.channelOffset, auto generated by SCNvim" }, {t("SoundIn.channelOffset"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SparseArray.newClear", name = "SparseArray.newClear", dscr = "Snippet for SparseArray.newClear, auto generated by SCNvim" }, {t("SparseArray.newClear"),t("("),t("size:"),i(1, "nil"),t(", "), t("default:"),i(2, "nil"), t(")"),}),
s( {trig = "SparseArray.reduceArray", name = "SparseArray.reduceArray", dscr = "Snippet for SparseArray.reduceArray, auto generated by SCNvim" }, {t("SparseArray.reduceArray"),t("("),t("array:"),i(1, "nil"),t(", "), t("default:"),i(2, "nil"), t(")"),}),
s( {trig = "Spawner.new", name = "Spawner.new", dscr = "Snippet for Spawner.new, auto generated by SCNvim" }, {t("Spawner.new"),t("("),t("func:"),i(1, "nil"),t(", "), t("stackSize:"),i(2, "64"), t(")"),}),
s( {trig = "Speakers.quad", name = "Speakers.quad", dscr = "Snippet for Speakers.quad, auto generated by SCNvim" }, {t("Speakers.quad"),t("("),t("distance:"),i(1, "1"),t(", "), t("clockwise:"),i(2, "true"), t(")"),}),
s( {trig = "Speakers.eight", name = "Speakers.eight", dscr = "Snippet for Speakers.eight, auto generated by SCNvim" }, {t("Speakers.eight"),t("("),t("distance:"),i(1, "1"),t(", "), t("clockwise:"),i(2, "true"), t(")"),}),
s( {trig = "Speakers.n", name = "Speakers.n", dscr = "Snippet for Speakers.n, auto generated by SCNvim" }, {t("Speakers.n"),t("("),t("n:"),i(1, "nil"),t(", "), t("distance:"),i(2, "1"),t(", "), t("clockwise:"),i(3, "true"), t(")"),}),
s( {trig = "Spec.initClass", name = "Spec.initClass", dscr = "Snippet for Spec.initClass, auto generated by SCNvim" }, {t("Spec.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Spec.add", name = "Spec.add", dscr = "Snippet for Spec.add, auto generated by SCNvim" }, {t("Spec.add"),t("("),t("name:"),i(1, "nil"),t(", "), t("args:"),i(2, "nil"), t(")"),}),
s( {trig = "Spec.guess", name = "Spec.guess", dscr = "Snippet for Spec.guess, auto generated by SCNvim" }, {t("Spec.guess"),t("("),t("key:"),i(1, "nil"),t(", "), t("value:"),i(2, "nil"), t(")"),}),
s( {trig = "Spec.suggestString", name = "Spec.suggestString", dscr = "Snippet for Spec.suggestString, auto generated by SCNvim" }, {t("Spec.suggestString"),t("("),t("key:"),i(1, "nil"),t(", "), t("value:"),i(2, "nil"), t(")"),}),
s( {trig = "SpecCentroid.kr", name = "SpecCentroid.kr", dscr = "Snippet for SpecCentroid.kr, auto generated by SCNvim" }, {t("SpecCentroid.kr"),t("("),t("buffer:"),i(1, "nil"), t(")"),}),
s( {trig = "SpecFlatness.kr", name = "SpecFlatness.kr", dscr = "Snippet for SpecFlatness.kr, auto generated by SCNvim" }, {t("SpecFlatness.kr"),t("("),t("buffer:"),i(1, "nil"), t(")"),}),
s( {trig = "SpecPcile.kr", name = "SpecPcile.kr", dscr = "Snippet for SpecPcile.kr, auto generated by SCNvim" }, {t("SpecPcile.kr"),t("("),t("buffer:"),i(1, "nil"),t(", "), t("fraction:"),i(2, "0.5"),t(", "), t("interpolate:"),i(3, "0"),t(", "), t("binout:"),i(4, "0"), t(")"),}),
s( {trig = "SpectralEntropy.kr", name = "SpectralEntropy.kr", dscr = "Snippet for SpectralEntropy.kr, auto generated by SCNvim" }, {t("SpectralEntropy.kr"),t("("),t("fft:"),i(1, "nil"),t(", "), t("fftsize:"),i(2, "2048"),t(", "), t("numbands:"),i(3, "1"), t(")"),}),
s( {trig = "Spherical.new", name = "Spherical.new", dscr = "Snippet for Spherical.new, auto generated by SCNvim" }, {t("Spherical.new"),t("("),t("rho:"),i(1, "nil"),t(", "), t("theta:"),i(2, "nil"),t(", "), t("phi:"),i(3, "nil"), t(")"),}),
s( {trig = "Spkr.newt", name = "Spkr.newt", dscr = "Snippet for Spkr.newt, auto generated by SCNvim" }, {t("Spkr.newt"),t("("),t("argpoint:"),i(1, "nil"),t(", "), t("argamp:"),i(2, "1.0"), t(")"),}),
s( {trig = "Spkr.new", name = "Spkr.new", dscr = "Snippet for Spkr.new, auto generated by SCNvim" }, {t("Spkr.new"),t("("),t("x:"),i(1, "nil"),t(", "), t("y:"),i(2, "nil"),t(", "), t("argamp:"),i(3, "1.0"), t(")"),}),
s( {trig = "Splay.new1", name = "Splay.new1", dscr = "Snippet for Splay.new1, auto generated by SCNvim" }, {t("Splay.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("spread:"),i(2, "1"),t(", "), t("level:"),i(3, "1"),t(", "), t("center:"),i(4, "0.0"),t(", "), t("levelComp:"),i(5, "true"),t(", "), t("inArray:"),i(6, "[]"), t(")"),}),
s( {trig = "Splay.kr", name = "Splay.kr", dscr = "Snippet for Splay.kr, auto generated by SCNvim" }, {t("Splay.kr"),t("("),t("inArray:"),i(1, "nil"),t(", "), t("spread:"),i(2, "1"),t(", "), t("level:"),i(3, "1"),t(", "), t("center:"),i(4, "0.0"),t(", "), t("levelComp:"),i(5, "true"), t(")"),}),
s( {trig = "Splay.ar", name = "Splay.ar", dscr = "Snippet for Splay.ar, auto generated by SCNvim" }, {t("Splay.ar"),t("("),t("inArray:"),i(1, "nil"),t(", "), t("spread:"),i(2, "1"),t(", "), t("level:"),i(3, "1"),t(", "), t("center:"),i(4, "0.0"),t(", "), t("levelComp:"),i(5, "true"), t(")"),}),
s( {trig = "Splay.arFill", name = "Splay.arFill", dscr = "Snippet for Splay.arFill, auto generated by SCNvim" }, {t("Splay.arFill"),t("("),t("n:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"),t(", "), t("spread:"),i(3, "1"),t(", "), t("level:"),i(4, "1"),t(", "), t("center:"),i(5, "0.0"),t(", "), t("levelComp:"),i(6, "true"), t(")"),}),
s( {trig = "SplayAz.kr", name = "SplayAz.kr", dscr = "Snippet for SplayAz.kr, auto generated by SCNvim" }, {t("SplayAz.kr"),t("("),t("numChans:"),i(1, "4"),t(", "), t("inArray:"),i(2, "nil"),t(", "), t("spread:"),i(3, "1"),t(", "), t("level:"),i(4, "1"),t(", "), t("width:"),i(5, "2"),t(", "), t("center:"),i(6, "0.0"),t(", "), t("orientation:"),i(7, "0.5"),t(", "), t("levelComp:"),i(8, "true"), t(")"),}),
s( {trig = "SplayAz.ar", name = "SplayAz.ar", dscr = "Snippet for SplayAz.ar, auto generated by SCNvim" }, {t("SplayAz.ar"),t("("),t("numChans:"),i(1, "4"),t(", "), t("inArray:"),i(2, "nil"),t(", "), t("spread:"),i(3, "1"),t(", "), t("level:"),i(4, "1"),t(", "), t("width:"),i(5, "2"),t(", "), t("center:"),i(6, "0.0"),t(", "), t("orientation:"),i(7, "0.5"),t(", "), t("levelComp:"),i(8, "true"), t(")"),}),
s( {trig = "SplayAz.arFill", name = "SplayAz.arFill", dscr = "Snippet for SplayAz.arFill, auto generated by SCNvim" }, {t("SplayAz.arFill"),t("("),t("numChans:"),i(1, "4"),t(", "), t("n:"),i(2, "nil"),t(", "), t("function:"),i(3, "nil"),t(", "), t("spread:"),i(4, "1"),t(", "), t("level:"),i(5, "1"),t(", "), t("width:"),i(6, "2"),t(", "), t("center:"),i(7, "0.0"),t(", "), t("orientation:"),i(8, "0.5"),t(", "), t("levelComp:"),i(9, "true"), t(")"),}),
s( {trig = "SplayZ.ar", name = "SplayZ.ar", dscr = "Snippet for SplayZ.ar, auto generated by SCNvim" }, {t("SplayZ.ar"),t("("),t("numChans:"),i(1, "4"),t(", "), t("inArray:"),i(2, "nil"),t(", "), t("spread:"),i(3, "1"),t(", "), t("level:"),i(4, "1"),t(", "), t("width:"),i(5, "2"),t(", "), t("center:"),i(6, "0.0"),t(", "), t("orientation:"),i(7, "0.5"),t(", "), t("levelComp:"),i(8, "true"), t(")"),}),
s( {trig = "SplayZ.arFill", name = "SplayZ.arFill", dscr = "Snippet for SplayZ.arFill, auto generated by SCNvim" }, {t("SplayZ.arFill"),t("("),t("numChans:"),i(1, "4"),t(", "), t("n:"),i(2, "nil"),t(", "), t("function:"),i(3, "nil"),t(", "), t("spread:"),i(4, "1"),t(", "), t("level:"),i(5, "1"),t(", "), t("width:"),i(6, "2"),t(", "), t("center:"),i(7, "0.0"),t(", "), t("orientation:"),i(8, "0.5"),t(", "), t("levelComp:"),i(9, "true"), t(")"),}),
s( {trig = "Spreader.ar", name = "Spreader.ar", dscr = "Snippet for Spreader.ar, auto generated by SCNvim" }, {t("Spreader.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("theta:"),i(2, "1.5707963267949"),t(", "), t("filtsPerOctave:"),i(3, "8"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "Spring.ar", name = "Spring.ar", dscr = "Snippet for Spring.ar, auto generated by SCNvim" }, {t("Spring.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("spring:"),i(2, "1"),t(", "), t("damp:"),i(3, "0"), t(")"),}),
s( {trig = "Spring.kr", name = "Spring.kr", dscr = "Snippet for Spring.kr, auto generated by SCNvim" }, {t("Spring.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("spring:"),i(2, "1"),t(", "), t("damp:"),i(3, "0"), t(")"),}),
s( {trig = "SpruceBudworm.ar", name = "SpruceBudworm.ar", dscr = "Snippet for SpruceBudworm.ar, auto generated by SCNvim" }, {t("SpruceBudworm.ar"),t("("),t("reset:"),i(1, "0"),t(", "), t("rate:"),i(2, "0.1"),t(", "), t("k1:"),i(3, "27.9"),t(", "), t("k2:"),i(4, "1.5"),t(", "), t("alpha:"),i(5, "0.1"),t(", "), t("beta:"),i(6, "10.1"),t(", "), t("mu:"),i(7, "0.3"),t(", "), t("rho:"),i(8, "10.1"),t(", "), t("initx:"),i(9, "0.9"),t(", "), t("inity:"),i(10, "0.1"),t(", "), t("mul:"),i(11, "1.0"),t(", "), t("add:"),i(12, "0.0"), t(")"),}),
s( {trig = "Squiz.ar", name = "Squiz.ar", dscr = "Snippet for Squiz.ar, auto generated by SCNvim" }, {t("Squiz.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("pitchratio:"),i(2, "2"),t(", "), t("zcperchunk:"),i(3, "1"),t(", "), t("memlen:"),i(4, "0.1"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "Squiz.kr", name = "Squiz.kr", dscr = "Snippet for Squiz.kr, auto generated by SCNvim" }, {t("Squiz.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("pitchratio:"),i(2, "2"),t(", "), t("zcperchunk:"),i(3, "1"),t(", "), t("memlen:"),i(4, "0.1"),t(", "), t("mul:"),i(5, "1"),t(", "), t("add:"),i(6, "0"), t(")"),}),
s( {trig = "Squiz.categories", name = "Squiz.categories", dscr = "Snippet for Squiz.categories, auto generated by SCNvim" }, {t("Squiz.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "StackLayout.qtClass", name = "StackLayout.qtClass", dscr = "Snippet for StackLayout.qtClass, auto generated by SCNvim" }, {t("StackLayout.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "StackLayout.new", name = "StackLayout.new", dscr = "Snippet for StackLayout.new, auto generated by SCNvim" }, {t("StackLayout.new"),t("("),t("views:"),i(1, "[]"), t(")"),}),
s( {trig = "StackNumberAllocator.new", name = "StackNumberAllocator.new", dscr = "Snippet for StackNumberAllocator.new, auto generated by SCNvim" }, {t("StackNumberAllocator.new"),t("("),t("lo:"),i(1, "nil"),t(", "), t("hi:"),i(2, "nil"), t(")"),}),
s( {trig = "Standard2DN.ar", name = "Standard2DN.ar", dscr = "Snippet for Standard2DN.ar, auto generated by SCNvim" }, {t("Standard2DN.ar"),t("("),t("minfreq:"),i(1, "11025"),t(", "), t("maxfreq:"),i(2, "22050"),t(", "), t("k:"),i(3, "1.4"),t(", "), t("x0:"),i(4, "4.9789799812499"),t(", "), t("y0:"),i(5, "5.7473416156381"),t(", "), t("mul:"),i(6, "1"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "Standard2DN.kr", name = "Standard2DN.kr", dscr = "Snippet for Standard2DN.kr, auto generated by SCNvim" }, {t("Standard2DN.kr"),t("("),t("minfreq:"),i(1, "40"),t(", "), t("maxfreq:"),i(2, "100"),t(", "), t("k:"),i(3, "1.4"),t(", "), t("x0:"),i(4, "4.9789799812499"),t(", "), t("y0:"),i(5, "5.7473416156381"),t(", "), t("mul:"),i(6, "1"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "StandardN.ar", name = "StandardN.ar", dscr = "Snippet for StandardN.ar, auto generated by SCNvim" }, {t("StandardN.ar"),t("("),t("freq:"),i(1, "22050"),t(", "), t("k:"),i(2, "1.0"),t(", "), t("xi:"),i(3, "0.5"),t(", "), t("yi:"),i(4, "0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "StandardTrig.ar", name = "StandardTrig.ar", dscr = "Snippet for StandardTrig.ar, auto generated by SCNvim" }, {t("StandardTrig.ar"),t("("),t("minfreq:"),i(1, "5"),t(", "), t("maxfreq:"),i(2, "10"),t(", "), t("k:"),i(3, "1.4"),t(", "), t("x0:"),i(4, "4.9789799812499"),t(", "), t("y0:"),i(5, "5.7473416156381"),t(", "), t("mul:"),i(6, "1"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "StandardTrig.kr", name = "StandardTrig.kr", dscr = "Snippet for StandardTrig.kr, auto generated by SCNvim" }, {t("StandardTrig.kr"),t("("),t("minfreq:"),i(1, "5"),t(", "), t("maxfreq:"),i(2, "10"),t(", "), t("k:"),i(3, "1.4"),t(", "), t("x0:"),i(4, "4.9789799812499"),t(", "), t("y0:"),i(5, "5.7473416156381"),t(", "), t("mul:"),i(6, "1"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "StartUp.run", name = "StartUp.run", dscr = "Snippet for StartUp.run, auto generated by SCNvim" }, {t("StartUp.run"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "StartUp.defer", name = "StartUp.defer", dscr = "Snippet for StartUp.defer, auto generated by SCNvim" }, {t("StartUp.defer"),t("("),t("object:"),i(1, "nil"), t(")"),}),
s( {trig = "StaticText.qtClass", name = "StaticText.qtClass", dscr = "Snippet for StaticText.qtClass, auto generated by SCNvim" }, {t("StaticText.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "StaticText.new", name = "StaticText.new", dscr = "Snippet for StaticText.new, auto generated by SCNvim" }, {t("StaticText.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "Stepper.ar", name = "Stepper.ar", dscr = "Snippet for Stepper.ar, auto generated by SCNvim" }, {t("Stepper.ar"),t("("),t("trig:"),i(1, "0"),t(", "), t("reset:"),i(2, "0"),t(", "), t("min:"),i(3, "0"),t(", "), t("max:"),i(4, "7"),t(", "), t("step:"),i(5, "1"),t(", "), t("resetval:"),i(6, "nil"), t(")"),}),
s( {trig = "Stepper.kr", name = "Stepper.kr", dscr = "Snippet for Stepper.kr, auto generated by SCNvim" }, {t("Stepper.kr"),t("("),t("trig:"),i(1, "0"),t(", "), t("reset:"),i(2, "0"),t(", "), t("min:"),i(3, "0"),t(", "), t("max:"),i(4, "7"),t(", "), t("step:"),i(5, "1"),t(", "), t("resetval:"),i(6, "nil"), t(")"),}),
s( {trig = "StereoConvolution2L.ar", name = "StereoConvolution2L.ar", dscr = "Snippet for StereoConvolution2L.ar, auto generated by SCNvim" }, {t("StereoConvolution2L.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("kernelL:"),i(2, "nil"),t(", "), t("kernelR:"),i(3, "nil"),t(", "), t("trigger:"),i(4, "0"),t(", "), t("framesize:"),i(5, "2048"),t(", "), t("crossfade:"),i(6, "1"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "Stethoscope.isValidServer", name = "Stethoscope.isValidServer", dscr = "Snippet for Stethoscope.isValidServer, auto generated by SCNvim" }, {t("Stethoscope.isValidServer"),t("("),t("aServer:"),i(1, "nil"), t(")"),}),
s( {trig = "Stethoscope.ugenScopes", name = "Stethoscope.ugenScopes", dscr = "Snippet for Stethoscope.ugenScopes, auto generated by SCNvim" }, {t("Stethoscope.ugenScopes"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Stethoscope.tileBounds", name = "Stethoscope.tileBounds", dscr = "Snippet for Stethoscope.tileBounds, auto generated by SCNvim" }, {t("Stethoscope.tileBounds"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Stethoscope.new", name = "Stethoscope.new", dscr = "Snippet for Stethoscope.new, auto generated by SCNvim" }, {t("Stethoscope.new"),t("("),t("server:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "2"),t(", "), t("index:"),i(3, "0"),t(", "), t("bufsize:"),i(4, "4096"),t(", "), t("zoom:"),i(5, "1.0"),t(", "), t("rate:"),i(6, "audio"),t(", "), t("view:"),i(7, "nil"),t(", "), t("bufnum:"),i(8, "nil"), t(")"),}),
s( {trig = "Stk.initClass", name = "Stk.initClass", dscr = "Snippet for Stk.initClass, auto generated by SCNvim" }, {t("Stk.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Stk.at", name = "Stk.at", dscr = "Snippet for Stk.at, auto generated by SCNvim" }, {t("Stk.at"),t("("),t("name:"),i(1, "nil"), t(")"),}),
s( {trig = "StkBandedWG.ar", name = "StkBandedWG.ar", dscr = "Snippet for StkBandedWG.ar, auto generated by SCNvim" }, {t("StkBandedWG.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("instr:"),i(2, "0"),t(", "), t("bowpressure:"),i(3, "0"),t(", "), t("bowmotion:"),i(4, "0"),t(", "), t("integration:"),i(5, "0"),t(", "), t("modalresonance:"),i(6, "64"),t(", "), t("bowvelocity:"),i(7, "0"),t(", "), t("setstriking:"),i(8, "0"),t(", "), t("trig:"),i(9, "1"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "StkBandedWG.kr", name = "StkBandedWG.kr", dscr = "Snippet for StkBandedWG.kr, auto generated by SCNvim" }, {t("StkBandedWG.kr"),t("("),t("freq:"),i(1, "440"),t(", "), t("instr:"),i(2, "0"),t(", "), t("bowpressure:"),i(3, "0"),t(", "), t("bowmotion:"),i(4, "0"),t(", "), t("integration:"),i(5, "0"),t(", "), t("modalresonance:"),i(6, "64"),t(", "), t("bowvelocity:"),i(7, "0"),t(", "), t("setstriking:"),i(8, "0"),t(", "), t("trig:"),i(9, "1"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "StkBeeThree.ar", name = "StkBeeThree.ar", dscr = "Snippet for StkBeeThree.ar, auto generated by SCNvim" }, {t("StkBeeThree.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("op4gain:"),i(2, "10"),t(", "), t("op3gain:"),i(3, "20"),t(", "), t("lfospeed:"),i(4, "64"),t(", "), t("lfodepth:"),i(5, "0"),t(", "), t("adsrtarget:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StkBeeThree.kr", name = "StkBeeThree.kr", dscr = "Snippet for StkBeeThree.kr, auto generated by SCNvim" }, {t("StkBeeThree.kr"),t("("),t("freq:"),i(1, "440"),t(", "), t("op4gain:"),i(2, "10"),t(", "), t("op3gain:"),i(3, "20"),t(", "), t("lfospeed:"),i(4, "64"),t(", "), t("lfodepth:"),i(5, "0"),t(", "), t("adsrtarget:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StkBlowHole.ar", name = "StkBlowHole.ar", dscr = "Snippet for StkBlowHole.ar, auto generated by SCNvim" }, {t("StkBlowHole.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("reedstiffness:"),i(2, "64"),t(", "), t("noisegain:"),i(3, "20"),t(", "), t("tonehole:"),i(4, "64"),t(", "), t("register:"),i(5, "11"),t(", "), t("breathpressure:"),i(6, "64"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "StkBlowHole.kr", name = "StkBlowHole.kr", dscr = "Snippet for StkBlowHole.kr, auto generated by SCNvim" }, {t("StkBlowHole.kr"),t("("),t("freq:"),i(1, "440"),t(", "), t("reedstiffness:"),i(2, "64"),t(", "), t("noisegain:"),i(3, "4"),t(", "), t("tonehole:"),i(4, "64"),t(", "), t("register:"),i(5, "11"),t(", "), t("breathpressure:"),i(6, "64"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "StkBowed.ar", name = "StkBowed.ar", dscr = "Snippet for StkBowed.ar, auto generated by SCNvim" }, {t("StkBowed.ar"),t("("),t("freq:"),i(1, "220"),t(", "), t("bowpressure:"),i(2, "64"),t(", "), t("bowposition:"),i(3, "64"),t(", "), t("vibfreq:"),i(4, "64"),t(", "), t("vibgain:"),i(5, "64"),t(", "), t("loudness:"),i(6, "64"),t(", "), t("gate:"),i(7, "1"),t(", "), t("attackrate:"),i(8, "1"),t(", "), t("decayrate:"),i(9, "1"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "StkBowed.kr", name = "StkBowed.kr", dscr = "Snippet for StkBowed.kr, auto generated by SCNvim" }, {t("StkBowed.kr"),t("("),t("freq:"),i(1, "220"),t(", "), t("bowpressure:"),i(2, "64"),t(", "), t("bowposition:"),i(3, "64"),t(", "), t("vibfreq:"),i(4, "64"),t(", "), t("vibgain:"),i(5, "64"),t(", "), t("loudness:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StkBowedI.ar", name = "StkBowedI.ar", dscr = "Snippet for StkBowedI.ar, auto generated by SCNvim" }, {t("StkBowedI.ar"),t("("),t("freq:"),i(1, "220"),t(", "), t("gate:"),i(2, "1"),t(", "), t("onamp:"),i(3, "1"),t(", "), t("offamp:"),i(4, "1"),t(", "), t("bowpressure:"),i(5, "64"),t(", "), t("bowposition:"),i(6, "64"),t(", "), t("vibfreq:"),i(7, "64"),t(", "), t("vibgain:"),i(8, "64"),t(", "), t("loudness:"),i(9, "64"), t(")"),}),
s( {trig = "StkClarinet.ar", name = "StkClarinet.ar", dscr = "Snippet for StkClarinet.ar, auto generated by SCNvim" }, {t("StkClarinet.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("reedstiffness:"),i(2, "64"),t(", "), t("noisegain:"),i(3, "4"),t(", "), t("vibfreq:"),i(4, "64"),t(", "), t("vibgain:"),i(5, "11"),t(", "), t("breathpressure:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StkClarinet.kr", name = "StkClarinet.kr", dscr = "Snippet for StkClarinet.kr, auto generated by SCNvim" }, {t("StkClarinet.kr"),t("("),t("freq:"),i(1, "440"),t(", "), t("reedstiffness:"),i(2, "64"),t(", "), t("noisegain:"),i(3, "4"),t(", "), t("vibfreq:"),i(4, "64"),t(", "), t("vibgain:"),i(5, "11"),t(", "), t("breathpressure:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StkFlute.ar", name = "StkFlute.ar", dscr = "Snippet for StkFlute.ar, auto generated by SCNvim" }, {t("StkFlute.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("jetDelay:"),i(2, "49"),t(", "), t("noisegain:"),i(3, "0.15"),t(", "), t("jetRatio:"),i(4, "0.32"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "StkFlute.kr", name = "StkFlute.kr", dscr = "Snippet for StkFlute.kr, auto generated by SCNvim" }, {t("StkFlute.kr"),t("("),t("freq:"),i(1, "220"),t(", "), t("jetDelay:"),i(2, "49"),t(", "), t("noisegain:"),i(3, "0.15"),t(", "), t("jetRatio:"),i(4, "0.32"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "StkGlobals.ar", name = "StkGlobals.ar", dscr = "Snippet for StkGlobals.ar, auto generated by SCNvim" }, {t("StkGlobals.ar"),t("("),t("showWarnings:"),i(1, "nil"),t(", "), t("printErrors:"),i(2, "nil"),t(", "), t("rawfilepath:"),i(3, "nil"), t(")"),}),
s( {trig = "StkInst.ar", name = "StkInst.ar", dscr = "Snippet for StkInst.ar, auto generated by SCNvim" }, {t("StkInst.ar"),t("("),t("instNumber:"),i(1, "6"),t(", "), t("freq:"),i(2, "220"),t(", "), t("gate:"),i(3, "1"),t(", "), t("onamp:"),i(4, "1"),t(", "), t("offamp:"),i(5, "0.5"),t(", "), t("args:"),i(6, "nil"), t(")"),}),
s( {trig = "StkMandolin.ar", name = "StkMandolin.ar", dscr = "Snippet for StkMandolin.ar, auto generated by SCNvim" }, {t("StkMandolin.ar"),t("("),t("freq:"),i(1, "520"),t(", "), t("bodysize:"),i(2, "64"),t(", "), t("pickposition:"),i(3, "64"),t(", "), t("stringdamping:"),i(4, "69"),t(", "), t("stringdetune:"),i(5, "10"),t(", "), t("aftertouch:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StkMandolin.kr", name = "StkMandolin.kr", dscr = "Snippet for StkMandolin.kr, auto generated by SCNvim" }, {t("StkMandolin.kr"),t("("),t("freq:"),i(1, "220"),t(", "), t("bodysize:"),i(2, "64"),t(", "), t("pickposition:"),i(3, "64"),t(", "), t("stringdamping:"),i(4, "69"),t(", "), t("stringdetune:"),i(5, "10"),t(", "), t("aftertouch:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StkModalBar.ar", name = "StkModalBar.ar", dscr = "Snippet for StkModalBar.ar, auto generated by SCNvim" }, {t("StkModalBar.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("instrument:"),i(2, "0"),t(", "), t("stickhardness:"),i(3, "64"),t(", "), t("stickposition:"),i(4, "64"),t(", "), t("vibratogain:"),i(5, "20"),t(", "), t("vibratofreq:"),i(6, "20"),t(", "), t("directstickmix:"),i(7, "64"),t(", "), t("volume:"),i(8, "64"),t(", "), t("trig:"),i(9, "1"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "StkModalBar.kr", name = "StkModalBar.kr", dscr = "Snippet for StkModalBar.kr, auto generated by SCNvim" }, {t("StkModalBar.kr"),t("("),t("freq:"),i(1, "440"),t(", "), t("instrument:"),i(2, "0"),t(", "), t("stickhardness:"),i(3, "64"),t(", "), t("stickposition:"),i(4, "64"),t(", "), t("vibratogain:"),i(5, "20"),t(", "), t("vibratofreq:"),i(6, "20"),t(", "), t("directstickmix:"),i(7, "64"),t(", "), t("volume:"),i(8, "64"),t(", "), t("trig:"),i(9, "1"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "StkMoog.ar", name = "StkMoog.ar", dscr = "Snippet for StkMoog.ar, auto generated by SCNvim" }, {t("StkMoog.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("filterQ:"),i(2, "10"),t(", "), t("sweeprate:"),i(3, "20"),t(", "), t("vibfreq:"),i(4, "64"),t(", "), t("vibgain:"),i(5, "0"),t(", "), t("gain:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StkMoog.kr", name = "StkMoog.kr", dscr = "Snippet for StkMoog.kr, auto generated by SCNvim" }, {t("StkMoog.kr"),t("("),t("freq:"),i(1, "440"),t(", "), t("filterQ:"),i(2, "10"),t(", "), t("sweeprate:"),i(3, "20"),t(", "), t("vibfreq:"),i(4, "64"),t(", "), t("vibgain:"),i(5, "0"),t(", "), t("gain:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StkPluck.ar", name = "StkPluck.ar", dscr = "Snippet for StkPluck.ar, auto generated by SCNvim" }, {t("StkPluck.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("decay:"),i(2, "0.99"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "StkPluck.kr", name = "StkPluck.kr", dscr = "Snippet for StkPluck.kr, auto generated by SCNvim" }, {t("StkPluck.kr"),t("("),t("freq:"),i(1, "440"),t(", "), t("decay:"),i(2, "0.99"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "StkSaxofony.ar", name = "StkSaxofony.ar", dscr = "Snippet for StkSaxofony.ar, auto generated by SCNvim" }, {t("StkSaxofony.ar"),t("("),t("freq:"),i(1, "220"),t(", "), t("reedstiffness:"),i(2, "64"),t(", "), t("reedaperture:"),i(3, "64"),t(", "), t("noisegain:"),i(4, "20"),t(", "), t("blowposition:"),i(5, "26"),t(", "), t("vibratofrequency:"),i(6, "20"),t(", "), t("vibratogain:"),i(7, "20"),t(", "), t("breathpressure:"),i(8, "128"),t(", "), t("trig:"),i(9, "1"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "StkSaxofony.kr", name = "StkSaxofony.kr", dscr = "Snippet for StkSaxofony.kr, auto generated by SCNvim" }, {t("StkSaxofony.kr"),t("("),t("freq:"),i(1, "220"),t(", "), t("reedstiffness:"),i(2, "64"),t(", "), t("reedaperture:"),i(3, "64"),t(", "), t("noisegain:"),i(4, "20"),t(", "), t("blowposition:"),i(5, "26"),t(", "), t("vibratofrequency:"),i(6, "20"),t(", "), t("vibratogain:"),i(7, "20"),t(", "), t("breathpressure:"),i(8, "128"),t(", "), t("trig:"),i(9, "1"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "StkShakers.ar", name = "StkShakers.ar", dscr = "Snippet for StkShakers.ar, auto generated by SCNvim" }, {t("StkShakers.ar"),t("("),t("instr:"),i(1, "0"),t(", "), t("energy:"),i(2, "64"),t(", "), t("decay:"),i(3, "64"),t(", "), t("objects:"),i(4, "64"),t(", "), t("resfreq:"),i(5, "64"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "StkShakers.kr", name = "StkShakers.kr", dscr = "Snippet for StkShakers.kr, auto generated by SCNvim" }, {t("StkShakers.kr"),t("("),t("instr:"),i(1, "0"),t(", "), t("energy:"),i(2, "64"),t(", "), t("decay:"),i(3, "64"),t(", "), t("objects:"),i(4, "64"),t(", "), t("resfreq:"),i(5, "64"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "StkVoicForm.ar", name = "StkVoicForm.ar", dscr = "Snippet for StkVoicForm.ar, auto generated by SCNvim" }, {t("StkVoicForm.ar"),t("("),t("freq:"),i(1, "440"),t(", "), t("vuvmix:"),i(2, "64"),t(", "), t("vowelphon:"),i(3, "64"),t(", "), t("vibfreq:"),i(4, "64"),t(", "), t("vibgain:"),i(5, "20"),t(", "), t("loudness:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StkVoicForm.kr", name = "StkVoicForm.kr", dscr = "Snippet for StkVoicForm.kr, auto generated by SCNvim" }, {t("StkVoicForm.kr"),t("("),t("freq:"),i(1, "440"),t(", "), t("vuvmix:"),i(2, "64"),t(", "), t("vowelphon:"),i(3, "64"),t(", "), t("vibfreq:"),i(4, "64"),t(", "), t("vibgain:"),i(5, "20"),t(", "), t("loudness:"),i(6, "64"),t(", "), t("trig:"),i(7, "1"),t(", "), t("mul:"),i(8, "1.0"),t(", "), t("add:"),i(9, "0.0"), t(")"),}),
s( {trig = "StreamClutch.new", name = "StreamClutch.new", dscr = "Snippet for StreamClutch.new, auto generated by SCNvim" }, {t("StreamClutch.new"),t("("),t("pattern:"),i(1, "nil"),t(", "), t("connected:"),i(2, "true"), t(")"),}),
s( {trig = "Streson.ar", name = "Streson.ar", dscr = "Snippet for Streson.ar, auto generated by SCNvim" }, {t("Streson.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("delayTime:"),i(2, "0.003"),t(", "), t("res:"),i(3, "0.9"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Streson.kr", name = "Streson.kr", dscr = "Snippet for Streson.kr, auto generated by SCNvim" }, {t("Streson.kr"),t("("),t("input:"),i(1, "nil"),t(", "), t("delayTime:"),i(2, "0.003"),t(", "), t("res:"),i(3, "0.9"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "String.initClass", name = "String.initClass", dscr = "Snippet for String.initClass, auto generated by SCNvim" }, {t("String.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "String.doUnixCmdAction", name = "String.doUnixCmdAction", dscr = "Snippet for String.doUnixCmdAction, auto generated by SCNvim" }, {t("String.doUnixCmdAction"),t("("),t("res:"),i(1, "nil"),t(", "), t("pid:"),i(2, "nil"), t(")"),}),
s( {trig = "String.readNew", name = "String.readNew", dscr = "Snippet for String.readNew, auto generated by SCNvim" }, {t("String.readNew"),t("("),t("file:"),i(1, "nil"), t(")"),}),
s( {trig = "String.scDir", name = "String.scDir", dscr = "Snippet for String.scDir, auto generated by SCNvim" }, {t("String.scDir"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SubclassResponsibilityError.new", name = "SubclassResponsibilityError.new", dscr = "Snippet for SubclassResponsibilityError.new, auto generated by SCNvim" }, {t("SubclassResponsibilityError.new"),t("("),t("receiver:"),i(1, "nil"),t(", "), t("method:"),i(2, "nil"),t(", "), t("class:"),i(3, "nil"), t(")"),}),
s( {trig = "Sum3.new", name = "Sum3.new", dscr = "Snippet for Sum3.new, auto generated by SCNvim" }, {t("Sum3.new"),t("("),t("in0:"),i(1, "nil"),t(", "), t("in1:"),i(2, "nil"),t(", "), t("in2:"),i(3, "nil"), t(")"),}),
s( {trig = "Sum3.new1", name = "Sum3.new1", dscr = "Snippet for Sum3.new1, auto generated by SCNvim" }, {t("Sum3.new1"),t("("),t("dummyRate:"),i(1, "nil"),t(", "), t("in0:"),i(2, "nil"),t(", "), t("in1:"),i(3, "nil"),t(", "), t("in2:"),i(4, "nil"), t(")"),}),
s( {trig = "Sum4.new", name = "Sum4.new", dscr = "Snippet for Sum4.new, auto generated by SCNvim" }, {t("Sum4.new"),t("("),t("in0:"),i(1, "nil"),t(", "), t("in1:"),i(2, "nil"),t(", "), t("in2:"),i(3, "nil"),t(", "), t("in3:"),i(4, "nil"), t(")"),}),
s( {trig = "Sum4.new1", name = "Sum4.new1", dscr = "Snippet for Sum4.new1, auto generated by SCNvim" }, {t("Sum4.new1"),t("("),t("dummyRate:"),i(1, "nil"),t(", "), t("in0:"),i(2, "nil"),t(", "), t("in1:"),i(3, "nil"),t(", "), t("in2:"),i(4, "nil"),t(", "), t("in3:"),i(5, "nil"), t(")"),}),
s( {trig = "Summer.ar", name = "Summer.ar", dscr = "Snippet for Summer.ar, auto generated by SCNvim" }, {t("Summer.ar"),t("("),t("trig:"),i(1, "0"),t(", "), t("step:"),i(2, "1"),t(", "), t("reset:"),i(3, "0"),t(", "), t("resetval:"),i(4, "0"), t(")"),}),
s( {trig = "Summer.kr", name = "Summer.kr", dscr = "Snippet for Summer.kr, auto generated by SCNvim" }, {t("Summer.kr"),t("("),t("trig:"),i(1, "0"),t(", "), t("step:"),i(2, "1"),t(", "), t("reset:"),i(3, "0"),t(", "), t("resetval:"),i(4, "0"), t(")"),}),
s( {trig = "Sweep.ar", name = "Sweep.ar", dscr = "Snippet for Sweep.ar, auto generated by SCNvim" }, {t("Sweep.ar"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("rate:"),i(2, "1.0"), t(")"),}),
s( {trig = "Sweep.kr", name = "Sweep.kr", dscr = "Snippet for Sweep.kr, auto generated by SCNvim" }, {t("Sweep.kr"),t("("),t("trig:"),i(1, "0.0"),t(", "), t("rate:"),i(2, "1.0"), t(")"),}),
s( {trig = "SwitchDelay.ar", name = "SwitchDelay.ar", dscr = "Snippet for SwitchDelay.ar, auto generated by SCNvim" }, {t("SwitchDelay.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("drylevel:"),i(2, "1.0"),t(", "), t("wetlevel:"),i(3, "1.0"),t(", "), t("delaytime:"),i(4, "1.0"),t(", "), t("delayfactor:"),i(5, "0.7"),t(", "), t("maxdelaytime:"),i(6, "20.0"),t(", "), t("mul:"),i(7, "1.0"),t(", "), t("add:"),i(8, "0.0"), t(")"),}),
s( {trig = "Symbol.new", name = "Symbol.new", dscr = "Snippet for Symbol.new, auto generated by SCNvim" }, {t("Symbol.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SyncSaw.ar", name = "SyncSaw.ar", dscr = "Snippet for SyncSaw.ar, auto generated by SCNvim" }, {t("SyncSaw.ar"),t("("),t("syncFreq:"),i(1, "440.0"),t(", "), t("sawFreq:"),i(2, "440.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "SyncSaw.kr", name = "SyncSaw.kr", dscr = "Snippet for SyncSaw.kr, auto generated by SCNvim" }, {t("SyncSaw.kr"),t("("),t("syncFreq:"),i(1, "440.0"),t(", "), t("sawFreq:"),i(2, "440.0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Synth.new", name = "Synth.new", dscr = "Snippet for Synth.new, auto generated by SCNvim" }, {t("Synth.new"),t("("),t("defName:"),i(1, "nil"),t(", "), t("args:"),i(2, "nil"),t(", "), t("target:"),i(3, "nil"),t(", "), t("addAction:"),i(4, "addToHead"), t(")"),}),
s( {trig = "Synth.newPaused", name = "Synth.newPaused", dscr = "Snippet for Synth.newPaused, auto generated by SCNvim" }, {t("Synth.newPaused"),t("("),t("defName:"),i(1, "nil"),t(", "), t("args:"),i(2, "nil"),t(", "), t("target:"),i(3, "nil"),t(", "), t("addAction:"),i(4, "addToHead"), t(")"),}),
s( {trig = "Synth.replace", name = "Synth.replace", dscr = "Snippet for Synth.replace, auto generated by SCNvim" }, {t("Synth.replace"),t("("),t("nodeToReplace:"),i(1, "nil"),t(", "), t("defName:"),i(2, "nil"),t(", "), t("args:"),i(3, "nil"),t(", "), t("sameID:"),i(4, "false"), t(")"),}),
s( {trig = "Synth.basicNew", name = "Synth.basicNew", dscr = "Snippet for Synth.basicNew, auto generated by SCNvim" }, {t("Synth.basicNew"),t("("),t("defName:"),i(1, "nil"),t(", "), t("server:"),i(2, "nil"),t(", "), t("nodeID:"),i(3, "nil"), t(")"),}),
s( {trig = "Synth.after", name = "Synth.after", dscr = "Snippet for Synth.after, auto generated by SCNvim" }, {t("Synth.after"),t("("),t("aNode:"),i(1, "nil"),t(", "), t("defName:"),i(2, "nil"),t(", "), t("args:"),i(3, "nil"), t(")"),}),
s( {trig = "Synth.before", name = "Synth.before", dscr = "Snippet for Synth.before, auto generated by SCNvim" }, {t("Synth.before"),t("("),t("aNode:"),i(1, "nil"),t(", "), t("defName:"),i(2, "nil"),t(", "), t("args:"),i(3, "nil"), t(")"),}),
s( {trig = "Synth.head", name = "Synth.head", dscr = "Snippet for Synth.head, auto generated by SCNvim" }, {t("Synth.head"),t("("),t("aGroup:"),i(1, "nil"),t(", "), t("defName:"),i(2, "nil"),t(", "), t("args:"),i(3, "nil"), t(")"),}),
s( {trig = "Synth.tail", name = "Synth.tail", dscr = "Snippet for Synth.tail, auto generated by SCNvim" }, {t("Synth.tail"),t("("),t("aGroup:"),i(1, "nil"),t(", "), t("defName:"),i(2, "nil"),t(", "), t("args:"),i(3, "nil"), t(")"),}),
s( {trig = "Synth.grain", name = "Synth.grain", dscr = "Snippet for Synth.grain, auto generated by SCNvim" }, {t("Synth.grain"),t("("),t("defName:"),i(1, "nil"),t(", "), t("args:"),i(2, "nil"),t(", "), t("target:"),i(3, "nil"),t(", "), t("addAction:"),i(4, "addToHead"), t(")"),}),
s( {trig = "SynthDef.synthDefDir_", name = "SynthDef.synthDefDir_", dscr = "Snippet for SynthDef.synthDefDir_, auto generated by SCNvim" }, {t("SynthDef.synthDefDir_"),t("("),t("dir:"),i(1, "nil"), t(")"),}),
s( {trig = "SynthDef.initClass", name = "SynthDef.initClass", dscr = "Snippet for SynthDef.initClass, auto generated by SCNvim" }, {t("SynthDef.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SynthDef.new", name = "SynthDef.new", dscr = "Snippet for SynthDef.new, auto generated by SCNvim" }, {t("SynthDef.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("ugenGraphFunc:"),i(2, "nil"),t(", "), t("rates:"),i(3, "nil"),t(", "), t("prependArgs:"),i(4, "nil"),t(", "), t("variants:"),i(5, "nil"),t(", "), t("metadata:"),i(6, "nil"), t(")"),}),
s( {trig = "SynthDef.wrap", name = "SynthDef.wrap", dscr = "Snippet for SynthDef.wrap, auto generated by SCNvim" }, {t("SynthDef.wrap"),t("("),t("func:"),i(1, "nil"),t(", "), t("rates:"),i(2, "nil"),t(", "), t("prependArgs:"),i(3, "nil"), t(")"),}),
s( {trig = "SynthDef.writeOnce", name = "SynthDef.writeOnce", dscr = "Snippet for SynthDef.writeOnce, auto generated by SCNvim" }, {t("SynthDef.writeOnce"),t("("),t("name:"),i(1, "nil"),t(", "), t("func:"),i(2, "nil"),t(", "), t("rates:"),i(3, "nil"),t(", "), t("prependArgs:"),i(4, "nil"),t(", "), t("variants:"),i(5, "nil"),t(", "), t("dir:"),i(6, "nil"),t(", "), t("metadata:"),i(7, "nil"),t(", "), t("mdPlugin:"),i(8, "nil"), t(")"),}),
s( {trig = "SynthDef.removeAt", name = "SynthDef.removeAt", dscr = "Snippet for SynthDef.removeAt, auto generated by SCNvim" }, {t("SynthDef.removeAt"),t("("),t("name:"),i(1, "nil"),t(", "), t("libname:"),i(2, "global"), t(")"),}),
s( {trig = "SynthDefOld.new", name = "SynthDefOld.new", dscr = "Snippet for SynthDefOld.new, auto generated by SCNvim" }, {t("SynthDefOld.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("ugenGraphFunc:"),i(2, "nil"),t(", "), t("rates:"),i(3, "nil"),t(", "), t("prependArgs:"),i(4, "nil"),t(", "), t("variants:"),i(5, "nil"),t(", "), t("metadata:"),i(6, "nil"), t(")"),}),
s( {trig = "SynthDesc.newFrom", name = "SynthDesc.newFrom", dscr = "Snippet for SynthDesc.newFrom, auto generated by SCNvim" }, {t("SynthDesc.newFrom"),t("("),t("synthdef:"),i(1, "nil"), t(")"),}),
s( {trig = "SynthDesc.initClass", name = "SynthDesc.initClass", dscr = "Snippet for SynthDesc.initClass, auto generated by SCNvim" }, {t("SynthDesc.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SynthDesc.read", name = "SynthDesc.read", dscr = "Snippet for SynthDesc.read, auto generated by SCNvim" }, {t("SynthDesc.read"),t("("),t("path:"),i(1, "nil"),t(", "), t("keepDefs:"),i(2, "false"),t(", "), t("dict:"),i(3, "nil"), t(")"),}),
s( {trig = "SynthDesc.readFile", name = "SynthDesc.readFile", dscr = "Snippet for SynthDesc.readFile, auto generated by SCNvim" }, {t("SynthDesc.readFile"),t("("),t("stream:"),i(1, "nil"),t(", "), t("keepDefs:"),i(2, "false"),t(", "), t("dict:"),i(3, "nil"),t(", "), t("path:"),i(4, "nil"), t(")"),}),
s( {trig = "SynthDesc.defNameFromBytes", name = "SynthDesc.defNameFromBytes", dscr = "Snippet for SynthDesc.defNameFromBytes, auto generated by SCNvim" }, {t("SynthDesc.defNameFromBytes"),t("("),t("int8Array:"),i(1, "nil"), t(")"),}),
s( {trig = "SynthDescLib.new", name = "SynthDescLib.new", dscr = "Snippet for SynthDescLib.new, auto generated by SCNvim" }, {t("SynthDescLib.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("servers:"),i(2, "nil"), t(")"),}),
s( {trig = "SynthDescLib.initClass", name = "SynthDescLib.initClass", dscr = "Snippet for SynthDescLib.initClass, auto generated by SCNvim" }, {t("SynthDescLib.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SynthDescLib.getLib", name = "SynthDescLib.getLib", dscr = "Snippet for SynthDescLib.getLib, auto generated by SCNvim" }, {t("SynthDescLib.getLib"),t("("),t("libname:"),i(1, "nil"), t(")"),}),
s( {trig = "SynthDescLib.default", name = "SynthDescLib.default", dscr = "Snippet for SynthDescLib.default, auto generated by SCNvim" }, {t("SynthDescLib.default"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SynthDescLib.send", name = "SynthDescLib.send", dscr = "Snippet for SynthDescLib.send, auto generated by SCNvim" }, {t("SynthDescLib.send"),t("("),t("server:"),i(1, "nil"),t(", "), t("tryToLoadReconstructedDefs:"),i(2, "true"), t(")"),}),
s( {trig = "SynthDescLib.read", name = "SynthDescLib.read", dscr = "Snippet for SynthDescLib.read, auto generated by SCNvim" }, {t("SynthDescLib.read"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "SynthDescLib.at", name = "SynthDescLib.at", dscr = "Snippet for SynthDescLib.at, auto generated by SCNvim" }, {t("SynthDescLib.at"),t("("),t("i:"),i(1, "nil"), t(")"),}),
s( {trig = "SynthDescLib.match", name = "SynthDescLib.match", dscr = "Snippet for SynthDescLib.match, auto generated by SCNvim" }, {t("SynthDescLib.match"),t("("),t("key:"),i(1, "nil"), t(")"),}),
s( {trig = "SystemClock.clear", name = "SystemClock.clear", dscr = "Snippet for SystemClock.clear, auto generated by SCNvim" }, {t("SystemClock.clear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SystemClock.sched", name = "SystemClock.sched", dscr = "Snippet for SystemClock.sched, auto generated by SCNvim" }, {t("SystemClock.sched"),t("("),t("delta:"),i(1, "nil"),t(", "), t("item:"),i(2, "nil"), t(")"),}),
s( {trig = "SystemClock.schedAbs", name = "SystemClock.schedAbs", dscr = "Snippet for SystemClock.schedAbs, auto generated by SCNvim" }, {t("SystemClock.schedAbs"),t("("),t("time:"),i(1, "nil"),t(", "), t("item:"),i(2, "nil"), t(")"),}),
s( {trig = "SystemClock.prClear", name = "SystemClock.prClear", dscr = "Snippet for SystemClock.prClear, auto generated by SCNvim" }, {t("SystemClock.prClear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SystemSynthDefs.generateTempName", name = "SystemSynthDefs.generateTempName", dscr = "Snippet for SystemSynthDefs.generateTempName, auto generated by SCNvim" }, {t("SystemSynthDefs.generateTempName"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "SystemSynthDefs.initClass", name = "SystemSynthDefs.initClass", dscr = "Snippet for SystemSynthDefs.initClass, auto generated by SCNvim" }, {t("SystemSynthDefs.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "T2A.ar", name = "T2A.ar", dscr = "Snippet for T2A.ar, auto generated by SCNvim" }, {t("T2A.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("offset:"),i(2, "0"), t(")"),}),
s( {trig = "TBall.ar", name = "TBall.ar", dscr = "Snippet for TBall.ar, auto generated by SCNvim" }, {t("TBall.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("g:"),i(2, "10"),t(", "), t("damp:"),i(3, "0"),t(", "), t("friction:"),i(4, "0.01"), t(")"),}),
s( {trig = "TBall.kr", name = "TBall.kr", dscr = "Snippet for TBall.kr, auto generated by SCNvim" }, {t("TBall.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("g:"),i(2, "10"),t(", "), t("damp:"),i(3, "0"),t(", "), t("friction:"),i(4, "0.01"), t(")"),}),
s( {trig = "TBetaRand.ar", name = "TBetaRand.ar", dscr = "Snippet for TBetaRand.ar, auto generated by SCNvim" }, {t("TBetaRand.ar"),t("("),t("lo:"),i(1, "0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("prob1:"),i(3, "nil"),t(", "), t("prob2:"),i(4, "nil"),t(", "), t("trig:"),i(5, "0.0"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "TBetaRand.kr", name = "TBetaRand.kr", dscr = "Snippet for TBetaRand.kr, auto generated by SCNvim" }, {t("TBetaRand.kr"),t("("),t("lo:"),i(1, "0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("prob1:"),i(3, "nil"),t(", "), t("prob2:"),i(4, "nil"),t(", "), t("trig:"),i(5, "0.0"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "TBrownRand.ar", name = "TBrownRand.ar", dscr = "Snippet for TBrownRand.ar, auto generated by SCNvim" }, {t("TBrownRand.ar"),t("("),t("lo:"),i(1, "0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("dev:"),i(3, "1.0"),t(", "), t("dist:"),i(4, "0"),t(", "), t("trig:"),i(5, "0"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "TBrownRand.kr", name = "TBrownRand.kr", dscr = "Snippet for TBrownRand.kr, auto generated by SCNvim" }, {t("TBrownRand.kr"),t("("),t("lo:"),i(1, "0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("dev:"),i(3, "1.0"),t(", "), t("dist:"),i(4, "0"),t(", "), t("trig:"),i(5, "0"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "TChoose.ar", name = "TChoose.ar", dscr = "Snippet for TChoose.ar, auto generated by SCNvim" }, {t("TChoose.ar"),t("("),t("trig:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"), t(")"),}),
s( {trig = "TChoose.kr", name = "TChoose.kr", dscr = "Snippet for TChoose.kr, auto generated by SCNvim" }, {t("TChoose.kr"),t("("),t("trig:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"), t(")"),}),
s( {trig = "TDuty.ar", name = "TDuty.ar", dscr = "Snippet for TDuty.ar, auto generated by SCNvim" }, {t("TDuty.ar"),t("("),t("dur:"),i(1, "1.0"),t(", "), t("reset:"),i(2, "0.0"),t(", "), t("level:"),i(3, "1.0"),t(", "), t("doneAction:"),i(4, "0"),t(", "), t("gapFirst:"),i(5, "0"), t(")"),}),
s( {trig = "TDuty.kr", name = "TDuty.kr", dscr = "Snippet for TDuty.kr, auto generated by SCNvim" }, {t("TDuty.kr"),t("("),t("dur:"),i(1, "1.0"),t(", "), t("reset:"),i(2, "0.0"),t(", "), t("level:"),i(3, "1.0"),t(", "), t("doneAction:"),i(4, "0"),t(", "), t("gapFirst:"),i(5, "0"), t(")"),}),
s( {trig = "TExpRand.ar", name = "TExpRand.ar", dscr = "Snippet for TExpRand.ar, auto generated by SCNvim" }, {t("TExpRand.ar"),t("("),t("lo:"),i(1, "0.01"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("trig:"),i(3, "0.0"), t(")"),}),
s( {trig = "TExpRand.kr", name = "TExpRand.kr", dscr = "Snippet for TExpRand.kr, auto generated by SCNvim" }, {t("TExpRand.kr"),t("("),t("lo:"),i(1, "0.01"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("trig:"),i(3, "0.0"), t(")"),}),
s( {trig = "TGaussRand.ar", name = "TGaussRand.ar", dscr = "Snippet for TGaussRand.ar, auto generated by SCNvim" }, {t("TGaussRand.ar"),t("("),t("lo:"),i(1, "0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("trig:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "TGaussRand.kr", name = "TGaussRand.kr", dscr = "Snippet for TGaussRand.kr, auto generated by SCNvim" }, {t("TGaussRand.kr"),t("("),t("lo:"),i(1, "0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("trig:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "TGrains.ar", name = "TGrains.ar", dscr = "Snippet for TGrains.ar, auto generated by SCNvim" }, {t("TGrains.ar"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("bufnum:"),i(3, "0"),t(", "), t("rate:"),i(4, "1"),t(", "), t("centerPos:"),i(5, "0"),t(", "), t("dur:"),i(6, "0.1"),t(", "), t("pan:"),i(7, "0"),t(", "), t("amp:"),i(8, "0.1"),t(", "), t("interp:"),i(9, "4"), t(")"),}),
s( {trig = "TGrains2.ar", name = "TGrains2.ar", dscr = "Snippet for TGrains2.ar, auto generated by SCNvim" }, {t("TGrains2.ar"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("bufnum:"),i(3, "0"),t(", "), t("rate:"),i(4, "1"),t(", "), t("centerPos:"),i(5, "0"),t(", "), t("dur:"),i(6, "0.1"),t(", "), t("pan:"),i(7, "0"),t(", "), t("amp:"),i(8, "0.1"),t(", "), t("att:"),i(9, "0.5"),t(", "), t("dec:"),i(10, "0.5"),t(", "), t("interp:"),i(11, "4"), t(")"),}),
s( {trig = "TGrains3.ar", name = "TGrains3.ar", dscr = "Snippet for TGrains3.ar, auto generated by SCNvim" }, {t("TGrains3.ar"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("trigger:"),i(2, "0"),t(", "), t("bufnum:"),i(3, "0"),t(", "), t("rate:"),i(4, "1"),t(", "), t("centerPos:"),i(5, "0"),t(", "), t("dur:"),i(6, "0.1"),t(", "), t("pan:"),i(7, "0"),t(", "), t("amp:"),i(8, "0.1"),t(", "), t("att:"),i(9, "0.5"),t(", "), t("dec:"),i(10, "0.5"),t(", "), t("window:"),i(11, "1"),t(", "), t("interp:"),i(12, "4"), t(")"),}),
s( {trig = "TIRand.kr", name = "TIRand.kr", dscr = "Snippet for TIRand.kr, auto generated by SCNvim" }, {t("TIRand.kr"),t("("),t("lo:"),i(1, "0"),t(", "), t("hi:"),i(2, "127"),t(", "), t("trig:"),i(3, "0.0"), t(")"),}),
s( {trig = "TIRand.ar", name = "TIRand.ar", dscr = "Snippet for TIRand.ar, auto generated by SCNvim" }, {t("TIRand.ar"),t("("),t("lo:"),i(1, "0"),t(", "), t("hi:"),i(2, "127"),t(", "), t("trig:"),i(3, "0.0"), t(")"),}),
s( {trig = "TPV.ar", name = "TPV.ar", dscr = "Snippet for TPV.ar, auto generated by SCNvim" }, {t("TPV.ar"),t("("),t("chain:"),i(1, "nil"),t(", "), t("windowsize:"),i(2, "1024"),t(", "), t("hopsize:"),i(3, "512"),t(", "), t("maxpeaks:"),i(4, "80"),t(", "), t("currentpeaks:"),i(5, "nil"),t(", "), t("freqmult:"),i(6, "1.0"),t(", "), t("tolerance:"),i(7, "4"),t(", "), t("noisefloor:"),i(8, "0.2"),t(", "), t("mul:"),i(9, "1.0"),t(", "), t("add:"),i(10, "0.0"), t(")"),}),
s( {trig = "TRand.ar", name = "TRand.ar", dscr = "Snippet for TRand.ar, auto generated by SCNvim" }, {t("TRand.ar"),t("("),t("lo:"),i(1, "0.0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("trig:"),i(3, "0.0"), t(")"),}),
s( {trig = "TRand.kr", name = "TRand.kr", dscr = "Snippet for TRand.kr, auto generated by SCNvim" }, {t("TRand.kr"),t("("),t("lo:"),i(1, "0.0"),t(", "), t("hi:"),i(2, "1.0"),t(", "), t("trig:"),i(3, "0.0"), t(")"),}),
s( {trig = "TTendency.ar", name = "TTendency.ar", dscr = "Snippet for TTendency.ar, auto generated by SCNvim" }, {t("TTendency.ar"),t("("),t("trigger:"),i(1, "nil"),t(", "), t("dist:"),i(2, "0"),t(", "), t("parX:"),i(3, "0"),t(", "), t("parY:"),i(4, "1"),t(", "), t("parA:"),i(5, "0"),t(", "), t("parB:"),i(6, "0"), t(")"),}),
s( {trig = "TTendency.kr", name = "TTendency.kr", dscr = "Snippet for TTendency.kr, auto generated by SCNvim" }, {t("TTendency.kr"),t("("),t("trigger:"),i(1, "nil"),t(", "), t("dist:"),i(2, "0"),t(", "), t("parX:"),i(3, "0"),t(", "), t("parY:"),i(4, "1"),t(", "), t("parA:"),i(5, "0"),t(", "), t("parB:"),i(6, "0"), t(")"),}),
s( {trig = "TWChoose.ar", name = "TWChoose.ar", dscr = "Snippet for TWChoose.ar, auto generated by SCNvim" }, {t("TWChoose.ar"),t("("),t("trig:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"),t(", "), t("weights:"),i(3, "nil"),t(", "), t("normalize:"),i(4, "0"), t(")"),}),
s( {trig = "TWChoose.kr", name = "TWChoose.kr", dscr = "Snippet for TWChoose.kr, auto generated by SCNvim" }, {t("TWChoose.kr"),t("("),t("trig:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"),t(", "), t("weights:"),i(3, "nil"),t(", "), t("normalize:"),i(4, "0"), t(")"),}),
s( {trig = "TWindex.ar", name = "TWindex.ar", dscr = "Snippet for TWindex.ar, auto generated by SCNvim" }, {t("TWindex.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"),t(", "), t("normalize:"),i(3, "0"), t(")"),}),
s( {trig = "TWindex.kr", name = "TWindex.kr", dscr = "Snippet for TWindex.kr, auto generated by SCNvim" }, {t("TWindex.kr"),t("("),t("in:"),i(1, "nil"),t(", "), t("array:"),i(2, "nil"),t(", "), t("normalize:"),i(3, "0"), t(")"),}),
s( {trig = "Tap.ar", name = "Tap.ar", dscr = "Snippet for Tap.ar, auto generated by SCNvim" }, {t("Tap.ar"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("numChannels:"),i(2, "1"),t(", "), t("delaytime:"),i(3, "0.2"), t(")"),}),
s( {trig = "TapN.ar", name = "TapN.ar", dscr = "Snippet for TapN.ar, auto generated by SCNvim" }, {t("TapN.ar"),t("("),t("bufnum:"),i(1, "nil"),t(", "), t("numChannels:"),i(2, "1"),t(", "), t("delaytime:"),i(3, "0.2"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Tartini.kr", name = "Tartini.kr", dscr = "Snippet for Tartini.kr, auto generated by SCNvim" }, {t("Tartini.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("threshold:"),i(2, "0.93"),t(", "), t("n:"),i(3, "2048"),t(", "), t("k:"),i(4, "0"),t(", "), t("overlap:"),i(5, "1024"),t(", "), t("smallCutoff:"),i(6, "0.5"), t(")"),}),
s( {trig = "Task.new", name = "Task.new", dscr = "Snippet for Task.new, auto generated by SCNvim" }, {t("Task.new"),t("("),t("func:"),i(1, "nil"),t(", "), t("clock:"),i(2, "nil"), t(")"),}),
s( {trig = "TaskProxy.default", name = "TaskProxy.default", dscr = "Snippet for TaskProxy.default, auto generated by SCNvim" }, {t("TaskProxy.default"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TaskProxyAllGui.observedClass", name = "TaskProxyAllGui.observedClass", dscr = "Snippet for TaskProxyAllGui.observedClass, auto generated by SCNvim" }, {t("TaskProxyAllGui.observedClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TaskProxyAllGui.tpGuiClass", name = "TaskProxyAllGui.tpGuiClass", dscr = "Snippet for TaskProxyAllGui.tpGuiClass, auto generated by SCNvim" }, {t("TaskProxyAllGui.tpGuiClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TaskProxyAllGui.observedAll", name = "TaskProxyAllGui.observedAll", dscr = "Snippet for TaskProxyAllGui.observedAll, auto generated by SCNvim" }, {t("TaskProxyAllGui.observedAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TaskProxyAllGui.new", name = "TaskProxyAllGui.new", dscr = "Snippet for TaskProxyAllGui.new, auto generated by SCNvim" }, {t("TaskProxyAllGui.new"),t("("),t("numItems:"),i(1, "16"),t(", "), t("parent:"),i(2, "nil"),t(", "), t("bounds:"),i(3, "nil"),t(", "), t("makeSkip:"),i(4, "true"),t(", "), t("options:"),i(5, "[]"), t(")"),}),
s( {trig = "TaskProxyGui.observedClass", name = "TaskProxyGui.observedClass", dscr = "Snippet for TaskProxyGui.observedClass, auto generated by SCNvim" }, {t("TaskProxyGui.observedClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Tdef.initClass", name = "Tdef.initClass", dscr = "Snippet for Tdef.initClass, auto generated by SCNvim" }, {t("Tdef.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Tdef.new", name = "Tdef.new", dscr = "Snippet for Tdef.new, auto generated by SCNvim" }, {t("Tdef.new"),t("("),t("key:"),i(1, "nil"),t(", "), t("item:"),i(2, "nil"), t(")"),}),
s( {trig = "Tdef.hasGlobalDictionary", name = "Tdef.hasGlobalDictionary", dscr = "Snippet for Tdef.hasGlobalDictionary, auto generated by SCNvim" }, {t("Tdef.hasGlobalDictionary"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Tdef.gui", name = "Tdef.gui", dscr = "Snippet for Tdef.gui, auto generated by SCNvim" }, {t("Tdef.gui"),t("("),t("numItems:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("preset:"),i(3, "nil"), t(")"),}),
s( {trig = "TdefAllGui.observedClass", name = "TdefAllGui.observedClass", dscr = "Snippet for TdefAllGui.observedClass, auto generated by SCNvim" }, {t("TdefAllGui.observedClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TdefAllGui.tpGuiClass", name = "TdefAllGui.tpGuiClass", dscr = "Snippet for TdefAllGui.tpGuiClass, auto generated by SCNvim" }, {t("TdefAllGui.tpGuiClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TdefGui.observedClass", name = "TdefGui.observedClass", dscr = "Snippet for TdefGui.observedClass, auto generated by SCNvim" }, {t("TdefGui.observedClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoBusClock.new", name = "TempoBusClock.new", dscr = "Snippet for TempoBusClock.new, auto generated by SCNvim" }, {t("TempoBusClock.new"),t("("),t("control:"),i(1, "nil"),t(", "), t("tempo:"),i(2, "nil"),t(", "), t("beats:"),i(3, "nil"),t(", "), t("seconds:"),i(4, "nil"), t(")"),}),
s( {trig = "TempoClock.new", name = "TempoClock.new", dscr = "Snippet for TempoClock.new, auto generated by SCNvim" }, {t("TempoClock.new"),t("("),t("tempo:"),i(1, "nil"),t(", "), t("beats:"),i(2, "nil"),t(", "), t("seconds:"),i(3, "nil"),t(", "), t("queueSize:"),i(4, "256"), t(")"),}),
s( {trig = "TempoClock.initClass", name = "TempoClock.initClass", dscr = "Snippet for TempoClock.initClass, auto generated by SCNvim" }, {t("TempoClock.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.cmdPeriod", name = "TempoClock.cmdPeriod", dscr = "Snippet for TempoClock.cmdPeriod, auto generated by SCNvim" }, {t("TempoClock.cmdPeriod"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.stop", name = "TempoClock.stop", dscr = "Snippet for TempoClock.stop, auto generated by SCNvim" }, {t("TempoClock.stop"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.play", name = "TempoClock.play", dscr = "Snippet for TempoClock.play, auto generated by SCNvim" }, {t("TempoClock.play"),t("("),t("task:"),i(1, "nil"),t(", "), t("quant:"),i(2, "nil"), t(")"),}),
s( {trig = "TempoClock.sched", name = "TempoClock.sched", dscr = "Snippet for TempoClock.sched, auto generated by SCNvim" }, {t("TempoClock.sched"),t("("),t("delta:"),i(1, "nil"),t(", "), t("item:"),i(2, "nil"), t(")"),}),
s( {trig = "TempoClock.schedAbs", name = "TempoClock.schedAbs", dscr = "Snippet for TempoClock.schedAbs, auto generated by SCNvim" }, {t("TempoClock.schedAbs"),t("("),t("beat:"),i(1, "nil"),t(", "), t("item:"),i(2, "nil"), t(")"),}),
s( {trig = "TempoClock.clear", name = "TempoClock.clear", dscr = "Snippet for TempoClock.clear, auto generated by SCNvim" }, {t("TempoClock.clear"),t("("),t("releaseNodes:"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.tempo_", name = "TempoClock.tempo_", dscr = "Snippet for TempoClock.tempo_, auto generated by SCNvim" }, {t("TempoClock.tempo_"),t("("),t("newTempo:"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.etempo_", name = "TempoClock.etempo_", dscr = "Snippet for TempoClock.etempo_, auto generated by SCNvim" }, {t("TempoClock.etempo_"),t("("),t("newTempo:"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.tempo", name = "TempoClock.tempo", dscr = "Snippet for TempoClock.tempo, auto generated by SCNvim" }, {t("TempoClock.tempo"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.beats", name = "TempoClock.beats", dscr = "Snippet for TempoClock.beats, auto generated by SCNvim" }, {t("TempoClock.beats"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.beats2secs", name = "TempoClock.beats2secs", dscr = "Snippet for TempoClock.beats2secs, auto generated by SCNvim" }, {t("TempoClock.beats2secs"),t("("),t("beats:"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.secs2beats", name = "TempoClock.secs2beats", dscr = "Snippet for TempoClock.secs2beats, auto generated by SCNvim" }, {t("TempoClock.secs2beats"),t("("),t("secs:"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.nextTimeOnGrid", name = "TempoClock.nextTimeOnGrid", dscr = "Snippet for TempoClock.nextTimeOnGrid, auto generated by SCNvim" }, {t("TempoClock.nextTimeOnGrid"),t("("),t("quant:"),i(1, "1"),t(", "), t("phase:"),i(2, "0"),t(", "), t("referenceBeat:"),i(3, "nil"), t(")"),}),
s( {trig = "TempoClock.timeToNextBeat", name = "TempoClock.timeToNextBeat", dscr = "Snippet for TempoClock.timeToNextBeat, auto generated by SCNvim" }, {t("TempoClock.timeToNextBeat"),t("("),t("quant:"),i(1, "1"), t(")"),}),
s( {trig = "TempoClock.setTempoAtBeat", name = "TempoClock.setTempoAtBeat", dscr = "Snippet for TempoClock.setTempoAtBeat, auto generated by SCNvim" }, {t("TempoClock.setTempoAtBeat"),t("("),t("newTempo:"),i(1, "nil"),t(", "), t("beats:"),i(2, "nil"), t(")"),}),
s( {trig = "TempoClock.setTempoAtSec", name = "TempoClock.setTempoAtSec", dscr = "Snippet for TempoClock.setTempoAtSec, auto generated by SCNvim" }, {t("TempoClock.setTempoAtSec"),t("("),t("newTempo:"),i(1, "nil"),t(", "), t("secs:"),i(2, "nil"), t(")"),}),
s( {trig = "TempoClock.setMeterAtBeat", name = "TempoClock.setMeterAtBeat", dscr = "Snippet for TempoClock.setMeterAtBeat, auto generated by SCNvim" }, {t("TempoClock.setMeterAtBeat"),t("("),t("newBeatsPerBar:"),i(1, "nil"),t(", "), t("beats:"),i(2, "nil"), t(")"),}),
s( {trig = "TempoClock.beatsPerBar", name = "TempoClock.beatsPerBar", dscr = "Snippet for TempoClock.beatsPerBar, auto generated by SCNvim" }, {t("TempoClock.beatsPerBar"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.baseBarBeat", name = "TempoClock.baseBarBeat", dscr = "Snippet for TempoClock.baseBarBeat, auto generated by SCNvim" }, {t("TempoClock.baseBarBeat"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.baseBar", name = "TempoClock.baseBar", dscr = "Snippet for TempoClock.baseBar, auto generated by SCNvim" }, {t("TempoClock.baseBar"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.playNextBar", name = "TempoClock.playNextBar", dscr = "Snippet for TempoClock.playNextBar, auto generated by SCNvim" }, {t("TempoClock.playNextBar"),t("("),t("task:"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.beatDur", name = "TempoClock.beatDur", dscr = "Snippet for TempoClock.beatDur, auto generated by SCNvim" }, {t("TempoClock.beatDur"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.elapsedBeats", name = "TempoClock.elapsedBeats", dscr = "Snippet for TempoClock.elapsedBeats, auto generated by SCNvim" }, {t("TempoClock.elapsedBeats"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.beatsPerBar_", name = "TempoClock.beatsPerBar_", dscr = "Snippet for TempoClock.beatsPerBar_, auto generated by SCNvim" }, {t("TempoClock.beatsPerBar_"),t("("),t("newBeatsPerBar:"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.beats2bars", name = "TempoClock.beats2bars", dscr = "Snippet for TempoClock.beats2bars, auto generated by SCNvim" }, {t("TempoClock.beats2bars"),t("("),t("beats:"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.bars2beats", name = "TempoClock.bars2beats", dscr = "Snippet for TempoClock.bars2beats, auto generated by SCNvim" }, {t("TempoClock.bars2beats"),t("("),t("bars:"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.bar", name = "TempoClock.bar", dscr = "Snippet for TempoClock.bar, auto generated by SCNvim" }, {t("TempoClock.bar"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.nextBar", name = "TempoClock.nextBar", dscr = "Snippet for TempoClock.nextBar, auto generated by SCNvim" }, {t("TempoClock.nextBar"),t("("),t("beat:"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.beatInBar", name = "TempoClock.beatInBar", dscr = "Snippet for TempoClock.beatInBar, auto generated by SCNvim" }, {t("TempoClock.beatInBar"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TempoClock.isRunning", name = "TempoClock.isRunning", dscr = "Snippet for TempoClock.isRunning, auto generated by SCNvim" }, {t("TempoClock.isRunning"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TermanWang.ar", name = "TermanWang.ar", dscr = "Snippet for TermanWang.ar, auto generated by SCNvim" }, {t("TermanWang.ar"),t("("),t("input:"),i(1, "0"),t(", "), t("reset:"),i(2, "0"),t(", "), t("ratex:"),i(3, "0.01"),t(", "), t("ratey:"),i(4, "0.01"),t(", "), t("alpha:"),i(5, "1.0"),t(", "), t("beta:"),i(6, "1.0"),t(", "), t("eta:"),i(7, "1.0"),t(", "), t("initx:"),i(8, "0"),t(", "), t("inity:"),i(9, "0"),t(", "), t("mul:"),i(10, "1.0"),t(", "), t("add:"),i(11, "0.0"), t(")"),}),
s( {trig = "TextArchiveMDPlugin.writeMetadataFile", name = "TextArchiveMDPlugin.writeMetadataFile", dscr = "Snippet for TextArchiveMDPlugin.writeMetadataFile, auto generated by SCNvim" }, {t("TextArchiveMDPlugin.writeMetadataFile"),t("("),t("metadata:"),i(1, "nil"),t(", "), t("synthdef:"),i(2, "nil"),t(", "), t("path:"),i(3, "nil"), t(")"),}),
s( {trig = "TextArchiveMDPlugin.readMetadataFile", name = "TextArchiveMDPlugin.readMetadataFile", dscr = "Snippet for TextArchiveMDPlugin.readMetadataFile, auto generated by SCNvim" }, {t("TextArchiveMDPlugin.readMetadataFile"),t("("),t("path:"),i(1, "nil"), t(")"),}),
s( {trig = "TextArchiveMDPlugin.mdExtension", name = "TextArchiveMDPlugin.mdExtension", dscr = "Snippet for TextArchiveMDPlugin.mdExtension, auto generated by SCNvim" }, {t("TextArchiveMDPlugin.mdExtension"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TextField.qtClass", name = "TextField.qtClass", dscr = "Snippet for TextField.qtClass, auto generated by SCNvim" }, {t("TextField.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TextVU.ar", name = "TextVU.ar", dscr = "Snippet for TextVU.ar, auto generated by SCNvim" }, {t("TextVU.ar"),t("("),t("trig:"),i(1, "2"),t(", "), t("in:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("width:"),i(4, "21"),t(", "), t("reset:"),i(5, "0"),t(", "), t("ana:"),i(6, "nil"), t(")"),}),
s( {trig = "TextVU.kr", name = "TextVU.kr", dscr = "Snippet for TextVU.kr, auto generated by SCNvim" }, {t("TextVU.kr"),t("("),t("trig:"),i(1, "2"),t(", "), t("in:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("width:"),i(4, "21"),t(", "), t("reset:"),i(5, "0"),t(", "), t("ana:"),i(6, "nil"), t(")"),}),
s( {trig = "TextVU.new", name = "TextVU.new", dscr = "Snippet for TextVU.new, auto generated by SCNvim" }, {t("TextVU.new"),t("("),t("trig:"),i(1, "2"),t(", "), t("in:"),i(2, "nil"),t(", "), t("label:"),i(3, "nil"),t(", "), t("width:"),i(4, "21"),t(", "), t("reset:"),i(5, "0"),t(", "), t("ana:"),i(6, "nil"), t(")"),}),
s( {trig = "TextVU.new1", name = "TextVU.new1", dscr = "Snippet for TextVU.new1, auto generated by SCNvim" }, {t("TextVU.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("trig:"),i(2, "nil"),t(", "), t("in:"),i(3, "nil"),t(", "), t("label:"),i(4, "nil"),t(", "), t("width:"),i(5, "21"),t(", "), t("reset:"),i(6, "0"),t(", "), t("ana:"),i(7, "nil"), t(")"),}),
s( {trig = "TextView.qtClass", name = "TextView.qtClass", dscr = "Snippet for TextView.qtClass, auto generated by SCNvim" }, {t("TextView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Thread.new", name = "Thread.new", dscr = "Snippet for Thread.new, auto generated by SCNvim" }, {t("Thread.new"),t("("),t("func:"),i(1, "nil"),t(", "), t("stackSize:"),i(2, "512"), t(")"),}),
s( {trig = "Thread.primitiveError", name = "Thread.primitiveError", dscr = "Snippet for Thread.primitiveError, auto generated by SCNvim" }, {t("Thread.primitiveError"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Thread.primitiveErrorString", name = "Thread.primitiveErrorString", dscr = "Snippet for Thread.primitiveErrorString, auto generated by SCNvim" }, {t("Thread.primitiveErrorString"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Thunk.new", name = "Thunk.new", dscr = "Snippet for Thunk.new, auto generated by SCNvim" }, {t("Thunk.new"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "Tilt.ar", name = "Tilt.ar", dscr = "Snippet for Tilt.ar, auto generated by SCNvim" }, {t("Tilt.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("tilt:"),i(5, "nil"), t(")"),}),
s( {trig = "Timer.ar", name = "Timer.ar", dscr = "Snippet for Timer.ar, auto generated by SCNvim" }, {t("Timer.ar"),t("("),t("trig:"),i(1, "0.0"), t(")"),}),
s( {trig = "Timer.kr", name = "Timer.kr", dscr = "Snippet for Timer.kr, auto generated by SCNvim" }, {t("Timer.kr"),t("("),t("trig:"),i(1, "0.0"), t(")"),}),
s( {trig = "ToggleFF.ar", name = "ToggleFF.ar", dscr = "Snippet for ToggleFF.ar, auto generated by SCNvim" }, {t("ToggleFF.ar"),t("("),t("trig:"),i(1, "0.0"), t(")"),}),
s( {trig = "ToggleFF.kr", name = "ToggleFF.kr", dscr = "Snippet for ToggleFF.kr, auto generated by SCNvim" }, {t("ToggleFF.kr"),t("("),t("trig:"),i(1, "0.0"), t(")"),}),
s( {trig = "ToolBar.qtClass", name = "ToolBar.qtClass", dscr = "Snippet for ToolBar.qtClass, auto generated by SCNvim" }, {t("ToolBar.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ToolBar.new", name = "ToolBar.new", dscr = "Snippet for ToolBar.new, auto generated by SCNvim" }, {t("ToolBar.new"),t("("),t("actions:"),i(1, "[]"), t(")"),}),
s( {trig = "TopView.qtClass", name = "TopView.qtClass", dscr = "Snippet for TopView.qtClass, auto generated by SCNvim" }, {t("TopView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TopView.new", name = "TopView.new", dscr = "Snippet for TopView.new, auto generated by SCNvim" }, {t("TopView.new"),t("("),t("win:"),i(1, "nil"),t(", "), t("name:"),i(2, "nil"),t(", "), t("bounds:"),i(3, "nil"),t(", "), t("resizable:"),i(4, "nil"),t(", "), t("border:"),i(5, "nil"), t(")"),}),
s( {trig = "TouchResponder.new", name = "TouchResponder.new", dscr = "Snippet for TouchResponder.new, auto generated by SCNvim" }, {t("TouchResponder.new"),t("("),t("function:"),i(1, "nil"),t(", "), t("src:"),i(2, "nil"),t(", "), t("chan:"),i(3, "nil"),t(", "), t("value:"),i(4, "nil"),t(", "), t("install:"),i(5, "true"),t(", "), t("swallowEvent:"),i(6, "false"), t(")"),}),
s( {trig = "TouchResponder.init", name = "TouchResponder.init", dscr = "Snippet for TouchResponder.init, auto generated by SCNvim" }, {t("TouchResponder.init"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TouchResponder.initialized", name = "TouchResponder.initialized", dscr = "Snippet for TouchResponder.initialized, auto generated by SCNvim" }, {t("TouchResponder.initialized"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TouchResponder.responders", name = "TouchResponder.responders", dscr = "Snippet for TouchResponder.responders, auto generated by SCNvim" }, {t("TouchResponder.responders"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TouchResponder.add", name = "TouchResponder.add", dscr = "Snippet for TouchResponder.add, auto generated by SCNvim" }, {t("TouchResponder.add"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "TouchResponder.remove", name = "TouchResponder.remove", dscr = "Snippet for TouchResponder.remove, auto generated by SCNvim" }, {t("TouchResponder.remove"),t("("),t("resp:"),i(1, "nil"), t(")"),}),
s( {trig = "Trafo.basicNew", name = "Trafo.basicNew", dscr = "Snippet for Trafo.basicNew, auto generated by SCNvim" }, {t("Trafo.basicNew"),t("("),t("matrix:"),i(1, "nil"), t(")"),}),
s( {trig = "Trafo.newFromRotTrans", name = "Trafo.newFromRotTrans", dscr = "Snippet for Trafo.newFromRotTrans, auto generated by SCNvim" }, {t("Trafo.newFromRotTrans"),t("("),t("rot:"),i(1, "nil"),t(", "), t("trans:"),i(2, "nil"), t(")"),}),
s( {trig = "Trafo.new", name = "Trafo.new", dscr = "Snippet for Trafo.new, auto generated by SCNvim" }, {t("Trafo.new"),t("("),t("basis:"),i(1, "nil"),t(", "), t("d:"),i(2, "nil"), t(")"),}),
s( {trig = "Trafo.from3dPoints", name = "Trafo.from3dPoints", dscr = "Snippet for Trafo.from3dPoints, auto generated by SCNvim" }, {t("Trafo.from3dPoints"),t("("),t("a:"),i(1, "nil"),t(", "), t("b:"),i(2, "nil"),t(", "), t("c:"),i(3, "nil"), t(")"),}),
s( {trig = "Trafo.inverseFrom3dPoints", name = "Trafo.inverseFrom3dPoints", dscr = "Snippet for Trafo.inverseFrom3dPoints, auto generated by SCNvim" }, {t("Trafo.inverseFrom3dPoints"),t("("),t("a:"),i(1, "nil"),t(", "), t("b:"),i(2, "nil"),t(", "), t("c:"),i(3, "nil"), t(")"),}),
s( {trig = "Trafo.pr_Point3toBasis", name = "Trafo.pr_Point3toBasis", dscr = "Snippet for Trafo.pr_Point3toBasis, auto generated by SCNvim" }, {t("Trafo.pr_Point3toBasis"),t("("),t("a:"),i(1, "nil"),t(", "), t("b:"),i(2, "nil"),t(", "), t("c:"),i(3, "nil"), t(")"),}),
s( {trig = "Trafo.pr_normVec", name = "Trafo.pr_normVec", dscr = "Snippet for Trafo.pr_normVec, auto generated by SCNvim" }, {t("Trafo.pr_normVec"),t("("),t("a:"),i(1, "nil"), t(")"),}),
s( {trig = "Trafo.pr_cross", name = "Trafo.pr_cross", dscr = "Snippet for Trafo.pr_cross, auto generated by SCNvim" }, {t("Trafo.pr_cross"),t("("),t("a:"),i(1, "nil"),t(", "), t("b:"),i(2, "nil"), t(")"),}),
s( {trig = "TreeView.qtClass", name = "TreeView.qtClass", dscr = "Snippet for TreeView.qtClass, auto generated by SCNvim" }, {t("TreeView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Trig1.ar", name = "Trig1.ar", dscr = "Snippet for Trig1.ar, auto generated by SCNvim" }, {t("Trig1.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("dur:"),i(2, "0.1"), t(")"),}),
s( {trig = "Trig1.kr", name = "Trig1.kr", dscr = "Snippet for Trig1.kr, auto generated by SCNvim" }, {t("Trig1.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("dur:"),i(2, "0.1"), t(")"),}),
s( {trig = "TrigAvg.kr", name = "TrigAvg.kr", dscr = "Snippet for TrigAvg.kr, auto generated by SCNvim" }, {t("TrigAvg.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("trig:"),i(2, "0"), t(")"),}),
s( {trig = "Tumble.ar", name = "Tumble.ar", dscr = "Snippet for Tumble.ar, auto generated by SCNvim" }, {t("Tumble.ar"),t("("),t("w:"),i(1, "nil"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("z:"),i(4, "nil"),t(", "), t("tilt:"),i(5, "nil"), t(")"),}),
s( {trig = "Tuning.new", name = "Tuning.new", dscr = "Snippet for Tuning.new, auto generated by SCNvim" }, {t("Tuning.new"),t("("),t("tuning:"),i(1, "nil"),t(", "), t("octaveRatio:"),i(2, "2.0"),t(", "), t("name:"),i(3, "UnknownTuning"), t(")"),}),
s( {trig = "Tuning.at", name = "Tuning.at", dscr = "Snippet for Tuning.at, auto generated by SCNvim" }, {t("Tuning.at"),t("("),t("key:"),i(1, "nil"), t(")"),}),
s( {trig = "Tuning.doesNotUnderstand", name = "Tuning.doesNotUnderstand", dscr = "Snippet for Tuning.doesNotUnderstand, auto generated by SCNvim" }, {t("Tuning.doesNotUnderstand"),t("("),t("selector:"),i(1, "nil"),t(", "), t("args:"),i(2, "nil"), t(")"),}),
s( {trig = "Tuning.newFromKey", name = "Tuning.newFromKey", dscr = "Snippet for Tuning.newFromKey, auto generated by SCNvim" }, {t("Tuning.newFromKey"),t("("),t("key:"),i(1, "nil"), t(")"),}),
s( {trig = "Tuning.default", name = "Tuning.default", dscr = "Snippet for Tuning.default, auto generated by SCNvim" }, {t("Tuning.default"),t("("),t("pitchesPerOctave:"),i(1, "nil"), t(")"),}),
s( {trig = "Tuning.et", name = "Tuning.et", dscr = "Snippet for Tuning.et, auto generated by SCNvim" }, {t("Tuning.et"),t("("),t("pitchesPerOctave:"),i(1, "12"), t(")"),}),
s( {trig = "Tuning.calcET", name = "Tuning.calcET", dscr = "Snippet for Tuning.calcET, auto generated by SCNvim" }, {t("Tuning.calcET"),t("("),t("pitchesPerOctave:"),i(1, "nil"), t(")"),}),
s( {trig = "Tuning.etName", name = "Tuning.etName", dscr = "Snippet for Tuning.etName, auto generated by SCNvim" }, {t("Tuning.etName"),t("("),t("pitchesPerOctave:"),i(1, "nil"), t(")"),}),
s( {trig = "Tuning.choose", name = "Tuning.choose", dscr = "Snippet for Tuning.choose, auto generated by SCNvim" }, {t("Tuning.choose"),t("("),t("size:"),i(1, "12"), t(")"),}),
s( {trig = "Tuning.chooseFromSelected", name = "Tuning.chooseFromSelected", dscr = "Snippet for Tuning.chooseFromSelected, auto generated by SCNvim" }, {t("Tuning.chooseFromSelected"),t("("),t("selectFunc:"),i(1, "nil"), t(")"),}),
s( {trig = "Tuning.names", name = "Tuning.names", dscr = "Snippet for Tuning.names, auto generated by SCNvim" }, {t("Tuning.names"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Tuning.directory", name = "Tuning.directory", dscr = "Snippet for Tuning.directory, auto generated by SCNvim" }, {t("Tuning.directory"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Tuning.initClass", name = "Tuning.initClass", dscr = "Snippet for Tuning.initClass, auto generated by SCNvim" }, {t("Tuning.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "TwoPole.ar", name = "TwoPole.ar", dscr = "Snippet for TwoPole.ar, auto generated by SCNvim" }, {t("TwoPole.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("radius:"),i(3, "0.8"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "TwoPole.kr", name = "TwoPole.kr", dscr = "Snippet for TwoPole.kr, auto generated by SCNvim" }, {t("TwoPole.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("radius:"),i(3, "0.8"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "TwoTube.ar", name = "TwoTube.ar", dscr = "Snippet for TwoTube.ar, auto generated by SCNvim" }, {t("TwoTube.ar"),t("("),t("input:"),i(1, "0"),t(", "), t("k:"),i(2, "0.01"),t(", "), t("loss:"),i(3, "1.0"),t(", "), t("d1length:"),i(4, "100"),t(", "), t("d2length:"),i(5, "100"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "TwoWayIdentityDictionary.new", name = "TwoWayIdentityDictionary.new", dscr = "Snippet for TwoWayIdentityDictionary.new, auto generated by SCNvim" }, {t("TwoWayIdentityDictionary.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UGen.new1", name = "UGen.new1", dscr = "Snippet for UGen.new1, auto generated by SCNvim" }, {t("UGen.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("args:"),i(2, "[]"), t(")"),}),
s( {trig = "UGen.newFromDesc", name = "UGen.newFromDesc", dscr = "Snippet for UGen.newFromDesc, auto generated by SCNvim" }, {t("UGen.newFromDesc"),t("("),t("rate:"),i(1, "nil"),t(", "), t("numOutputs:"),i(2, "nil"),t(", "), t("inputs:"),i(3, "nil"),t(", "), t("specialIndex:"),i(4, "nil"), t(")"),}),
s( {trig = "UGen.multiNew", name = "UGen.multiNew", dscr = "Snippet for UGen.multiNew, auto generated by SCNvim" }, {t("UGen.multiNew"),t("("),t("args:"),i(1, "[]"), t(")"),}),
s( {trig = "UGen.multiNewList", name = "UGen.multiNewList", dscr = "Snippet for UGen.multiNewList, auto generated by SCNvim" }, {t("UGen.multiNewList"),t("("),t("args:"),i(1, "nil"), t(")"),}),
s( {trig = "UGen.methodSelectorForRate", name = "UGen.methodSelectorForRate", dscr = "Snippet for UGen.methodSelectorForRate, auto generated by SCNvim" }, {t("UGen.methodSelectorForRate"),t("("),t("rate:"),i(1, "nil"), t(")"),}),
s( {trig = "UGen.replaceZeroesWithSilence", name = "UGen.replaceZeroesWithSilence", dscr = "Snippet for UGen.replaceZeroesWithSilence, auto generated by SCNvim" }, {t("UGen.replaceZeroesWithSilence"),t("("),t("array:"),i(1, "nil"), t(")"),}),
s( {trig = "UHJ2B.ar", name = "UHJ2B.ar", dscr = "Snippet for UHJ2B.ar, auto generated by SCNvim" }, {t("UHJ2B.ar"),t("("),t("ls:"),i(1, "nil"),t(", "), t("rs:"),i(2, "nil"), t(")"),}),
s( {trig = "UHJtoB.ar", name = "UHJtoB.ar", dscr = "Snippet for UHJtoB.ar, auto generated by SCNvim" }, {t("UHJtoB.ar"),t("("),t("leftsig:"),i(1, "nil"),t(", "), t("rightsig:"),i(2, "nil"), t(")"),}),
s( {trig = "URI.new", name = "URI.new", dscr = "Snippet for URI.new, auto generated by SCNvim" }, {t("URI.new"),t("("),t("validUriString:"),i(1, "nil"), t(")"),}),
s( {trig = "URI.fromLocalPath", name = "URI.fromLocalPath", dscr = "Snippet for URI.fromLocalPath, auto generated by SCNvim" }, {t("URI.fromLocalPath"),t("("),t("string:"),i(1, "nil"), t(")"),}),
s( {trig = "URI.tolerant", name = "URI.tolerant", dscr = "Snippet for URI.tolerant, auto generated by SCNvim" }, {t("URI.tolerant"),t("("),t("string:"),i(1, "nil"), t(")"),}),
s( {trig = "UnaryOpFunction.new", name = "UnaryOpFunction.new", dscr = "Snippet for UnaryOpFunction.new, auto generated by SCNvim" }, {t("UnaryOpFunction.new"),t("("),t("selector:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"), t(")"),}),
s( {trig = "UnaryOpPlug.new", name = "UnaryOpPlug.new", dscr = "Snippet for UnaryOpPlug.new, auto generated by SCNvim" }, {t("UnaryOpPlug.new"),t("("),t("operator:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"), t(")"),}),
s( {trig = "UnaryOpStream.new", name = "UnaryOpStream.new", dscr = "Snippet for UnaryOpStream.new, auto generated by SCNvim" }, {t("UnaryOpStream.new"),t("("),t("operator:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"), t(")"),}),
s( {trig = "UnaryOpUGen.new", name = "UnaryOpUGen.new", dscr = "Snippet for UnaryOpUGen.new, auto generated by SCNvim" }, {t("UnaryOpUGen.new"),t("("),t("selector:"),i(1, "nil"),t(", "), t("a:"),i(2, "nil"), t(")"),}),
s( {trig = "UniqueID.initClass", name = "UniqueID.initClass", dscr = "Snippet for UniqueID.initClass, auto generated by SCNvim" }, {t("UniqueID.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UniqueID.next", name = "UniqueID.next", dscr = "Snippet for UniqueID.next, auto generated by SCNvim" }, {t("UniqueID.next"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.initClass", name = "UnitTest.initClass", dscr = "Snippet for UnitTest.initClass, auto generated by SCNvim" }, {t("UnitTest.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.findTestClasses", name = "UnitTest.findTestClasses", dscr = "Snippet for UnitTest.findTestClasses, auto generated by SCNvim" }, {t("UnitTest.findTestClasses"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.runTest", name = "UnitTest.runTest", dscr = "Snippet for UnitTest.runTest, auto generated by SCNvim" }, {t("UnitTest.runTest"),t("("),t("methodName:"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.setUpClass", name = "UnitTest.setUpClass", dscr = "Snippet for UnitTest.setUpClass, auto generated by SCNvim" }, {t("UnitTest.setUpClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.tearDownClass", name = "UnitTest.tearDownClass", dscr = "Snippet for UnitTest.tearDownClass, auto generated by SCNvim" }, {t("UnitTest.tearDownClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.run", name = "UnitTest.run", dscr = "Snippet for UnitTest.run, auto generated by SCNvim" }, {t("UnitTest.run"),t("("),t("reset:"),i(1, "true"),t(", "), t("report:"),i(2, "true"), t(")"),}),
s( {trig = "UnitTest.runAll", name = "UnitTest.runAll", dscr = "Snippet for UnitTest.runAll, auto generated by SCNvim" }, {t("UnitTest.runAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.prRunAllTestMethods", name = "UnitTest.prRunAllTestMethods", dscr = "Snippet for UnitTest.prRunAllTestMethods, auto generated by SCNvim" }, {t("UnitTest.prRunAllTestMethods"),t("("),t("report:"),i(1, "true"), t(")"),}),
s( {trig = "UnitTest.prRunWithinSetUpClass", name = "UnitTest.prRunWithinSetUpClass", dscr = "Snippet for UnitTest.prRunWithinSetUpClass, auto generated by SCNvim" }, {t("UnitTest.prRunWithinSetUpClass"),t("("),t("func:"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.gui", name = "UnitTest.gui", dscr = "Snippet for UnitTest.gui, auto generated by SCNvim" }, {t("UnitTest.gui"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.runTestClassForClass", name = "UnitTest.runTestClassForClass", dscr = "Snippet for UnitTest.runTestClassForClass, auto generated by SCNvim" }, {t("UnitTest.runTestClassForClass"),t("("),t("class:"),i(1, "nil"),t(", "), t("reset:"),i(2, "true"),t(", "), t("report:"),i(3, "true"), t(")"),}),
s( {trig = "UnitTest.findTestClass", name = "UnitTest.findTestClass", dscr = "Snippet for UnitTest.findTestClass, auto generated by SCNvim" }, {t("UnitTest.findTestClass"),t("("),t("forClass:"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.report", name = "UnitTest.report", dscr = "Snippet for UnitTest.report, auto generated by SCNvim" }, {t("UnitTest.report"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.forkIfNeeded", name = "UnitTest.forkIfNeeded", dscr = "Snippet for UnitTest.forkIfNeeded, auto generated by SCNvim" }, {t("UnitTest.forkIfNeeded"),t("("),t("function:"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.findTestMethods", name = "UnitTest.findTestMethods", dscr = "Snippet for UnitTest.findTestMethods, auto generated by SCNvim" }, {t("UnitTest.findTestMethods"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.classesWithTests", name = "UnitTest.classesWithTests", dscr = "Snippet for UnitTest.classesWithTests, auto generated by SCNvim" }, {t("UnitTest.classesWithTests"),t("("),t("package:"),i(1, "Common"), t(")"),}),
s( {trig = "UnitTest.classesWithoutTests", name = "UnitTest.classesWithoutTests", dscr = "Snippet for UnitTest.classesWithoutTests, auto generated by SCNvim" }, {t("UnitTest.classesWithoutTests"),t("("),t("package:"),i(1, "Common"), t(")"),}),
s( {trig = "UnitTest.findTestedClass", name = "UnitTest.findTestedClass", dscr = "Snippet for UnitTest.findTestedClass, auto generated by SCNvim" }, {t("UnitTest.findTestedClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.untestedMethods", name = "UnitTest.untestedMethods", dscr = "Snippet for UnitTest.untestedMethods, auto generated by SCNvim" }, {t("UnitTest.untestedMethods"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.listUntestedMethods", name = "UnitTest.listUntestedMethods", dscr = "Snippet for UnitTest.listUntestedMethods, auto generated by SCNvim" }, {t("UnitTest.listUntestedMethods"),t("("),t("forClass:"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTest.reset", name = "UnitTest.reset", dscr = "Snippet for UnitTest.reset, auto generated by SCNvim" }, {t("UnitTest.reset"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTestGUI.new", name = "UnitTestGUI.new", dscr = "Snippet for UnitTestGUI.new, auto generated by SCNvim" }, {t("UnitTestGUI.new"),t("("),t("allTestClasses:"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTestResult.new", name = "UnitTestResult.new", dscr = "Snippet for UnitTestResult.new, auto generated by SCNvim" }, {t("UnitTestResult.new"),t("("),t("testClass:"),i(1, "nil"),t(", "), t("testMethod:"),i(2, "nil"),t(", "), t("message:"),i(3, ""),t(", "), t("details:"),i(4, "nil"),t(", "), t("debug:"),i(5, "nil"), t(")"),}),
s( {trig = "UnitTestScript.new", name = "UnitTestScript.new", dscr = "Snippet for UnitTestScript.new, auto generated by SCNvim" }, {t("UnitTestScript.new"),t("("),t("name:"),i(1, "nil"),t(", "), t("path:"),i(2, "nil"), t(")"),}),
s( {trig = "UnitTestScript.initClass", name = "UnitTestScript.initClass", dscr = "Snippet for UnitTestScript.initClass, auto generated by SCNvim" }, {t("UnitTestScript.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTestScript.runTest", name = "UnitTestScript.runTest", dscr = "Snippet for UnitTestScript.runTest, auto generated by SCNvim" }, {t("UnitTestScript.runTest"),t("("),t("scriptName:"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTestScript.findTestScripts", name = "UnitTestScript.findTestScripts", dscr = "Snippet for UnitTestScript.findTestScripts, auto generated by SCNvim" }, {t("UnitTestScript.findTestScripts"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnitTestScript.findTestMethods", name = "UnitTestScript.findTestMethods", dscr = "Snippet for UnitTestScript.findTestMethods, auto generated by SCNvim" }, {t("UnitTestScript.findTestMethods"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Unix.errno", name = "Unix.errno", dscr = "Snippet for Unix.errno, auto generated by SCNvim" }, {t("Unix.errno"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UnixFILE.closeAll", name = "UnixFILE.closeAll", dscr = "Snippet for UnixFILE.closeAll, auto generated by SCNvim" }, {t("UnixFILE.closeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Unpack1FFT.new", name = "Unpack1FFT.new", dscr = "Snippet for Unpack1FFT.new, auto generated by SCNvim" }, {t("Unpack1FFT.new"),t("("),t("chain:"),i(1, "nil"),t(", "), t("bufsize:"),i(2, "nil"),t(", "), t("binindex:"),i(3, "nil"),t(", "), t("whichmeasure:"),i(4, "0"), t(")"),}),
s( {trig = "UnpackFFT.new", name = "UnpackFFT.new", dscr = "Snippet for UnpackFFT.new, auto generated by SCNvim" }, {t("UnpackFFT.new"),t("("),t("chain:"),i(1, "nil"),t(", "), t("bufsize:"),i(2, "nil"),t(", "), t("frombin:"),i(3, "0"),t(", "), t("tobin:"),i(4, "nil"), t(")"),}),
s( {trig = "UserView.qtClass", name = "UserView.qtClass", dscr = "Snippet for UserView.qtClass, auto generated by SCNvim" }, {t("UserView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "UserView.new", name = "UserView.new", dscr = "Snippet for UserView.new, auto generated by SCNvim" }, {t("UserView.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "UserView.sizeHint", name = "UserView.sizeHint", dscr = "Snippet for UserView.sizeHint, auto generated by SCNvim" }, {t("UserView.sizeHint"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "VBAP.ar", name = "VBAP.ar", dscr = "Snippet for VBAP.ar, auto generated by SCNvim" }, {t("VBAP.ar"),t("("),t("numChans:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("bufnum:"),i(3, "nil"),t(", "), t("azimuth:"),i(4, "0.0"),t(", "), t("elevation:"),i(5, "1.0"),t(", "), t("spread:"),i(6, "0.0"), t(")"),}),
s( {trig = "VBAP.kr", name = "VBAP.kr", dscr = "Snippet for VBAP.kr, auto generated by SCNvim" }, {t("VBAP.kr"),t("("),t("numChans:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("bufnum:"),i(3, "nil"),t(", "), t("azimuth:"),i(4, "0.0"),t(", "), t("elevation:"),i(5, "1.0"),t(", "), t("spread:"),i(6, "0.0"), t(")"),}),
s( {trig = "VBAPSpeaker.new", name = "VBAPSpeaker.new", dscr = "Snippet for VBAPSpeaker.new, auto generated by SCNvim" }, {t("VBAPSpeaker.new"),t("("),t("azi:"),i(1, "nil"),t(", "), t("ele:"),i(2, "nil"), t(")"),}),
s( {trig = "VBAPSpeakerArray.new", name = "VBAPSpeakerArray.new", dscr = "Snippet for VBAPSpeakerArray.new, auto generated by SCNvim" }, {t("VBAPSpeakerArray.new"),t("("),t("dim:"),i(1, "nil"),t(", "), t("directions:"),i(2, "nil"), t(")"),}),
s( {trig = "VBAPSpeakerSet.new", name = "VBAPSpeakerSet.new", dscr = "Snippet for VBAPSpeakerSet.new, auto generated by SCNvim" }, {t("VBAPSpeakerSet.new"),t("("),t("chanOffsets:"),i(1, "nil"), t(")"),}),
s( {trig = "VDiskIn.ar", name = "VDiskIn.ar", dscr = "Snippet for VDiskIn.ar, auto generated by SCNvim" }, {t("VDiskIn.ar"),t("("),t("numChannels:"),i(1, "nil"),t(", "), t("bufnum:"),i(2, "nil"),t(", "), t("rate:"),i(3, "1"),t(", "), t("loop:"),i(4, "0"),t(", "), t("sendID:"),i(5, "0"), t(")"),}),
s( {trig = "VLayout.qtClass", name = "VLayout.qtClass", dscr = "Snippet for VLayout.qtClass, auto generated by SCNvim" }, {t("VLayout.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "VLayoutView.qtClass", name = "VLayoutView.qtClass", dscr = "Snippet for VLayoutView.qtClass, auto generated by SCNvim" }, {t("VLayoutView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "VMScan2D.ar", name = "VMScan2D.ar", dscr = "Snippet for VMScan2D.ar, auto generated by SCNvim" }, {t("VMScan2D.ar"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("mul:"),i(2, "1.0"),t(", "), t("add:"),i(3, "0.0"), t(")"),}),
s( {trig = "VOSIM.ar", name = "VOSIM.ar", dscr = "Snippet for VOSIM.ar, auto generated by SCNvim" }, {t("VOSIM.ar"),t("("),t("trig:"),i(1, "0.1"),t(", "), t("freq:"),i(2, "400.0"),t(", "), t("nCycles:"),i(3, "1"),t(", "), t("decay:"),i(4, "0.9"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "VOsc.ar", name = "VOsc.ar", dscr = "Snippet for VOsc.ar, auto generated by SCNvim" }, {t("VOsc.ar"),t("("),t("bufpos:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "VOsc.kr", name = "VOsc.kr", dscr = "Snippet for VOsc.kr, auto generated by SCNvim" }, {t("VOsc.kr"),t("("),t("bufpos:"),i(1, "nil"),t(", "), t("freq:"),i(2, "440.0"),t(", "), t("phase:"),i(3, "0.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "VOsc3.ar", name = "VOsc3.ar", dscr = "Snippet for VOsc3.ar, auto generated by SCNvim" }, {t("VOsc3.ar"),t("("),t("bufpos:"),i(1, "nil"),t(", "), t("freq1:"),i(2, "110.0"),t(", "), t("freq2:"),i(3, "220.0"),t(", "), t("freq3:"),i(4, "440.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "VOsc3.kr", name = "VOsc3.kr", dscr = "Snippet for VOsc3.kr, auto generated by SCNvim" }, {t("VOsc3.kr"),t("("),t("bufpos:"),i(1, "nil"),t(", "), t("freq1:"),i(2, "110.0"),t(", "), t("freq2:"),i(3, "220.0"),t(", "), t("freq3:"),i(4, "440.0"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "VarLag.ar", name = "VarLag.ar", dscr = "Snippet for VarLag.ar, auto generated by SCNvim" }, {t("VarLag.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("time:"),i(2, "0.1"),t(", "), t("curvature:"),i(3, "0"),t(", "), t("warp:"),i(4, "5"),t(", "), t("start:"),i(5, "nil"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "VarLag.kr", name = "VarLag.kr", dscr = "Snippet for VarLag.kr, auto generated by SCNvim" }, {t("VarLag.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("time:"),i(2, "0.1"),t(", "), t("curvature:"),i(3, "0"),t(", "), t("warp:"),i(4, "5"),t(", "), t("start:"),i(5, "nil"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "VarLag.new1", name = "VarLag.new1", dscr = "Snippet for VarLag.new1, auto generated by SCNvim" }, {t("VarLag.new1"),t("("),t("rate:"),i(1, "nil"),t(", "), t("in:"),i(2, "nil"),t(", "), t("time:"),i(3, "nil"),t(", "), t("curvature:"),i(4, "nil"),t(", "), t("warp:"),i(5, "nil"),t(", "), t("start:"),i(6, "nil"), t(")"),}),
s( {trig = "VarSaw.ar", name = "VarSaw.ar", dscr = "Snippet for VarSaw.ar, auto generated by SCNvim" }, {t("VarSaw.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("iphase:"),i(2, "0.0"),t(", "), t("width:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "VarSaw.kr", name = "VarSaw.kr", dscr = "Snippet for VarSaw.kr, auto generated by SCNvim" }, {t("VarSaw.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("iphase:"),i(2, "0.0"),t(", "), t("width:"),i(3, "0.5"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Vibrato.ar", name = "Vibrato.ar", dscr = "Snippet for Vibrato.ar, auto generated by SCNvim" }, {t("Vibrato.ar"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("rate:"),i(2, "6"),t(", "), t("depth:"),i(3, "0.02"),t(", "), t("delay:"),i(4, "0.0"),t(", "), t("onset:"),i(5, "0.0"),t(", "), t("rateVariation:"),i(6, "0.04"),t(", "), t("depthVariation:"),i(7, "0.1"),t(", "), t("iphase:"),i(8, "0.0"),t(", "), t("trig:"),i(9, "0.0"), t(")"),}),
s( {trig = "Vibrato.kr", name = "Vibrato.kr", dscr = "Snippet for Vibrato.kr, auto generated by SCNvim" }, {t("Vibrato.kr"),t("("),t("freq:"),i(1, "440.0"),t(", "), t("rate:"),i(2, "6"),t(", "), t("depth:"),i(3, "0.02"),t(", "), t("delay:"),i(4, "0.0"),t(", "), t("onset:"),i(5, "0.0"),t(", "), t("rateVariation:"),i(6, "0.04"),t(", "), t("depthVariation:"),i(7, "0.1"),t(", "), t("iphase:"),i(8, "0.0"),t(", "), t("trig:"),i(9, "0.0"), t(")"),}),
s( {trig = "View.initClass", name = "View.initClass", dscr = "Snippet for View.initClass, auto generated by SCNvim" }, {t("View.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "View.new", name = "View.new", dscr = "Snippet for View.new, auto generated by SCNvim" }, {t("View.new"),t("("),t("parent:"),i(1, "nil"),t(", "), t("bounds:"),i(2, "nil"), t(")"),}),
s( {trig = "View.newCustom", name = "View.newCustom", dscr = "Snippet for View.newCustom, auto generated by SCNvim" }, {t("View.newCustom"),t("("),t("customArgs:"),i(1, "nil"), t(")"),}),
s( {trig = "View.qtClass", name = "View.qtClass", dscr = "Snippet for View.qtClass, auto generated by SCNvim" }, {t("View.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "View.globalKeyDownAction_", name = "View.globalKeyDownAction_", dscr = "Snippet for View.globalKeyDownAction_, auto generated by SCNvim" }, {t("View.globalKeyDownAction_"),t("("),t("action:"),i(1, "nil"), t(")"),}),
s( {trig = "View.globalKeyUpAction_", name = "View.globalKeyUpAction_", dscr = "Snippet for View.globalKeyUpAction_, auto generated by SCNvim" }, {t("View.globalKeyUpAction_"),t("("),t("action:"),i(1, "nil"), t(")"),}),
s( {trig = "View.prSetCurrentDrag", name = "View.prSetCurrentDrag", dscr = "Snippet for View.prSetCurrentDrag, auto generated by SCNvim" }, {t("View.prSetCurrentDrag"),t("("),t("obj:"),i(1, "nil"), t(")"),}),
s( {trig = "View.prClearCurrentDrag", name = "View.prClearCurrentDrag", dscr = "Snippet for View.prClearCurrentDrag, auto generated by SCNvim" }, {t("View.prClearCurrentDrag"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "View.setGlobalEventEnabled", name = "View.setGlobalEventEnabled", dscr = "Snippet for View.setGlobalEventEnabled, auto generated by SCNvim" }, {t("View.setGlobalEventEnabled"),t("("),t("event:"),i(1, "nil"),t(", "), t("enabled:"),i(2, "nil"), t(")"),}),
s( {trig = "View.prInsertMenuAction", name = "View.prInsertMenuAction", dscr = "Snippet for View.prInsertMenuAction, auto generated by SCNvim" }, {t("View.prInsertMenuAction"),t("("),t("view:"),i(1, "nil"),t(", "), t("action:"),i(2, "nil"),t(", "), t("addBefore:"),i(3, "nil"), t(")"),}),
s( {trig = "View.prRemoveMenuAction", name = "View.prRemoveMenuAction", dscr = "Snippet for View.prRemoveMenuAction, auto generated by SCNvim" }, {t("View.prRemoveMenuAction"),t("("),t("view:"),i(1, "nil"),t(", "), t("action:"),i(2, "nil"), t(")"),}),
s( {trig = "View.prRemoveAllMenuActions", name = "View.prRemoveAllMenuActions", dscr = "Snippet for View.prRemoveAllMenuActions, auto generated by SCNvim" }, {t("View.prRemoveAllMenuActions"),t("("),t("view:"),i(1, "nil"), t(")"),}),
s( {trig = "View.nonimpl", name = "View.nonimpl", dscr = "Snippet for View.nonimpl, auto generated by SCNvim" }, {t("View.nonimpl"),t("("),t("methodName:"),i(1, "nil"), t(")"),}),
s( {trig = "View.debug", name = "View.debug", dscr = "Snippet for View.debug, auto generated by SCNvim" }, {t("View.debug"),t("("),t("level:"),i(1, "1"),t(", "), t("msg:"),i(2, ""), t(")"),}),
s( {trig = "Vocode.ar", name = "Vocode.ar", dscr = "Snippet for Vocode.ar, auto generated by SCNvim" }, {t("Vocode.ar"),t("("),t("src:"),i(1, "nil"),t(", "), t("harm:"),i(2, "nil"),t(", "), t("noise:"),i(3, "nil"),t(", "), t("anabwscale:"),i(4, "0.5"),t(", "), t("outbw:"),i(5, "0.01"),t(", "), t("freqmul:"),i(6, "1"),t(", "), t("mul:"),i(7, "1"),t(", "), t("add:"),i(8, "0"), t(")"),}),
s( {trig = "VocodeBand.ar", name = "VocodeBand.ar", dscr = "Snippet for VocodeBand.ar, auto generated by SCNvim" }, {t("VocodeBand.ar"),t("("),t("src:"),i(1, "nil"),t(", "), t("band:"),i(2, "0"),t(", "), t("harm:"),i(3, "nil"),t(", "), t("noise:"),i(4, "nil"),t(", "), t("anabwscale:"),i(5, "0.5"),t(", "), t("outbw:"),i(6, "0.01"),t(", "), t("freqmul:"),i(7, "1"),t(", "), t("mul:"),i(8, "1"),t(", "), t("add:"),i(9, "0"), t(")"),}),
s( {trig = "Vocoder.ar", name = "Vocoder.ar", dscr = "Snippet for Vocoder.ar, auto generated by SCNvim" }, {t("Vocoder.ar"),t("("),t("car:"),i(1, "nil"),t(", "), t("mod:"),i(2, "nil"),t(", "), t("num:"),i(3, "nil"),t(", "), t("low:"),i(4, "100"),t(", "), t("high:"),i(5, "5000"),t(", "), t("q:"),i(6, "0.02"),t(", "), t("hpf:"),i(7, "5000"),t(", "), t("hpfscal:"),i(8, "0.05"),t(", "), t("outscal:"),i(9, "25"), t(")"),}),
s( {trig = "Vocoder.bark", name = "Vocoder.bark", dscr = "Snippet for Vocoder.bark, auto generated by SCNvim" }, {t("Vocoder.bark"),t("("),t("signal:"),i(1, "nil"),t(", "), t("input:"),i(2, "nil"),t(", "), t("mull:"),i(3, "10"), t(")"),}),
s( {trig = "Volume.new", name = "Volume.new", dscr = "Snippet for Volume.new, auto generated by SCNvim" }, {t("Volume.new"),t("("),t("server:"),i(1, "nil"),t(", "), t("startBus:"),i(2, "0"),t(", "), t("numChannels:"),i(3, "nil"),t(", "), t("min:"),i(4, "-90"),t(", "), t("max:"),i(5, "6"),t(", "), t("persist:"),i(6, "false"), t(")"),}),
s( {trig = "VolumeGui.new", name = "VolumeGui.new", dscr = "Snippet for VolumeGui.new, auto generated by SCNvim" }, {t("VolumeGui.new"),t("("),t("model:"),i(1, "nil"),t(", "), t("win:"),i(2, "nil"),t(", "), t("bounds:"),i(3, "nil"), t(")"),}),
s( {trig = "WAmp.kr", name = "WAmp.kr", dscr = "Snippet for WAmp.kr, auto generated by SCNvim" }, {t("WAmp.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("winSize:"),i(2, "0.1"), t(")"),}),
s( {trig = "WalshHadamard.ar", name = "WalshHadamard.ar", dscr = "Snippet for WalshHadamard.ar, auto generated by SCNvim" }, {t("WalshHadamard.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("which:"),i(2, "0"),t(", "), t("mul:"),i(3, "1.0"),t(", "), t("add:"),i(4, "0.0"), t(")"),}),
s( {trig = "Warp.new", name = "Warp.new", dscr = "Snippet for Warp.new, auto generated by SCNvim" }, {t("Warp.new"),t("("),t("spec:"),i(1, "nil"), t(")"),}),
s( {trig = "Warp.asWarp", name = "Warp.asWarp", dscr = "Snippet for Warp.asWarp, auto generated by SCNvim" }, {t("Warp.asWarp"),t("("),t("spec:"),i(1, "nil"), t(")"),}),
s( {trig = "Warp.initClass", name = "Warp.initClass", dscr = "Snippet for Warp.initClass, auto generated by SCNvim" }, {t("Warp.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Warp1.ar", name = "Warp1.ar", dscr = "Snippet for Warp1.ar, auto generated by SCNvim" }, {t("Warp1.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("pointer:"),i(3, "0"),t(", "), t("freqScale:"),i(4, "1"),t(", "), t("windowSize:"),i(5, "0.2"),t(", "), t("envbufnum:"),i(6, "-1"),t(", "), t("overlaps:"),i(7, "8"),t(", "), t("windowRandRatio:"),i(8, "0.0"),t(", "), t("interp:"),i(9, "1"),t(", "), t("mul:"),i(10, "1"),t(", "), t("add:"),i(11, "0"), t(")"),}),
s( {trig = "WarpOverlap.ar", name = "WarpOverlap.ar", dscr = "Snippet for WarpOverlap.ar, auto generated by SCNvim" }, {t("WarpOverlap.ar"),t("("),t("numChans:"),i(1, "1"),t(", "), t("buffer:"),i(2, "nil"),t(", "), t("overlaps:"),i(3, "4"),t(", "), t("starttime:"),i(4, "0"),t(", "), t("stretch:"),i(5, "1"),t(", "), t("harm:"),i(6, "1"),t(", "), t("windowsize:"),i(7, "6"),t(", "), t("step:"),i(8, "1"),t(", "), t("warpwindowsize:"),i(9, "0.11"),t(", "), t("warpwindowoverlaps:"),i(10, "8"),t(", "), t("warpwindowran:"),i(11, "0.1"),t(", "), t("mul:"),i(12, "1"),t(", "), t("add:"),i(13, "0"), t(")"),}),
s( {trig = "WarpZ.ar", name = "WarpZ.ar", dscr = "Snippet for WarpZ.ar, auto generated by SCNvim" }, {t("WarpZ.ar"),t("("),t("numChannels:"),i(1, "1"),t(", "), t("bufnum:"),i(2, "0"),t(", "), t("pointer:"),i(3, "0"),t(", "), t("freqScale:"),i(4, "1"),t(", "), t("windowSize:"),i(5, "0.2"),t(", "), t("envbufnum:"),i(6, "-1"),t(", "), t("overlaps:"),i(7, "8"),t(", "), t("windowRandRatio:"),i(8, "0.0"),t(", "), t("interp:"),i(9, "1"),t(", "), t("zeroSearch:"),i(10, "0"),t(", "), t("zeroStart:"),i(11, "0"),t(", "), t("mul:"),i(12, "1"),t(", "), t("add:"),i(13, "0"), t(")"),}),
s( {trig = "WaveLoss.ar", name = "WaveLoss.ar", dscr = "Snippet for WaveLoss.ar, auto generated by SCNvim" }, {t("WaveLoss.ar"),t("("),t("in:"),i(1, "0.0"),t(", "), t("drop:"),i(2, "20"),t(", "), t("outof:"),i(3, "40"),t(", "), t("mode:"),i(4, "1"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "WaveLoss.kr", name = "WaveLoss.kr", dscr = "Snippet for WaveLoss.kr, auto generated by SCNvim" }, {t("WaveLoss.kr"),t("("),t("in:"),i(1, "0.0"),t(", "), t("drop:"),i(2, "20"),t(", "), t("outof:"),i(3, "40"),t(", "), t("mode:"),i(4, "1"),t(", "), t("mul:"),i(5, "1.0"),t(", "), t("add:"),i(6, "0.0"), t(")"),}),
s( {trig = "WaveLoss.categories", name = "WaveLoss.categories", dscr = "Snippet for WaveLoss.categories, auto generated by SCNvim" }, {t("WaveLoss.categories"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "WaveTerrain.ar", name = "WaveTerrain.ar", dscr = "Snippet for WaveTerrain.ar, auto generated by SCNvim" }, {t("WaveTerrain.ar"),t("("),t("bufnum:"),i(1, "0"),t(", "), t("x:"),i(2, "nil"),t(", "), t("y:"),i(3, "nil"),t(", "), t("xsize:"),i(4, "100"),t(", "), t("ysize:"),i(5, "100"),t(", "), t("mul:"),i(6, "1.0"),t(", "), t("add:"),i(7, "0.0"), t(")"),}),
s( {trig = "WaveletDaub.ar", name = "WaveletDaub.ar", dscr = "Snippet for WaveletDaub.ar, auto generated by SCNvim" }, {t("WaveletDaub.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("n:"),i(2, "64"),t(", "), t("which:"),i(3, "0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"), t(")"),}),
s( {trig = "Wavetable.new", name = "Wavetable.new", dscr = "Snippet for Wavetable.new, auto generated by SCNvim" }, {t("Wavetable.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Wavetable.newClear", name = "Wavetable.newClear", dscr = "Snippet for Wavetable.newClear, auto generated by SCNvim" }, {t("Wavetable.newClear"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Wavetable.sineFill", name = "Wavetable.sineFill", dscr = "Snippet for Wavetable.sineFill, auto generated by SCNvim" }, {t("Wavetable.sineFill"),t("("),t("size:"),i(1, "nil"),t(", "), t("amplitudes:"),i(2, "nil"),t(", "), t("phases:"),i(3, "nil"), t(")"),}),
s( {trig = "Wavetable.chebyFill", name = "Wavetable.chebyFill", dscr = "Snippet for Wavetable.chebyFill, auto generated by SCNvim" }, {t("Wavetable.chebyFill"),t("("),t("size:"),i(1, "nil"),t(", "), t("amplitudes:"),i(2, "nil"),t(", "), t("normalize:"),i(3, "true"),t(", "), t("zeroOffset:"),i(4, "false"), t(")"),}),
s( {trig = "Wavetable.chebyFill_old", name = "Wavetable.chebyFill_old", dscr = "Snippet for Wavetable.chebyFill_old, auto generated by SCNvim" }, {t("Wavetable.chebyFill_old"),t("("),t("size:"),i(1, "nil"),t(", "), t("amplitudes:"),i(2, "nil"), t(")"),}),
s( {trig = "Wavetable.readNew", name = "Wavetable.readNew", dscr = "Snippet for Wavetable.readNew, auto generated by SCNvim" }, {t("Wavetable.readNew"),t("("),t("file:"),i(1, "nil"), t(")"),}),
s( {trig = "WeaklyNonlinear.ar", name = "WeaklyNonlinear.ar", dscr = "Snippet for WeaklyNonlinear.ar, auto generated by SCNvim" }, {t("WeaklyNonlinear.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("reset:"),i(2, "0"),t(", "), t("ratex:"),i(3, "1"),t(", "), t("ratey:"),i(4, "1"),t(", "), t("freq:"),i(5, "440"),t(", "), t("initx:"),i(6, "0"),t(", "), t("inity:"),i(7, "0"),t(", "), t("alpha:"),i(8, "0"),t(", "), t("xexponent:"),i(9, "0"),t(", "), t("beta:"),i(10, "0"),t(", "), t("yexponent:"),i(11, "0"),t(", "), t("mul:"),i(12, "1.0"),t(", "), t("add:"),i(13, "0.0"), t(")"),}),
s( {trig = "WeaklyNonlinear2.ar", name = "WeaklyNonlinear2.ar", dscr = "Snippet for WeaklyNonlinear2.ar, auto generated by SCNvim" }, {t("WeaklyNonlinear2.ar"),t("("),t("input:"),i(1, "nil"),t(", "), t("reset:"),i(2, "0"),t(", "), t("ratex:"),i(3, "1"),t(", "), t("ratey:"),i(4, "1"),t(", "), t("freq:"),i(5, "440"),t(", "), t("initx:"),i(6, "0"),t(", "), t("inity:"),i(7, "0"),t(", "), t("alpha:"),i(8, "0"),t(", "), t("xexponent:"),i(9, "0"),t(", "), t("beta:"),i(10, "0"),t(", "), t("yexponent:"),i(11, "0"),t(", "), t("mul:"),i(12, "1.0"),t(", "), t("add:"),i(13, "0.0"), t(")"),}),
s( {trig = "WebView.qtClass", name = "WebView.qtClass", dscr = "Snippet for WebView.qtClass, auto generated by SCNvim" }, {t("WebView.qtClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "WebView.initClass", name = "WebView.initClass", dscr = "Snippet for WebView.initClass, auto generated by SCNvim" }, {t("WebView.initClass"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "WebView.setUrlHandler", name = "WebView.setUrlHandler", dscr = "Snippet for WebView.setUrlHandler, auto generated by SCNvim" }, {t("WebView.setUrlHandler"),t("("),t("prefix:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "WebView.prSetUrlHandler", name = "WebView.prSetUrlHandler", dscr = "Snippet for WebView.prSetUrlHandler, auto generated by SCNvim" }, {t("WebView.prSetUrlHandler"),t("("),t("prefix:"),i(1, "nil"),t(", "), t("function:"),i(2, "nil"), t(")"),}),
s( {trig = "WebView.clearCache", name = "WebView.clearCache", dscr = "Snippet for WebView.clearCache, auto generated by SCNvim" }, {t("WebView.clearCache"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "WeighBag.new", name = "WeighBag.new", dscr = "Snippet for WeighBag.new, auto generated by SCNvim" }, {t("WeighBag.new"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "WeighBag.with", name = "WeighBag.with", dscr = "Snippet for WeighBag.with, auto generated by SCNvim" }, {t("WeighBag.with"),t("("),t("items:"),i(1, "nil"),t(", "), t("weights:"),i(2, "nil"), t(")"),}),
s( {trig = "WhiteNoise.ar", name = "WhiteNoise.ar", dscr = "Snippet for WhiteNoise.ar, auto generated by SCNvim" }, {t("WhiteNoise.ar"),t("("),t("mul:"),i(1, "1.0"),t(", "), t("add:"),i(2, "0.0"), t(")"),}),
s( {trig = "WhiteNoise.kr", name = "WhiteNoise.kr", dscr = "Snippet for WhiteNoise.kr, auto generated by SCNvim" }, {t("WhiteNoise.kr"),t("("),t("mul:"),i(1, "1.0"),t(", "), t("add:"),i(2, "0.0"), t(")"),}),
s( {trig = "Window.screenBounds", name = "Window.screenBounds", dscr = "Snippet for Window.screenBounds, auto generated by SCNvim" }, {t("Window.screenBounds"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Window.availableBounds", name = "Window.availableBounds", dscr = "Snippet for Window.availableBounds, auto generated by SCNvim" }, {t("Window.availableBounds"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Window.closeAll", name = "Window.closeAll", dscr = "Snippet for Window.closeAll, auto generated by SCNvim" }, {t("Window.closeAll"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "Window.new", name = "Window.new", dscr = "Snippet for Window.new, auto generated by SCNvim" }, {t("Window.new"),t("("),t("name:"),i(1, ""),t(", "), t("bounds:"),i(2, "nil"),t(", "), t("resizable:"),i(3, "true"),t(", "), t("border:"),i(4, "true"),t(", "), t("deprecatedServerArgument:"),i(5, "nil"),t(", "), t("scroll:"),i(6, "false"), t(")"),}),
s( {trig = "Window.flipY", name = "Window.flipY", dscr = "Snippet for Window.flipY, auto generated by SCNvim" }, {t("Window.flipY"),t("("),t("aRect:"),i(1, "nil"), t(")"),}),
s( {trig = "Window.addWindow", name = "Window.addWindow", dscr = "Snippet for Window.addWindow, auto generated by SCNvim" }, {t("Window.addWindow"),t("("),t("window:"),i(1, "nil"), t(")"),}),
s( {trig = "Window.removeWindow", name = "Window.removeWindow", dscr = "Snippet for Window.removeWindow, auto generated by SCNvim" }, {t("Window.removeWindow"),t("("),t("window:"),i(1, "nil"), t(")"),}),
s( {trig = "WrapSummer.ar", name = "WrapSummer.ar", dscr = "Snippet for WrapSummer.ar, auto generated by SCNvim" }, {t("WrapSummer.ar"),t("("),t("trig:"),i(1, "0"),t(", "), t("step:"),i(2, "1"),t(", "), t("min:"),i(3, "0"),t(", "), t("max:"),i(4, "1"),t(", "), t("reset:"),i(5, "0"),t(", "), t("resetval:"),i(6, "nil"), t(")"),}),
s( {trig = "WrapSummer.kr", name = "WrapSummer.kr", dscr = "Snippet for WrapSummer.kr, auto generated by SCNvim" }, {t("WrapSummer.kr"),t("("),t("trig:"),i(1, "0"),t(", "), t("step:"),i(2, "1"),t(", "), t("min:"),i(3, "0"),t(", "), t("max:"),i(4, "1"),t(", "), t("reset:"),i(5, "0"),t(", "), t("resetval:"),i(6, "nil"), t(")"),}),
s( {trig = "XFade2.ar", name = "XFade2.ar", dscr = "Snippet for XFade2.ar, auto generated by SCNvim" }, {t("XFade2.ar"),t("("),t("inA:"),i(1, "nil"),t(", "), t("inB:"),i(2, "0.0"),t(", "), t("pan:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"), t(")"),}),
s( {trig = "XFade2.kr", name = "XFade2.kr", dscr = "Snippet for XFade2.kr, auto generated by SCNvim" }, {t("XFade2.kr"),t("("),t("inA:"),i(1, "nil"),t(", "), t("inB:"),i(2, "0.0"),t(", "), t("pan:"),i(3, "0.0"),t(", "), t("level:"),i(4, "1.0"), t(")"),}),
s( {trig = "XIn.ar", name = "XIn.ar", dscr = "Snippet for XIn.ar, auto generated by SCNvim" }, {t("XIn.ar"),t("("),t("which:"),i(1, "nil"),t(", "), t("n:"),i(2, "nil"), t(")"),}),
s( {trig = "XIn.kr", name = "XIn.kr", dscr = "Snippet for XIn.kr, auto generated by SCNvim" }, {t("XIn.kr"),t("("),t("which:"),i(1, "nil"),t(", "), t("n:"),i(2, "nil"), t(")"),}),
s( {trig = "XInFeedback.ar", name = "XInFeedback.ar", dscr = "Snippet for XInFeedback.ar, auto generated by SCNvim" }, {t("XInFeedback.ar"),t("("),t("which:"),i(1, "nil"),t(", "), t("n:"),i(2, "nil"), t(")"),}),
s( {trig = "XLine.ar", name = "XLine.ar", dscr = "Snippet for XLine.ar, auto generated by SCNvim" }, {t("XLine.ar"),t("("),t("start:"),i(1, "1.0"),t(", "), t("end:"),i(2, "2.0"),t(", "), t("dur:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"),t(", "), t("doneAction:"),i(6, "0"), t(")"),}),
s( {trig = "XLine.kr", name = "XLine.kr", dscr = "Snippet for XLine.kr, auto generated by SCNvim" }, {t("XLine.kr"),t("("),t("start:"),i(1, "1.0"),t(", "), t("end:"),i(2, "2.0"),t(", "), t("dur:"),i(3, "1.0"),t(", "), t("mul:"),i(4, "1.0"),t(", "), t("add:"),i(5, "0.0"),t(", "), t("doneAction:"),i(6, "0"), t(")"),}),
s( {trig = "XOut.ar", name = "XOut.ar", dscr = "Snippet for XOut.ar, auto generated by SCNvim" }, {t("XOut.ar"),t("("),t("bus:"),i(1, "nil"),t(", "), t("xfade:"),i(2, "nil"),t(", "), t("channelsArray:"),i(3, "nil"), t(")"),}),
s( {trig = "XOut.kr", name = "XOut.kr", dscr = "Snippet for XOut.kr, auto generated by SCNvim" }, {t("XOut.kr"),t("("),t("bus:"),i(1, "nil"),t(", "), t("xfade:"),i(2, "nil"),t(", "), t("channelsArray:"),i(3, "nil"), t(")"),}),
s( {trig = "XOut.numFixedArgs", name = "XOut.numFixedArgs", dscr = "Snippet for XOut.numFixedArgs, auto generated by SCNvim" }, {t("XOut.numFixedArgs"),t("("),t(":"),i(1, "nil"), t(")"),}),
s( {trig = "ZHPF.ar", name = "ZHPF.ar", dscr = "Snippet for ZHPF.ar, auto generated by SCNvim" }, {t("ZHPF.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("fc:"),i(2, "440"),t(", "), t("damping:"),i(3, "0.707"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "ZLPF.ar", name = "ZLPF.ar", dscr = "Snippet for ZLPF.ar, auto generated by SCNvim" }, {t("ZLPF.ar"),t("("),t("in:"),i(1, "nil"),t(", "), t("fc:"),i(2, "440"),t(", "), t("damping:"),i(3, "0.707"),t(", "), t("mul:"),i(4, "1"),t(", "), t("add:"),i(5, "0"), t(")"),}),
s( {trig = "ZPoint.new", name = "ZPoint.new", dscr = "Snippet for ZPoint.new, auto generated by SCNvim" }, {t("ZPoint.new"),t("("),t("argx:"),i(1, "0.0"),t(", "), t("argy:"),i(2, "0.0"),t(", "), t("argz:"),i(3, "0.0"), t(")"),}),
s( {trig = "ZPolar.new", name = "ZPolar.new", dscr = "Snippet for ZPolar.new, auto generated by SCNvim" }, {t("ZPolar.new"),t("("),t("argrho:"),i(1, "0.0"),t(", "), t("argtheta:"),i(2, "0.0"),t(", "), t("argphi:"),i(3, "0.0"), t(")"),}),
s( {trig = "ZeroCrossing.ar", name = "ZeroCrossing.ar", dscr = "Snippet for ZeroCrossing.ar, auto generated by SCNvim" }, {t("ZeroCrossing.ar"),t("("),t("in:"),i(1, "0.0"), t(")"),}),
s( {trig = "ZeroCrossing.kr", name = "ZeroCrossing.kr", dscr = "Snippet for ZeroCrossing.kr, auto generated by SCNvim" }, {t("ZeroCrossing.kr"),t("("),t("in:"),i(1, "0.0"), t(")"),}),
}
return snippets
